#Region ;**** Directives created by AutoIt3Wrapper_GUI ****
#AutoIt3Wrapper_Icon=..\..\Icono.ico
#AutoIt3Wrapper_Compression=3
#AutoIt3Wrapper_UseX64=y
#AutoIt3Wrapper_Res_Comment=Mundo Celular Team Utility for Smartphone
#AutoIt3Wrapper_Res_Fileversion=5.1.4.0
#AutoIt3Wrapper_Res_ProductName=MCU Tool
#AutoIt3Wrapper_Res_ProductVersion=5.1.4
#AutoIt3Wrapper_Res_CompanyName=Mundo Celular
#AutoIt3Wrapper_Res_LegalCopyright=Mundo Celular Team
#AutoIt3Wrapper_Res_Language=2058
#AutoIt3Wrapper_Res_requestedExecutionLevel=requireAdministrator
#EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****

#Region Includes
#include <Date.au3>
#include <InetConstants.au3>
#include <MsgBoxConstants.au3>
#include <GDIPlus.au3>
#include <File.au3>
#include <Math.au3>
#include <String.au3>
#Include <WinAPI.au3>
#include <CommMG64.au3>
#include <Misc.au3>
#include <GuiEdit.au3>
#include <AutoItConstants.au3>
#include <APIDiagConstants.au3>
#include <Zip.au3>
#include <_RegEnumKeyValEx.au3>
#include <AVIConstants.au3>
#include <TreeViewConstants.au3>
#include <ScrollBarsConstants.au3>
#include <Android.au3>
#include <ButtonConstants.au3>
#include <ComboConstants.au3>
#include <EditConstants.au3>
#include <GUIConstantsEx.au3>
#include <ListViewConstants.au3>
#include <StaticConstants.au3>
#include <TabConstants.au3>
#include <WindowsConstants.au3>
#include <GuiStatusBar.au3>
#include <GuiListView.au3>
#include <GuiTab.au3>
#include <WinAPIDiag.au3>
#include <Array.au3>
#include <Misc.au3>
#include <GUIListBox.au3>
#include <APIDiagConstants.au3>
#include <Crypt.au3>
#include <StringConstants.au3>
#include <WinAPIFiles.au3>
#include "includes/GIFAnimation.au3"
#include 'includes/ADB.au3'
#include 'includes/Present.au3'
#include 'includes/BinaryCall.au3'
#include 'includes/JSON.au3'
#include 'includes/http.au3'
#include 'includes/Interpreter.au3'
#include 'includes/AKSEED.au3'
#include 'includes/READCERT.au3'
#include 'includes/Key.au3'
#include 'includes/decryptkey.au3'
#include 'includes/UnlockHelp.au3'
#include 'includes/ExtMsgBox.au3'
#include 'includes/ObfuscatedCalls.au3'
#include 'includes/GenerateCertQc.au3'
#EndRegion Includes

Global $credremain = ''
Global $fallow = 0
Global $SamArray [] = [""]

Global Const $DEBUG_IMAGE = True
Global Const $DEBUG_INTERNET = False

Global $username, $password
Global $ustost = RegRead("HKCU\Software\MCU", "us")
Global $usu = BinaryToString($ustost)
Global $pstost = RegRead("HKCU\Software\MCU", "ps")
Global $pss = BinaryToString($pstost)

Global $pro = ''
Global $etaelaversion = ''
Global $versionherramienta = '5.1.4'
Global $versionbeta = '0'
Global $sFileOpenDialog = ''
Global $Edit1 = ''
Global $ipid = ''
Global $permiso = '0'
Global $activo = ''
Global $showme = False
Global $imei = "nada"

Global Const $DEBUG_MODE = False ; Please change value to False when compile

Global Const $SERVER = 'https://usuarios.mcu-tool.com/index.php?act='
Global Const $SERVERLOG = 'https://registro.mcu-tool.com/index.php?act='
Global Const $ENDPOINT_LOGIN = $SERVER & 'login'
Global Const $ENDPOINT_ZTEZ835 = $SERVER & 'ztez835'
Global Const $ENDPOINT_ZTEMX = $SERVER & 'ztemx'
Global Const $ENDPOINT_LOGOUT = $SERVER & 'logout'
Global Const $ENDPOINT_CREATE = $SERVER & 'create'
Global Const $ENDPOINT_UPDATE = $SERVER & 'update'
Global Const $ENDPOINT_VERSION = $SERVER & 'version'
Global Const $ENDPOINT_READ = $SERVER & 'read'
Global Const $ENDPOINT_READNOCRED = $SERVER & 'readnocredit'
Global Const $ENDPOINT_READSAMSUNG = $SERVER & 'readsamsungsupported'
Global Const $ENDPOINT_DELETE = $SERVER & 'delete'
Global Const $ENDPOINT_ACTIVATE = $SERVER & 'activate'
Global Const $ENDPOINT_DEACTIVATE = $SERVER & 'deactivate'
Global Const $ENDPOINT_PASSWORD = $SERVER & 'password'
Global Const $ENDPOINT_HWID = $SERVER & 'hwid'
Global Const $ENDPOINT_HWIDCOUNT = $SERVER & 'hwidcounter'
Global Const $ENDPOINT_EMAIL = $SERVER & 'email'
Global Const $ENDPOINT_CREDIT = $SERVER & 'credit'
Global Const $ENDPOINT_RESELLERCREDIT = $SERVER & 'resellercredit'
Global Const $ENDPOINT_VERSREAD = $SERVER & 'readversion'
Global Const $ENDPOINT_DELIVERCOMMAND = $SERVER & 'shori'
Global Const $ENDPOINT_DELIVERCOMMANDO = $SERVER & 'chorizo'
Global Const $ENDPOINT_VERSCHANGE = $SERVER & 'changeversion'
Global Const $ENDPOINT_CREATELOG = $SERVERLOG & 'create'
Global Const $ENDPOINT_RECURRENCIA = $SERVERLOG & 'addimei'
Global Const $ENDPOINT_CHECKRECURRENCIA = $SERVERLOG & 'checkrecurrencia'
Global Const $ENDPOINT_DELETEREC = $SERVERLOG & 'delete'
Global $hardid =  _WinAPI_UniqueHardwareID()
Global $us = ''
Global $hwi = ''
Global $iniciate = 0
Global $decrypt = getkeydecrypt()
Global $iAlgorithm = getalgo()

If $DEBUG_IMAGE == True Then
	Global $iniciate = _Presentation()
EndIf

#Region ### START Koda GUI section ### Form=
Global $UIForm = GUICreate("MC-U Tool Access", 451, 372, -1, -1)
Global $RegisterTab = GUICtrlCreateTab(8, 8, 433, 329)
Global $LoginTabSheet = GUICtrlCreateTabItem("Login")
Global $InputUsername = GUICtrlCreateInput("", 116, 71, 273, 22)
GUICtrlSetData($InputUsername, $usu)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $userlabel = GUICtrlCreateLabel("Usuario", 20, 71, 59, 24)
GUICtrlSetFont(-1, 12, 400, 0, "MS Sans Serif")
Global $password = GUICtrlCreateLabel("Password", 19, 129, 73, 24)
GUICtrlSetFont(-1, 12, 400, 0, "MS Sans Serif")
Global $PasswordInput = GUICtrlCreateInput("", 117, 129, 273, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_PASSWORD))
GUICtrlSetData($PasswordInput, $pss)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $hwidlabel = GUICtrlCreateLabel("HWID", 22, 185, 48, 24)
GUICtrlSetFont(-1, 12, 400, 0, "MS Sans Serif")
Global $hwidInputLogin = GUICtrlCreateInput($hardid, 120, 184, 273, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_READONLY))
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $LoginButton = GUICtrlCreateButton("Login", 180, 257, 83, 25)
GUICtrlSetFont(-1, 10, 400, 0, "MS Sans Serif")
Global $CheckboxSaveLogin = GUICtrlCreateCheckbox("Save Login", 28, 257, 97, 17)
GUICtrlSetState(-1, $GUI_CHECKED)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $Idiomas = GUICtrlCreateCombo("English", 332, 257, 73, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
GUICtrlSetData($Idiomas, "Espanol")
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $RegisterTabSheet = GUICtrlCreateTabItem("Register")
Global $userLabelregistro = GUICtrlCreateLabel("User", 24, 48, 59, 24)
GUICtrlSetFont(-1, 12, 400, 0, "MS Sans Serif")
Global $UserInputRegistro = GUICtrlCreateInput("", 120, 48, 273, 22)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $PasswordLabelRegistro = GUICtrlCreateLabel("Password", 26, 96, 73, 24)
GUICtrlSetFont(-1, 12, 400, 0, "MS Sans Serif")
Global $PasswordInputRegistro = GUICtrlCreateInput("", 120, 96, 273, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_PASSWORD))
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $EmailLabelRegistro = GUICtrlCreateLabel("Email", 24, 192, 43, 24)
GUICtrlSetFont(-1, 12, 400, 0, "MS Sans Serif")
Global $EmailInputRegistro = GUICtrlCreateInput("", 120, 192, 273, 22)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $HwidLabelRegistro = GUICtrlCreateLabel("HWID", 24, 240, 48, 24)
GUICtrlSetFont(-1, 12, 400, 0, "MS Sans Serif")
Global $HwidInputRegistro = GUICtrlCreateInput($hardid, 120, 240, 273, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_READONLY))
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $RegisterButton = GUICtrlCreateButton("Create", 158, 296, 107, 25)
GUICtrlSetFont(-1, 10, 400, 0, "MS Sans Serif")
Global $s = GUICtrlCreateLabel("Password", 26, 144, 73, 24)
GUICtrlSetFont(-1, 12, 400, 0, "MS Sans Serif")
Global $PasswordInput1 = GUICtrlCreateInput("", 119, 146, 273, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_PASSWORD))
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
GUICtrlCreateTabItem("")
GUICtrlCreateStatusBar($UIForm, 260)
GUISetState(@SW_SHOW)
#EndRegion ### END Koda GUI section ###

Func SetSpanish()

	Global $iArray[1] = [""]
	If Not FileExists(@ScriptDir & "\Idioma\spanish.ini.mcu") Then
		$sDownloaderTitle = "Descargando Recursos"
		$url            = "http://mcu-tool.com/MCU-Tool Resources/Idioma/spanish.ini.mcu"
		$file           = "spanish.ini.mcu"
		$name           = "spanish.ini.mcu"
		$dir            = @ScriptDir & "\Idioma\"
		_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
	EndIf
	$ipid = _Crypt_DecryptFile(@ScriptDir & "\Idioma\spanish.ini.mcu", @ScriptDir & "\Idioma\spanish.ini", $decrypt, $iAlgorithm)
	ProcessWaitClose($ipid)
	Global $vIdioma = _FileCountLines( @ScriptDir & "\Idioma\spanish.ini")
	For $i = 1 to $vIdioma
		Global $line =  FileReadLine(@ScriptDir & "\Idioma\spanish.ini", $i)
		If StringInStr($line, "=") <> 0 Then
			Global $sfirst = StringSplit($line, "=")
			_ArrayAdd($iArray, $sfirst[2])
		EndIf
	Next
	FileDelete(@ScriptDir & "\Idioma\spanish.ini")

EndFunc

Func SetEnglish()

	Global $iArray[1] = [""]
	If Not FileExists(@ScriptDir & "\Idioma\english.ini.mcu") Then
		$sDownloaderTitle = "Descargando Recursos"
		$url            = "http://mcu-tool.com/MCU-Tool Resources/Idioma/english.ini.mcu"
		$file           = "english.ini.mcu"
		$name           = "english.ini.mcu"
		$dir            = @ScriptDir & "\Idioma\"
		_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
	EndIf
	$ipid = _Crypt_DecryptFile(@ScriptDir & "\Idioma\english.ini.mcu", @ScriptDir & "\Idioma\english.ini", $decrypt, $iAlgorithm)
	ProcessWaitClose($ipid)
	Global $vIdioma = _FileCountLines( @ScriptDir & "\Idioma\english.ini")
	For $i = 1 to $vIdioma
		Global $line =  FileReadLine(@ScriptDir & "\Idioma\english.ini", $i)
		If StringInStr($line, "=") <> 0 Then
			Global $sfirst = StringSplit($line, "=")
			_ArrayAdd($iArray, $sfirst[2])
		EndIf
	Next
	FileDelete(@ScriptDir & "\Idioma\english.ini")

EndFunc

Func SetLanguageProcess($identificador)

	If FileExists(@ScriptDir & "\Idioma\Functions\" & $identificador & ".ini.mcu") Then
		$ipid = _Crypt_DecryptFile(@ScriptDir & "\Idioma\Functions\" & $identificador & ".ini.mcu", @ScriptDir & "\Idioma\Functions\" & $identificador & ".ini", $decrypt, $iAlgorithm)
		ProcessWaitClose($ipid)
		Global $iArrayP[1] = [""]
		Global $vyIdioma = _FileCountLines( @ScriptDir & "\Idioma\Functions\" & $identificador & ".ini")
		For $i = 1 to $vyIdioma
			Global $linesxyz =  FileReadLine(@ScriptDir & "\Idioma\Functions\" & $identificador & ".ini", $i)
			_ArrayAdd($iArrayP, $linesxyz)
		Next
	 	FileDelete(@ScriptDir & "\Idioma\Functions\" & $identificador & ".ini")
		Return 0
	Else
		MsgBox(16, "MC-U Tool", "No se ecnontraron los recursos de idioma, los vamos a descargar!" & @CRLF & @CRLF & "Lenguage resources doesn't found, Downloading!", 5)
		Return 1
	EndIf

EndFunc

Func SetLanguageProcessCred($identificador)

	If FileExists(@ScriptDir & "\Idioma\Functions\" & $identificador & ".ini.mcu") Then
		$ipid = _Crypt_DecryptFile(@ScriptDir & "\Idioma\Functions\" & $identificador & ".ini.mcu", @ScriptDir & "\Idioma\Functions\" & $identificador & ".ini", $decrypt, $iAlgorithm)
		ProcessWaitClose($ipid)
		Global $iArrayPC[1] = [""]
		Global $vyIdioma = _FileCountLines( @ScriptDir & "\Idioma\Functions\" & $identificador & ".ini")
		For $i = 1 to $vyIdioma
			Global $linesxyz =  FileReadLine(@ScriptDir & "\Idioma\Functions\" & $identificador & ".ini", $i)
			_ArrayAdd($iArrayPC, $linesxyz)
		Next
	 	FileDelete(@ScriptDir & "\Idioma\Functions\" & $identificador & ".ini")
		Return 0
	Else
		MsgBox(16, "MC-U Tool", "No se ecnontraron los recursos de idioma, los vamos a descargar!" & @CRLF & @CRLF & "Lenguage resources doesn't found, Downloading!", 5)
		Return 1
	EndIf

EndFunc

Func SetLanguageProcessNoFunc($identificador)

	If FileExists(@ScriptDir & "\Idioma\Functions\" & $identificador & ".ini.mcu") Then
		$ipid = _Crypt_DecryptFile(@ScriptDir & "\Idioma\Functions\" & $identificador & ".ini.mcu", @ScriptDir & "\Idioma\Functions\" & $identificador & ".ini", $decrypt, $iAlgorithm)
		ProcessWaitClose($ipid)
		Global $iArrayPNF[1] = [""]
		Global $vyIdioma = _FileCountLines( @ScriptDir & "\Idioma\Functions\" & $identificador & ".ini")
		For $i = 1 to $vyIdioma
			Global $linesxyz =  FileReadLine(@ScriptDir & "\Idioma\Functions\" & $identificador & ".ini", $i)
			_ArrayAdd($iArrayPNF, $linesxyz)
		Next
	 	FileDelete(@ScriptDir & "\Idioma\Functions\" & $identificador & ".ini")
		Return 0
	Else
		MsgBox(16, "MC-U Tool", "No se ecnontraron los recursos de idioma, los vamos a descargar!" & @CRLF & @CRLF & "Lenguage resources doesn't found, Downloading!", 5)
		Return 1
	EndIf

EndFunc

Func getkeydecrypt()

	Global $ejec = "decrypt"
	Global Const $key = Auth()
	If $key == False Then
		MsgBox(16, "Error", "Dispositivo no autorizado!")
		Exit
	ElseIf $key == 0 Then
		MsgBox(16, "Error 0002", "Error obteniendo autorizacion!")
		Exit
	Else
		Global $var = shori($ejec, $key)
		Return $var
	EndIf

EndFunc

Func getalgo()

	Global $ejec = "ALGO"
	If $key == False Then
		MsgBox(16, "Error", "Dispositivo no autorizado!")
		Exit
	ElseIf $key == 0 Then
		MsgBox(16, "Error 0002", "Error obteniendo autorizacion!")
		Exit
	Else
		Global $var = shori($ejec, $key)
		Return $var
	EndIf

EndFunc

While 1
	If $iniciate == 1 Then
		ExitLoop
	EndIf
	global $nMsg = GUIGetMsg()
	Switch $nMsg
		Case $GUI_EVENT_CLOSE
			Exit

		Case $LoginButton
			If InitializeADB() = True Then
				Run("adb kill-server", "", @SW_HIDE)
				OpenAdb()
			EndIf
			If $DEBUG_INTERNET = True Then
				Global $serv = Conection()
				If $serv = False Then
					Exit
				EndIf
			EndIf
			If _IsChecked($CheckboxSaveLogin) Then
				$username = GUICtrlRead($InputUsername)
				$us = Binary($username)
				RegWrite("HKCU\Software\MCU", "us", "REG_BINARY", $us)
				$password = GUICtrlRead($PasswordInput)
				$ps = Binary($password)
				RegWrite("HKCU\Software\MCU", "ps", "REG_BINARY", $ps)
			Else
				$us = ""
				RegWrite("HKCU\Software\MCU", "us", "REG_BINARY", $us)
				$ps = ""
				RegWrite("HKCU\Software\MCU", "ps", "REG_BINARY", $ps)
			EndIf
			Local $puru = LastVersion()
			Local $pere = BetaVersion()
			If $puru <> $versionherramienta And $pere == $versionbeta Then
				Global $etaelaversion = $versionbeta
			Else
				Global $etaelaversion = $versionherramienta
			EndIf
			If $puru == $versionherramienta Or $pere == $versionbeta Then
				If ButtonLoginClick() == '1' Then
					Global Const $idiomadelaherramienta = GUICtrlRead($Idiomas)
					If $idiomadelaherramienta == "Espanol" Then
						SetSpanish()
						Global $indicator = 'es'
					Else
						SetEnglish()
						$indicator = 'en'
					EndIf
					Button1click()
				EndIf
			Else
				MsgBox(64, "MCU Tool Info", "Por favor actualice a la ultima version disponible: " & $puru & @CRLF & @CRLF & "Please update to the latest version: " & $puru)
			EndIf
		Case $RegisterButton
			ButtonCreateClick()

	EndSwitch
WEnd

Func Logout()

	Global $username, $data, $request
	$username = GUICtrlRead($InputUsername)
	$data = 'username=' & urlEncode($username)
	$request = _httpRequest($ENDPOINT_LOGOUT, 'POST', $data)

	If $DEBUG_MODE Then _ArrayDisplay($request)

	Global $json = Json_Decode($request[2])
	Global $success = Json_Get($json, '["success"]')

EndFunc

Func ButtonLoginClick()

	Global $activo = ""
	$username = GUICtrlRead($InputUsername)
	If Not $username Then
		_showError('Nombre de usuario requerido!')
		Return False
	EndIf

	$password = GUICtrlRead($PasswordInput)
	If Not $password Then
		_showError('Password requerido!')
		Return False
	EndIf

	Local $hwid = GUICtrlRead($hwidInputLogin)

    Local $data = 'username=' & urlEncode($username)
	Local $request = _httpRequest($ENDPOINT_READ, 'POST', $data)
	Local $json = Json_Decode($request[2])
	Local $success = Json_Get($json, '["success"]')

	If $success Then
		Local $hwidcheck = Json_Get($json, '["data"]["hwid"]')
		Global $activo = Json_Get($json, '["data"]["current_status"]')
		Local $fecha = Json_Get($json, '["data"]["fin_date"]')
		Local $hwidcounter = Json_Get($json, '["data"]["hwidcounter"]')
	Else
		_showError('Usuario Incorrecto: ' & $username)
		Return False
	EndIf
	Local $fechamod = StringTrimRight($fecha, 9)
	Local $fechafinal = StringReplace($fechamod, "-", "")
	Local $fechacompare = @YEAR & @MON & @MDAY
	If $fechafinal < $fechacompare and $activo == 1 Then
		Deactivate($username)
		$activo = 0
	EndIf
	If $hwidcounter <= "2" Then
		If $hwidcheck == $hwid Then
			Local $data, $request
			$data = 'username=' & urlEncode($username)
			$data &= '&password=' & urlEncode($password)
			$data &= '&hwid=' & urlEncode($hwid)
			$request = _httpRequest($ENDPOINT_LOGIN, 'POST', $data)
			If $DEBUG_MODE Then _ArrayDisplay($request)
			Local $json = Json_Decode($request[2])
			Local $success = Json_Get($json, '["success"]')
			If $success Then
				Return 1
			Else
				Local $errorCode = Json_Get($json, '["data"]')
				If $errorCode = -1 Then
					_showError('Contrasena incorrecta!')
					Return False
				Else
					Logout()
					Return 1
				EndIf
			EndIf
		Else
			_showError('HWID no es correcto! Contacte al Admin para mas informacion')
		EndIf
	Else
		_showError('Cuenta Bloqueada! HWID Counter excedido!')
	EndIf
EndFunc

Func _showError($errorMsg, $ctrId = Default)
	MsgBox(16 + 262144, 'Error', $errorMsg, 0, $UIForm)
	If $ctrId <> Default Then GUICtrlSetState($ctrId, $GUI_FOCUS)
EndFunc

Func ButtonCreateClick()
	_user('create')
EndFunc

Func _user($type = 'create')

	If Not _validateInput($type) Then
		_showError('Por Favor asegurese de entrar los datos correctameente')
		Return False
	EndIf

	Local $pass1 = GUICtrlRead($PasswordInputRegistro)
	Local $pass2 = GUICtrlRead($PasswordInput1)

	If $pass1 == $pass2 Then
		Local $endpoint = ($type = 'create') ? $ENDPOINT_CREATE : $ENDPOINT_UPDATE
		Local $member = 'member'
		Local $genero = 'male'
		Local $data = 'username=' & urlEncode(GUICtrlRead($UserInputRegistro)) & _
			'&password=' & urlEncode(GUICtrlRead($PasswordInputRegistro)) & _
			'&email=' & urlEncode(GUICtrlRead($EmailInputRegistro)) & _
			'&gender=' & urlEncode($genero) & _
			'&group=' & urlEncode($member) & _
			'&hwid=' & urlEncode(GUICtrlRead($HwidInputRegistro))

		Local $request = _httpRequest($endpoint, 'POST', $data)
		If $DEBUG_MODE Then _ArrayDisplay($request)
		Local $json = Json_Decode($request[2])
		Local $success = Json_Get($json, '["success"]')

		If $success Then
			Local $msg
			If $type = 'create' Then
				$msg = 'Nuevo Usuario creado correctamente' & @CRLF & @CRLF & 'New User Created Succesfully'
			Else
				$msg = GUICtrlRead($UserInputRegistro) & " ha sido actualizado"
			EndIf
			MsgBox(64 + 262144, 'MC-U Tool', $msg)
			Return True
		Else
			Local $error
			If $type = 'create' Then
				$error = 'Error while creating new user'
			Else
				$error = 'No se pudo actualizar al usuario: ' & GUICtrlRead($UserInputRegistro)
			EndIf
			_showError($error)
			Return False
		EndIf
	Else
		_showError('Passwords not match')
	EndIf

EndFunc

Func _validateInput($type = 'create')
	Local $username, $password, $email, $hwid
	$username = GUICtrlRead($UserInputRegistro)
	$password = GUICtrlRead($PasswordInputRegistro)
	$email = GUICtrlRead($EmailInputRegistro)
	$hwid = GUICtrlRead($HwidInputRegistro)

	If $type = 'create' Then
	Return ($username And $password And isEmail($email) And $hwid <> '')
	Else
		If Not $username Then Return False
		If Not $password Or Not $email = '' Then Return False

		If $email Then
			If Not isEmail($email) Then Return False
		EndIf
	EndIf
EndFunc   ;==>_validateInput

Func isEmail($str)
	Return StringRegExp($str, '\b[\D\d._%+-]+@[\D\d.-]+\.[\D]{2,6}\b')
EndFunc

Func Button1click()
GUIDelete($UIForm)
#Region ### START Koda GUI section ### Form=
Global $Form1_1 = GUICreate("MC-U Tool", 879, 570, -1, -1)
Global $Tab1 = GUICtrlCreateTab(6, 8, 865, 353)
Global $adb = GUICtrlCreateTabItem($iArray[1]) ;1
Global $reboot = GUICtrlCreateGroup($iArray[2], 26, 33, 185, 145) ;2
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $rebootsystem = GUICtrlCreateButton($iArray[3], 34, 57, 67, 25) ;3
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $rebootrecovery = GUICtrlCreateButton($iArray[4], 34, 97, 67, 25) ;4
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $ftm2edl = GUICtrlCreateButton($iArray[5], 124, 58, 67, 25) ;5
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $rebootfastboot = GUICtrlCreateButton($iArray[6], 34, 137, 67, 25) ;6
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $rebootedl = GUICtrlCreateButton($iArray[7], 122, 97, 67, 25) ;7
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $rebootdownload = GUICtrlCreateButton($iArray[8], 122, 137, 67, 25) ;8
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $hardreset = GUICtrlCreateGroup($iArray[9], 234, 33, 185, 145) ;9
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $factoryresetadb = GUICtrlCreateButton($iArray[10], 250, 57, 67, 25) ;10
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $factoryresetfastboot = GUICtrlCreateButton($iArray[11], 250, 97, 67, 25) ;11
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $wipeoem = GUICtrlCreateButton($iArray[12], 340, 58, 67, 25) ;12
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $wipesystem = GUICtrlCreateButton($iArray[13], 250, 137, 67, 25) ;13
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $wipepersist = GUICtrlCreateButton($iArray[14], 338, 97, 67, 25) ;14
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $resetgmail = GUICtrlCreateButton($iArray[15], 338, 137, 67, 25) ;15
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $updates = GUICtrlCreateGroup($iArray[16], 442, 33, 185, 145) ;16
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $stopsamupdate1 = GUICtrlCreateButton($iArray[17], 458, 57, 155, 25) ;17
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $stopsamsungupdate2 = GUICtrlCreateButton("Samsung", 458, 97, 155, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $stoplgupdate = GUICtrlCreateButton($iArray[18], 458, 137, 155, 25) ;18
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $readinfo = GUICtrlCreateButton($iArray[19], 646, 223, 179, 25) ;19
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $Group4 = GUICtrlCreateGroup($iArray[20], 650, 33, 185, 145) ;20
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $batteycheck = GUICtrlCreateButton($iArray[21], 666, 57, 155, 25) ;21
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $redcheck = GUICtrlCreateButton($iArray[22], 666, 97, 155, 25) ;22
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $rootchecker = GUICtrlCreateButton($iArray[23], 666, 137, 155, 25) ;23
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $Group5 = GUICtrlCreateGroup($iArray[24], 26, 185, 185, 153) ;24
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $htclenguage = GUICtrlCreateButton($iArray[25], 42, 249, 155, 25) ;25
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $huaweilenguage = GUICtrlCreateButton($iArray[26], 42, 289, 155, 25) ;26
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $lenguage = GUICtrlCreateButton($iArray[27], 42, 209, 155, 25) ;27
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $Group6 = GUICtrlCreateGroup($iArray[28], 234, 185, 185, 153) ;28
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $pinadb = GUICtrlCreateButton($iArray[29], 242, 209, 163, 25) ;29
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $removepattern = GUICtrlCreateButton($iArray[30], 242, 249, 163, 25) ;30
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $qcommdiag = GUICtrlCreateButton($iArray[31], 242, 289, 163, 25) ;31
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $ButtonHuaweiSim = GUICtrlCreateButton($iArray[32], 454, 192, 179, 25) ;32
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $ButtonHuaweimdm = GUICtrlCreateButton($iArray[33], 454, 223, 179, 25) ;33
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $APNopensettings = GUICtrlCreateButton($iArray[37], 646, 192, 179, 25) ;37
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $frp = GUICtrlCreateTabItem($iArray[38]) ;38
Global $frptools = GUICtrlCreateGroup($iArray[39], 18, 41, 497, 313) ;39
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $samsungfrpadb = GUICtrlCreateRadio("Samsung ADB", 34, 89, 121, 17)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $frpmtkadb = GUICtrlCreateRadio("MTK/SPD ADB", 34, 129, 121, 17)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $lenovofrp = GUICtrlCreateRadio("Lenovo FRP Fastboot", 34, 209, 161, 17)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $deepfrp = GUICtrlCreateRadio("Deep FRP Fastboot", 34, 249, 145, 17)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $htcfrp = GUICtrlCreateRadio("HTC FRP Fastboot", 34, 289, 145, 17)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $lgfrpadb = GUICtrlCreateRadio("LG FRP ADB", 266, 129, 121, 17)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $micromaxfrp = GUICtrlCreateRadio("Micromax/Yuphoria Fastboot", 266, 89, 225, 17)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $Motofrp = GUICtrlCreateRadio("Motorla FRP Fastboot", 266, 169, 121, 17)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $alcatelfrp = GUICtrlCreateRadio("Alcatel FRP ADB", 266, 209, 129, 17)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $spdfrpfastboot = GUICtrlCreateRadio("SPD FRP Fastboot", 34, 169, 137, 17)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $RadioLGFRP = GUICtrlCreateRadio("LG FRP Download", 266, 249, 161, 17)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $start = GUICtrlCreateButton("Start", 428, 317, 75, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $RadioFRPBypass = GUICtrlCreateRadio("Samsung Open Browser", 266, 286, 161, 17)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $ZTEFRP = GUICtrlCreateGroup("FRP", 530, 39, 313, 313)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $SelectModel = GUICtrlCreateCombo($iArray[99], 552, 70, 257, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, "701ZT|A1R|ANAKIN|A0620|A0722|BLADEV9|BLADEV9VITA|BLADEA3|BLADEA320|BLADEA125|BLADEA321|BLADEA330|BLADEA251|B2017G|BLADEA0605|BLADEA0622|BLADEVUltra|C2016|K81|K88|K90U|K92|N818S|N9130|N9131|N9132|N9136|N9137|N9515|N9517|N9518|N9519|N9521|N9560|MF97B|OrangeNeva80|T57|T920|V72M|V770|V0840|VFD51X|VFD82X|WF723|WF723S|Z230|Z557BL|Z559DL|Z610DL|Z667|Z669|Z718TL|Z755|Z777|Z787|Z792|Z3001S|Z5031O|Z5151V|Z6410S|ZTF32|ZW10|Z812|Z813|Z826|Z828|Z830|Z831|Z832|Z833|Z835|Z836F|Z839|Z839V|Z850|Z851|Z851M|Z852|Z855|Z916BL|Z933|Z955A|Z956|Z957|Z958|Z959|Z963U|Z965|Z968|Z971|Z978|Z981|Z982|Z987|Z998")
Global $dojob = GUICtrlCreateButton($iArray[40], 736, 102, 75, 25)
Global $huaweylist = GUICtrlCreateCombo($iArray[100], 554, 199, 257, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, "LLD-L21|RIO-LO1|Huawei 5c Pro|CAM-AL00|CAM-CL00|CAM-L03|CAM-L03E|CAM-L21|CAM-L22|CAM-L23|CAM-L32|CAM-L53|CAM-TL00|CAM-TL00E|CAM-TL00H|CAM-U22|CAM-UL00|CAM-UL00E|NEM-AL00|NEM-AL10|NEM-L21|NEM-L22|NEM-L31|NEM-L51|NEM-TL00|NEM-TL00H|NEM-UL10|KIW-AL10|KIW-AL10G|KIW-AL20|KIW-CL00|KIW-L21|KIW-L22|KIW-L23|KIW-L24|KIW-TL00|KIW-TL00H|KIW-UL00|DLI-AL10|DLI-L22|DLI-L42|DLI-TL20|BLN-AL10|BLN-AL10A|BLN-AL10B|BLN-AL10C|BLN-L21|BLN-L21HN|BLN-L22|BLN-L22HN|BLN-L23|BLN-TL00|BLN-TL10|NEM-L21|ATH-AL00|ATH-CL00|ATH-TL00|ATH-TL00H|ATH-UL00|ATH-UL01|ATH-UL06|ATH-UL11|ATH-UL16|BND-L21|BND-L22|BND-L24|BND-L31|BND-L32|BND-L34|FRD-AL00|FRD-AL00A|FRD-AL10|FRD-DL00|FRD-L02|FRD-L04|FRD-L09|FRD-L19|FRD-TL00|PRA-AL00|STF-AL00|STF-AL10|STF-AL20|STF-L09|STF-L14|STF-L19|STF-L29|STF-L39|STF-TL10|LLD-L21|LLD-L22|LLD-L31|LLD-L32|LLD-TL10|LLD-AL00|LLD-AL10|RNE-L22|Honor 10|Honor Play|LND-AL30|LND-AL40|LND-TL00|LND-TL10|LND-TL40|BND-AL00|BND-AL10|BND-TL10|NTS-AL00|EDI-AL10|EDI-DL00|KNT-CL00|KNT-AL20|KNT-AL10|KNT-L09|KNT-TL10|KNT-UL10|DUK-AL10|DUK-AL20|DUK-AL30|DUK-L09|DUK-TL30|Honor 10|H1611|DIG-AL00|DIG-L01|DIG-L03|DIG-L21|DIG-L22|DIG-L23|DIG-TL10|HDN-L1J|TRT-AL00|TRT-L01|TRT-L02|TRT-L03|TRT-L21|TRT-L22|TRT-L23|TRT-L53|TRT-TL10|FIG-AL00|FIG-AL10|FIG-TL00|FIG-TL10|LDN-AL00|LDN-AL10|FLA-AL20|FLA-L03|FLA-L21|FLA-AL00|FLA-AL10|FLA-TL00| FLA-TL10|RNE-AL00|RNE-AL00|DIG-L21|BLL-L22|NMO-L01|NMO-L02|NMO-L03|NMO-L21|NMO-L22|NMO-L23|NMO-L31|NMO-L51|MLA-TL00|MLA-TL10|MLA-UL00|HWI-AL00|HWI-TL00|H715BL|H715BL|MLA-AL00|MLA-AL10|MLA-CL00|RNE-AL00|Mate RS|ALP-AL00|ALP-L09|ALP-L29|ALP-TL00|RNE-L01|RNE-L02|RNE-L03|RNE-L21|RNE-L23|BLA-A09|BLA-AL00|BLA-L09|BLA-L29|BLA-TL00|Mate RS|MHA-AL00|MHA-AL10|MHA-AL10A|MHA-AL10B|MHA-AL10C|MHA-L09|MHA-L09B|MHA-L29|MHA-L29B|MHA-L2AB|MHA-TL00|MHA-TL00A|BLL-L23|LON-AL00A|LON-AL00B|LON-AL00C|LON-AL00D|LON-CL00B|LON-L09A|LON-L09B|LON-L29A|LON-L29B|LON-L29C|LON-L29D|LON-TL10B|M2-A01L|M2-A01w|PLE-701L|PLE-703L|PLE-703LT|JDN-L01|BTV-DL09|BTV-W09|HDN-L09|HDN-W09|BAH-AL00|BAH-L09|BAH-W09|CPN-AL00|CPN-L09|CPN-W09|SHT-AL09|CMR-AL19|SHT-W09|MON-L19|MON-W19|NTS-AL00|CAN-AL00|CAN-AL10|CAN-L1|CAN-L11|CAN-L12|CAN-L13|CAN-L2|CAN-L3|CAN-TL10|CAN-TL20|CAZ-AL00|CAZ-AL10|PIC-AL00|PIC-CL00|PIC-CL10|PIC-L09|PIC-L29|PIC-TL00|LDN-L22|LDN-L23|LDN-L29|LDN-LX2|BAC-AL00|BAC-L01|BAC-L02|BAC-L03|BAC-L09|Plus BAC-L21|BAC-L22|BAC-L23|BAC-TL00|RNE-L22|ANE-AL00|PRA-LX2|TRT-LX1|MLA-L1|MLA-L11|MLA-L12|MLA-L13|MLA-L2|MLA-L3|FIG-L01|FIG-L02|FIG-L03|FIG-L11|FIG-L21|FIG-L22|FIG-L23|FIG-L31|VTR-AL00|VTR-L29|PRA-LA1|VKY-AL00|VKY-L09|VKY-L29|ANE-L01|ANE-L02|ANE-L03|ANE-L12|ANE-L21|ANE-L22|ANE-L23|ANE-L42|ANE-LX1|ANE-TL00|P20|P20 Pro|EVA-AL00|EVA-AL10|EVA-L09|EVA-L09J|EVA-L19|EVA-L29|EVA-TL00|VIE-AL10B|VIE-AL10C|VIE-L09|VIE-L29|H1611|TRT-AL00|TRT-TL00|CAM-L03|CAM-L03E|CAM-L21|CAM-L22|CAM-L23|CAM-L32|CAM-L53|LDN-L01|LDN-L03|LDN-L21|LDN-LX1|FLA-L22|FLA-L23|ATU-AL10|ATU-TL10|KII-L03|KII-L05|KII-L21|KII-L22|KII-L23|COL-AL00|COL-AL10|COL-L29|COL-TL00|COL-TL10|TL00|TL10|AUM-AL00|AUM-AL20|AUM-TL00|AUM-TL20|PRA-AL00|PRA-AL00X|PRA-TL10|Honor 8 Youth|Honor 9 Youth|COR-AL00|BKL-AL00|BKL-AL20|BKL-L09|Honor View 10|ALP-L09|ALP-L29|BLA-L29|BLA-L09|BLA-L29|BLL-L23|MHA-L09|MHA-L29|LON-AL00|LON-AL10|LON-L29|NEO-AL00|Bach-W01|Bach-W09|BTV-DL09|CPN-AL00|CPN-W09|AGS-L03|AGS-L09|AGS-W09|BG2-U01|BG2-U03|BG2-W09|KOB-L09|KOB-W09")
Global $mtpadb = GUICtrlCreateButton($iArray[98], 554, 239, 107, 25) ;98
Global $frpremovehuawei = GUICtrlCreateButton($iArray[40], 738, 239, 75, 25); 40
Global $ComboZTESideload = GUICtrlCreateCombo($iArray[101], 554, 135, 257, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, "Z233VL|Z353VL|Z557BL|Z558VL|Z610DL|Z716BL|Z717VL|Z719DL|Z798BL|Z799VL|Z818L|Z819L|Z836BL|Z837VL|Z861BL|Z862VL|Z899VL|Z916BL|Z917VL|Z936L|Z955L|Z962BL|Z963VL|Z986DL")
Global $ButtonFRPSideload = GUICtrlCreateButton($iArray[40], 738, 167, 75, 25)
Global $ComboQcommEDl = GUICtrlCreateCombo($iArray[102], 554, 282, 257, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, $iArray[115] & "|" & $iArray[116] & "|" & $iArray[117] & "|" & $iArray[118])
Global $ButtonQcommEDL = GUICtrlCreateButton($iArray[40], 738, 313, 75, 25) ;40
Global $Checkboxzteedlfrp = GUICtrlCreateCheckbox($iArray[41], 548, 101) ;41
GUICtrlSetState(-1, $GUI_CHECKED)
Global $Checkboxqcomfrp = GUICtrlCreateCheckbox($iArray[41], 550, 316);41
GUICtrlSetState(-1, $GUI_CHECKED)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $Moto = GUICtrlCreateTabItem("Motorola/LG")
Global $motorola = GUICtrlCreateGroup("Motorola", 18, 33, 321, 313)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $ButtonMoto = GUICtrlCreateButton($iArray[50], 74, 297, 203, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $GroupMotoTools = GUICtrlCreateGroup($iArray[1], 34, 57, 281, 105)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $ComboMotoTools = GUICtrlCreateCombo("", 80, 84, 177, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
GUICtrlSetData(-1, $iArray[42] & "|" & $iArray[45] & "|" & $iArray[46] & "|" & $iArray[49] & "|" & $iArray[51] & "|" & $iArray[52] & "|" & $iArray[189] & "|" & $iArray[190] & "|" & $iArray[193])
Global $ButtonMotoTools = GUICtrlCreateButton($iArray[35], 128, 120, 75, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $GroupMotoUNlock = GUICtrlCreateGroup($iArray[188], 34, 169, 281, 105)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $ComboMotoUnlock = GUICtrlCreateCombo("", 82, 201, 177, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
GUICtrlSetData(-1, $iArray[191] & "|" & $iArray[192] & "|" & $iArray[43] & "|" & $iArray[44] & "|" & $iArray[47] & "|" & $iArray[48])
Global $ButtonMotoUnlock = GUICtrlCreateButton($iArray[35], 130, 233, 75, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $LGGroup = GUICtrlCreateGroup("LG", 354, 33, 505, 313)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $rootx210 = GUICtrlCreateButton("Root X210MA V10K/V10L", 370, 49, 203, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $lggstyloroot = GUICtrlCreateButton("LG G Stylo Root 5.1.1", 370, 81, 203, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $Oneclick = GUICtrlCreateCombo($iArray[103], 372, 211, 201, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, "LG TP450|LG MP450|LG G4 H811|LGM470|LG MP260|LG TP260|LG LS751|LG G3|LG G2|LG G2 Mini|LG G Pro 2|LG G Pad|LG F60|LG L90|LG Tribute|LG Spirit|LG Volt|LG G Vista|LG LS885 Android 4.4.2|LG LS665 Android 5.1.1")
Global $root = GUICtrlCreateButton("Root", 501, 242, 75, 25)
Global $ComboUnlockLG = GUICtrlCreateCombo($iArray[104], 370, 145, 201, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, $iArray[137] & "|" & $iArray[138] & "|" & $iArray[139] & "|" & $iArray[140] & "|" & $iArray[141] & "|" & $iArray[204] & "|" & $iArray[142] )
Global $ButtonUnlockLG = GUICtrlCreateButton($iArray[53], 498, 177, 75, 25) ;53
Global $ButtonLgScreenBypass = GUICtrlCreateButton($iArray[54], 370, 113, 203, 25) ;54
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $Group1 = GUICtrlCreateGroup($iArray[55], 364, 275, 489, 65)
Global $InputIMEILG = GUICtrlCreateInput("", 380, 299, 153, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_NUMBER))
GUICtrlSetLimit($InputIMEILG, 14)
Global $LuhnImeiLG = GUICtrlCreateInput("", 540, 299, 25, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_READONLY))
Global $ClacLuhnLG = GUICtrlCreateButton($iArray[56], 580, 299, 75, 25)
Global $StartIMeifixlg = GUICtrlCreateButton("IMEI", 668, 299, 75, 25)
Global $MEID = GUICtrlCreateButton("MEID", 756, 299, 75, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $LGGrouptools = GUICtrlCreateGroup($iArray[57], 610, 41, 241, 97)
Global $ComboLGTools = GUICtrlCreateCombo("", 650, 65, 161, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, $iArray[119] & "|" & $iArray[120] & "|" & $iArray[121] & "|" & $iArray[122] & "|" & $iArray[123] & "|" & $iArray[124] & "|" & $iArray[125] & "|" & $iArray[126] & "|" & $iArray[127] & "|" & $iArray[128])
Global $ButtonStartLG = GUICtrlCreateButton($iArray[72], 698, 97, 75, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $GroupLGSpecial = GUICtrlCreateGroup($iArray[58], 609, 146, 241, 97)
Global $ComboLGSpecial = GUICtrlCreateCombo("", 649, 170, 161, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, $iArray[129] & "|" & $iArray[130] & "|" & $iArray[131] & "|" & $iArray[132] & "|" & $iArray[133] & "|" & $iArray[134] & "|" & $iArray[135] & "|" & $iArray[136] & "|" & $iArray[198] & "|" & $iArray[199])
Global $ButtonStartLGspecial = GUICtrlCreateButton($iArray[72], 697, 202, 75, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $Removefrplgdl = GUICtrlCreateButton($iArray[59], 626, 249, 211, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $samsung = GUICtrlCreateTabItem("Samsung")
Global $Baseband = GUICtrlCreateGroup($iArray[60], 26, 225, 193, 121)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $engmodem = GUICtrlCreateCombo($iArray[105], 47, 256, 153, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, "A105FD U3|A105F U2|A105F U3|A105FN U2|A105GN U3|A105G U3|A105M U3|A202FN U2|A202F U2|A205F U2|A205FN U2|A205G U3|A205GN U3|A205YN U2|A305F U2|A305FN U2|A305GN U2|A305G U2|A405F U2|A405FM U2|A405FN U2|A405X U1|A505F U2|A505FN U2|A505FM U2|A505G U3|A505GN U3|A505GT U3|A505U U2|G970F U3|G973F U2|G975F U3")
Global $engmodemstart = GUICtrlCreateButton($iArray[61], 82, 293, 75, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $frpdownload = GUICtrlCreateGroup($iArray[62], 450, 193, 193, 153)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $ComboExynos = GUICtrlCreateCombo($iArray[106], 474, 217, 153, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL,$WS_VSCROLL))
Global $removerexynos = GUICtrlCreateButton($iArray[40], 506, 249, 75, 25)
Global $ComboQcomm = GUICtrlCreateCombo($iArray[107], 474, 281, 153, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, "SM-A310FD|SM-A310MD|SM-A310Y|SM-A510FD|SM-A510L|SM-A510MD|SM-A510Y|SM-A710F|SM-A710K|SM-A710M|SM-A710S|SM-A800F|SM-A800IZ|SM-A800YZ|SM-G150NK|SM-G150NS|SM-G389F|SM-G550F|SM-G550T|SM-G550T2|SM-G570M|SM-G610F|SM-G610FZ|SM-G610L|SM-G610S|SM-G800F|SM-G800M|SM-G850F|SM-G850K|SM-G850M|SM-G850Y|SM-G903FD|SM-G903W|SM-G920AZ|SM-G920F|SM-G920FZ|SM-G920K|SM-G920S|SM-G920T1|SM-G9250|SM-G9250F|SM-G925I|SM-G925L|SM-G925T|SM-G925W8|SM-G9287C|SM-G928F|SM-G928I|SM-G928L|SM-G928N0|SM-G928T|SM-G930F|SM-G930K|SM-G930S|SM-G935F|SM-G935K|SM-G935S|SM-J120A|SM-J120F|SM-J120G|SM-J120P|SM-J120ZN|SM-J200F|SM-J200GU|SM-J200Y|SM-J320AZ|SM-J321AZ|SM-J700H|SM-J700T|SM-J710F|SM-J710FN|SM-J710GN|SM-J710MN|SM-N910H|SM-N910L|SM-N910U|SM-N916L|SM-N920C|SM-N920F|SM-N920I|SM-N920L|SM-N920T|SM-N930F|SM-N930K|SM-N930S|SM-G3818|SM-G386T|SM-G386W|SM-G5108|SM-G5109|SM-G5309W|SM-G530BT|SM-G530FQ|SM-G530H|SM-G530P|SM-G531F|SM-G5700|SM-G600F|SM-G600S|SM-G710|SM-G7102T|SM-G7105L|SM-G710L|SM-G7200|SM-G720AX|SM-G730A|SM-G730W8|SM-G7509|SM-G750F|SM-G800H|SM-G850A|SM-G850W|SM-G870A|SM-G870F|SM-G870W|SM-G891A|SM-G9006W|SM-G9008W|SM-G9009W|SM-G900F|SM-G900FG|SM-G900I|SM-G900L|SM-G900MD|SM-G900S|SM-G900T1|SM-G900T3|SM-G900W8|SM-G906K|SM-G906S|SM-G910S|SM-G9208|SM-G920P|SM-G925P|SM-G9300|SM-G930P|SM-G930T1|SM-G930V|SM-G935T|SM-G935U|SM-J100F|SM-J100G|SM-J100MU|SM-J100VPP|SM-J105M|SM-J110G|SM-J3110|SM-J320P|SM-J500F|SM-J500G|SM-J500M|SM-J500Y|SM-J510F|SM-J510G|SM-J510K|SM-J510MN|SM-J510S|SM-J7108|SM-N7500Q|SM-N7505|SM-N900|SM-N9002|SM-N900A|SM-N900L|SM-N900S|SM-N900V|SM-N910A|SM-N910G|SM-N910T|SM-N910W8|SM-N915A|SM-N915F|SM-N915G|SM-N915T|SM-N9200|SM-N920P|SM-N930A|SM-N930R4|SM-N930U|SM-P350|SM-P355|SM-P355M|SM-P550|SM-P555C|SM-P555L|SM-P555S|SC-01C|SC-01E|SC-01G|SC-02C|SC-02F|SC-03E|SC-04E|SC-04G|SC-05G|SCH-I435|SCH-I959|SCH-M710|SCH-M719|SCH-W200|SCH-W240|SCH-W290|SCH-W330|SCH-W360|SCH-W390|SCH-W410|SCH-W450|SCH-W460R|SCH-W550|SCH-W570|SCH-W590|SCH-W720|SCH-W750|SCH-W770|SCH-W830|SCH-W850I|SCH-W880|SCH-W900|SCH-W920|SCH-W940|SGH-A767|SGH-A847|SGH-A847M|SGH-A877|SGH-I187|SGH-I257M|SGH-I317M|SGH-I337M|SGH-I407|SGH-I437P|SGH-I497|SGH-I527M|SGH-I547|SGH-I577|SGH-I677L|SGH-I717|SGH-I717M|SGH-I727|SGH-I747|SGH-I747M|SGH-I777|SGH-I827D|SGH-I8700|SGH-I917|SGH-I937|SGH-I957D|SGH-I957R|SGH-I997R|SGH-M919|SGH-M919V|SGH-T199|SGH-T399|SGH-T469|SGH-T469W|SGH-T479B|SGH-T499V|SGH-T589|SGH-T589W|SGH-T599N|SGH-T669|SGH-T679M|SGH-T759|SGH-T779|SGH-T879|SGH-T889v|SGH-T939|SGH-T959p|SGH-T989|SGH-T999|SGH-T999n|SHV-E110S|SHV-E120L|SHV-E140S|SHV-E160K|SHV-E160S|SHV-E170L|SHV-E210K|SHV-E250S|SHV-E270S|SHV-E300K|SHV-E300S|SHV-E330L|SHV-E470S|SHV-E500S|SHW-A110S|SHW-A160S|SHW-A210S|SHW-A250K|SHW-A300S|SHW-M110S|SHW-M180S|SHW-M350S|SHW-M250S|SHW-M440S")
Global $ButtonQcomm = GUICtrlCreateButton($iArray[40], 506, 313, 75, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $GroupNetwork = GUICtrlCreateGroup($iArray[63], 242, 225, 193, 121)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $ComboNetwork = GUICtrlCreateCombo($iArray[108], 263, 258, 153, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, $iArray[194] & "|" & $iArray[143] & "|" & $iArray[144] & "|" & $iArray[145] & "|" & $iArray[146] & "|" & $iArray[147] & "|" & $iArray[148] & "|" & $iArray[149] & "|" & $iArray[150] & "|" & $iArray[151] & "|" & $iArray[201] & "|" & $iArray[200])
Global $ButtonStartnetwork = GUICtrlCreateButton($iArray[72], 293, 293, 75, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $Group2 = GUICtrlCreateGroup($iArray[64], 450, 35, 401, 153) ;64
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $unlocksamsung = GUICtrlCreateButton($iArray[65], 721, 117, 75, 25) ;65
Global $unlocksam = GUICtrlCreateCombo($iArray[102], 686, 79, 153, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, $iArray[152] & "|" & $iArray[153] & "|" & $iArray[154] & "|" & $iArray[155] & "|" & $iArray[156] & "|" & $iArray[157] & "|" & $iArray[158] & "|" & $iArray[159])
Global $GroupBusqueda = GUICtrlCreateGroup($iArray[66], 458, 51, 217, 121)
Global $InputModel = GUICtrlCreateInput("", 480, 96, 169, 22)
Global $Label1 = GUICtrlCreateLabel($iArray[67], 480, 72)
Global $Search = GUICtrlCreateButton($iArray[68], 528, 128, 75, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $Group3 = GUICtrlCreateGroup($iArray[69], 658, 193, 193, 153)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $process = GUICtrlCreateButton($iArray[70], 714, 273, 75, 25)
Global $seleccionar = GUICtrlCreateButton("...", 802, 225, 35, 25)
Global $selectboot = GUICtrlCreateInput($sFileOpenDialog, 674, 225, 121, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_READONLY))
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $tools = GUICtrlCreateGroup($iArray[71], 26, 33, 193, 89)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $ComboTools = GUICtrlCreateCombo($iArray[102], 50, 57, 153, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, $iArray[160] & "|" & $iArray[161] & "|" & $iArray[162] & "|" & $iArray[163] & "|" & $iArray[164] & "|" & $iArray[165] & "|" & $iArray[166] & "|" & $iArray[167] & "|" & $iArray[168] & "|" & $iArray[169] & "|" & $iArray[170] & "|" & $iArray[171] & "|" & $iArray[172] & "|" & $iArray[173] & "|" & $iArray[174])
Global $go = GUICtrlCreateButton($iArray[72], 82, 89, 75, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $Locks = GUICtrlCreateGroup($iArray[73], 242, 129, 193, 89)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $ComboLocks = GUICtrlCreateCombo($iArray[102], 258, 153, 153, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, $iArray[175] & "|" & $iArray[176] & "|" & $iArray[177] & "|" & $iArray[178])
Global $Buttonstartlocks = GUICtrlCreateButton($iArray[72], 290, 185, 75, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $GroupRoot = GUICtrlCreateGroup("Root", 242, 35, 193, 89)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $Comboroot = GUICtrlCreateCombo($iArray[105], 266, 59, 153, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1, "J327T/T1|G532M|A105FN U2 Android 9|A105F U1 Android 9|A105FDD U1 Android 9|A105FPUU U3 Android 9|A105G U2 Android 9|A107F U2 Android 9|A202F U2 Android 9|A205F U1 Android 9|A205F U2 Android 9|A205FN U2 Android 9|A260F U3 Android 8.1.0|A260G U2 Android 8.1.0|A305FN U2 Android 9|A305GN U2 Android 9|A305FDD U1 Android 9|A305GT U2 Android 9|A310F U5 Android 7|A320YD U4 Android 8|A500F U1 Android 6|A500FU U1 Android 6|A505GT U3 Android 9|A505YN U2 Android 9|A520F U9 Android 8|A530F U7 Android 9|A600F U4 Android 9|A600FN U4 Android 9|A600G U5 Android 9|A600GN U5 Android 9|A605F U4 Android 9|A605FN U4 Android 9|A700F U2 Android 6|A700FD U1 Android 6|A705FN U3 Android 9|A710F U2 Android 7|A720F U8 Android 8|A730F U6 Android 9|A750F U1 Android 9|A750GN U3 Android 9|A800F U1 Android 6|A805F U2 Android 9|A810F U2 Android 8|A910F U1 Android 8|A920F U1 Android 9|C710F U2 Android 8.1.0|C5000 U1 Android 8|C7000ZH U3 Android 8|G532FXX U1 Android 6|G610FXX U1 Android 8.1.0|G920F U6 Android 7|G930F U5 Android 8|G960F U6 Android 9|G965F U6 Android 9|J260M U6 Android 8.1.0|J260Y U1 Android 8.1.0|J320M U0 Android 5.1.1|J330G U3 Android 9|J330T U3 Android 8|J400F U3 Android 9|J400F U4 Android 9|J530GM U6 Android 8.1.0|J701MT U7 Android 9|J710FN U1 Android 7|J710GN U4 android 8.1.0|J727P U6 Android 8.1.0|J730GM U7 Android 9|J810Y U4 Android 9|M105F U1 Android 8.1.0|M105G U1 Android 9|M205F U1 Android 8.1.0|M205FN U1 Android 9|M305F U1 Android 8.1.0|N950F U6 Android 9")
Global $Buttonroot = GUICtrlCreateButton($iArray[72], 298, 91, 75, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $SpecialTools = GUICtrlCreateGroup($iArray[74], 26, 129, 193, 89)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $ComboSpecialTools = GUICtrlCreateCombo($iArray[102], 50, 153, 153, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
GUICtrlSetData(-1,$iArray[202] & "|" & $iArray[179] & "|" & $iArray[180] & "|" & $iArray[181] & "|" & $iArray[182] & "|" & $iArray[183] & "|" & $iArray[184] & "|" & $iArray[185] & "|" & $iArray[186] & "|" & $iArray[203])
Global $ButtonStartSoecialTools = GUICtrlCreateButton($iArray[72], 82, 185, 75, 25) ;72
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $Qcomm = GUICtrlCreateTabItem("Qualcomm")
Global $zt = GUICtrlCreateGroup("ZTE", 18, 35, 473, 185)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $n9560 = GUICtrlCreateButton($iArray[75], 30, 86, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $ftmedl = GUICtrlCreateButton($iArray[5], 342, 86, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $adbedl = GUICtrlCreateButton($iArray[7], 342, 118, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $n9137unlock = GUICtrlCreateButton($iArray[76], 30, 150, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $z982unlock = GUICtrlCreateButton($iArray[77], 190, 54, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $z981root = GUICtrlCreateButton($iArray[78], 190, 118, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $n9560root = GUICtrlCreateButton($iArray[79], 30, 54, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $z982sec = GUICtrlCreateButton($iArray[80], 190, 86, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $coolpad = GUICtrlCreateButton($iArray[81], 190, 150, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $n9137root = GUICtrlCreateButton($iArray[82], 30, 118, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $bladel2 = GUICtrlCreateButton($iArray[83], 342, 54, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $Z835Codes = GUICtrlCreateButton($iArray[84], 30, 182, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $ZTEcodes = GUICtrlCreateButton($iArray[85], 190, 182, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $Buttonrootcoolpad = GUICtrlCreateButton($iArray[187], 342, 152, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $ButtonReadQCNZTe = GUICtrlCreateButton($iArray[198], 342, 182, 67, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $ButtonQriteqcnzte = GUICtrlCreateButton($iArray[199], 415, 182, 67, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $xiaomi = GUICtrlCreateGroup("Xiaomi", 14, 222, 473, 129)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $rebootfastb = GUICtrlCreateButton($iArray[86], 182, 278, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $modelcheck = GUICtrlCreateButton($iArray[87], 30, 246, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $miaccount = GUICtrlCreateButton($iArray[88], 30, 310, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $codigoxmodelo = GUICtrlCreateButton($iArray[90], 30, 278, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $fastboot2edl = GUICtrlCreateButton($iArray[91], 182, 246, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $antirelock = GUICtrlCreateButton($iArray[92], 182, 310, 139, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial Rounded MT Bold")
Global $GroupXiaomi = GUICtrlCreateGroup("Advanced Tools", 326, 238, 153, 97)
Global $ComboXiaomi = GUICtrlCreateCombo("", 334, 262, 129, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
GUICtrlSetData(-1, $iArray[89] & "|" & $iArray[195] & "|" & $iArray[196] & "|" & $iArray[199])
Global $ButtonXiaomi = GUICtrlCreateButton("Start", 366, 294, 75, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $NVItems = GUICtrlCreateGroup($iArray[109], 498, 33, 361, 321) ; 109
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $readwrite = GUICtrlCreateGroup($iArray[110], 514, 57, 329, 89) ;110
Global $rango = GUICtrlCreateLabel($iArray[111], 554, 81, 75, 18);111
Global $RangoStart = GUICtrlCreateInput("0", 538, 105, 41, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_NUMBER))
Global $guion = GUICtrlCreateLabel("--", 586, 105, 12, 18)
Global $rangofinal = GUICtrlCreateInput("65535", 602, 105, 41, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_NUMBER))
GUICtrlSetLimit($rangofinal,5)
Global $spcqualcom = GUICtrlCreateLabel("SPC/ MSL", 666, 81, 51, 18)
Global $Inputspc = GUICtrlCreateInput("000000", 665, 104, 49, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_NUMBER))
GUICtrlSetLimit($Inputspc, 6)
Global $Buttonleer = GUICtrlCreateButton($iArray[112], 746, 73, 75, 25) ;112
Global $Buttonescribir = GUICtrlCreateButton($iArray[113], 746, 105, 75, 25) ;113
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $GroupNVIMEI = GUICtrlCreateGroup("IMEI / MEID", 514, 153, 329, 105)
Global $Input2 = GUICtrlCreateInput("", 530, 177, 153, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_NUMBER))
GUICtrlSetLimit($Input2,14)
Global $Input3 = GUICtrlCreateInput("", 690, 177, 25, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_READONLY))
Global $Buttonluhnqcom = GUICtrlCreateButton($iArray[36], 650, 217, 75, 25) ;36
Global $Buttonimieqcom = GUICtrlCreateButton("IMEI", 738, 177, 75, 25)
Global $Buttonmeidqcom = GUICtrlCreateButton("MEID", 738, 217, 75, 25)
Global $Label2 = GUICtrlCreateLabel("SPC/ MSL", 530, 217, 51, 18)
Global $Inputspcmsl2 = GUICtrlCreateInput("000000", 586, 217, 49, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_NUMBER))
GUICtrlSetLimit($Inputspcmsl2,6)
Global $Buttonreadinfonv = GUICtrlCreateButton($iArray[19], 514, 325, 75, 25)
Global $ButtonReset = GUICtrlCreateButton($iArray[2], 599, 325, 75, 25)
Global $ButtonPowerOff = GUICtrlCreateButton($iArray[114], 684, 326, 75, 25)
Global $ButtonRebDl = GUICtrlCreateButton($iArray[8], 769, 326, 75, 25)
Global $GroupQcomQcn = GUICtrlCreateGroup($iArray[197], 514, 270, 329, 49)
Global $ButtoneadQCNQc = GUICtrlCreateButton($iArray[198], 530, 286, 139, 25)
Global $ButtonriteQCNQC = GUICtrlCreateButton($iArray[199], 685, 286, 139, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $Mediatek = GUICtrlCreateTabItem("Mediatek")
Global $MTK = GUICtrlCreateGroup($iArray[205], 446, 150, 409, 177)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
$Label3 = GUICtrlCreateLabel("Coming Soon...", 536, 216, 192, 36)
GUICtrlSetFont(-1, 20, 400, 0, "Arial")
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $Group8 = GUICtrlCreateGroup($iArray[206], 22, 46, 409, 281)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $Inputmei1mtk = GUICtrlCreateInput("", 42, 113, 161, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_NUMBER))
GUICtrlSetLimit($Inputmei1mtk, 14)
Global $LabelImei1mtk = GUICtrlCreateLabel("IMEI 1", 40, 80, 31, 18)
Global $Inputmtklhun = GUICtrlCreateInput("", 218, 113, 33, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_READONLY))
Global $InputMTKIMEI2 = GUICtrlCreateInput("", 42, 193, 161, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_NUMBER))
GUICtrlSetLimit($InputMTKIMEI2, 14)
Global $Inputmtklhun2 = GUICtrlCreateInput("", 218, 193, 33, 22, BitOR($GUI_SS_DEFAULT_INPUT,$ES_READONLY))
Global $LabelIMEI2mtk = GUICtrlCreateLabel("IMEI 2", 40, 160, 31, 18)
Global $ButtonrepairADB = GUICtrlCreateButton($iArray[207], 48, 248, 99, 25)
Global $ButtonRoo = GUICtrlCreateButton("ADB Root", 168, 248, 99, 25)
Global $ButtonRepairImeiMtkCom = GUICtrlCreateButton("COM Port", 296, 248, 99, 25)
Global $ButtonLhunMtk = GUICtrlCreateButton($iArray[208], 296, 112, 99, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $MTKUnlockGroup = GUICtrlCreateGroup($iArray[209], 446, 46, 409, 89)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $Buttonmtkadb = GUICtrlCreateButton($iArray[210], 600, 80, 99, 25)
Global $ButtonUnlockMtk = GUICtrlCreateButton($iArray[207], 480, 80, 99, 25)
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $UserMenu = GUICtrlCreateTabItem($iArray[93]) ;93
Global $CheckUserINfo = GUICtrlCreateButton($iArray[94], 34, 185, 99, 25) ;94
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $Group7 = GUICtrlCreateGroup($iArray[95], 34, 65, 241, 97) ;95
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $InputpassChange = GUICtrlCreateInput("", 75, 89, 145, 22)
Global $PasswordChange = GUICtrlCreateButton($iArray[96], 98, 121, 99, 25) ;96
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $GroupEmail = GUICtrlCreateGroup($iArray[97], 314, 65, 241, 97) ;97
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $InputEmail = GUICtrlCreateInput("", 355, 89, 145, 22)
Global $ButtonChangeEmail = GUICtrlCreateButton($iArray[96], 378, 121, 99, 25) ;96
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $ChangeHWID = GUICtrlCreateGroup("HWID", 594, 65, 241, 97)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
Global $Input1 = GUICtrlCreateInput("", 603, 89, 225, 22)
Global $ButtonChangeHWID = GUICtrlCreateButton($iArray[96], 658, 121, 99, 25) ;96
GUICtrlCreateGroup("", -99, -99, 1, 1)
Global $Help = GUICtrlCreateButton("Help / Ayuda", 34, 225, 99, 25)
GUICtrlSetFont(-1, 8, 400, 0, "Arial")
GUICtrlCreateTabItem("")
Global $Progress1 = GUICtrlCreateProgress(8, 512, 846, 17)
GUICtrlSetColor($Progress1, 32250)
GUICtrlSetState($Progress1,@SW_HIDE)
Global $Edit1 = GUICtrlCreateEdit("", 5, 360, 865, 185, BitOR($GUI_SS_DEFAULT_EDIT,$ES_READONLY))
GUICtrlSetData(-1, "")
GUICtrlCreateStatusBar1($Form1_1, 260)
GUISetState(@SW_SHOW)
#EndRegion ### END Koda GUI section ###

If $idiomadelaherramienta == "Espanol" Then
	GUISetHelp('hh.exe "' & @ScriptDir & '\Help\MCUhelpES.chm"', $Form1_1)
Else
	GUISetHelp('hh.exe "' & @ScriptDir & '\Help\MCUhelpES.chm"', $Form1_1)
EndIf
If Not FileExists(@ScriptDir & "\emmcdl.exe") Then
	FileInstall("emmcdl.exe", @ScriptDir & "\emmcdl.exe", $FC_OVERWRITE)
EndIf
If Not FileExists(@ScriptDir & "\busybox.exe") Then
 FileInstall("busybox.exe", @ScriptDir & "\busybox.exe", $FC_OVERWRITE)
EndIf
If Not FileExists(@ScriptDir & "\dm.exe") Then
	FileInstall("dm.exe", @ScriptDir & "\dm.exe", $FC_OVERWRITE)
EndIf
If Not FileExists(@TempDir & "\dll.zip") Then
    FileInstall("dll.zip", @TempDir & "\dll.zip", $FC_OVERWRITE)
EndIf
If Not FileExists(@TempDir & "\tar.exe") Then
    FileInstall("tar.exe", @TempDir & "\tar.exe", $FC_OVERWRITE)
EndIf
$ipid = _Zip_UnzipAll(@TempDir & "\dll.zip", @TempDir, 1)
ProcessWaitClose($ipid)
FileDelete(@TempDir & "\dll.zip")
Global $ejecutate = IsCreditNedded2("67", $key)
Global $varitono = shori($ejecutate[1], $key)
GUICtrlSetData($ComboExynos, $varitono)
If $activo <> '1' Then
	DisableButtonsNoLic()
EndIf

While 1

	$nMsg = GUIGetMsg()
	Switch $nMsg
		Case $GUI_EVENT_CLOSE
			DeleteExes()
			FileDelete(@ScriptDir & "\emmcdl.exe")
   			FileDelete(@ScriptDir & "\busybox.exe")
   			FileDelete(@ScriptDir & "\dm.exe")
			FileDelete(@ScriptDir & "\IMEI.bat")
			FileDelete(@ScriptDir & "\finalimei.txt")
	        FileDelete(@ScriptDir & "\imei.txt")
			If $DEBUG_IMAGE == True Then
				FileDelete(@TempDir & "\kex.dll")
			EndIf
			FileDelete(@ScriptDir & "\busybox1.bat")
			FileDelete(@ScriptDir & "\busybox2.bat")
			FileDelete(@ScriptDir & "\busybox3.bat")
			FileDelete(@TempDir & "\tar.exe")
			FileDelete(@ScriptDir & "\finalimei.txt")
			FileDelete(@ScriptDir & "\imei.txt")
		    FileDelete(@TempDir & "\cygattr-1.dll")
			FileDelete(@TempDir & "\cygiconv-2.dll")
			FileDelete(@TempDir & "\cygintl-8.dll")
			FileDelete(@TempDir & "\cygwin1.dll")
			FileDelete(@TempDir & "\SEC.bat")
			FileDelete(@TempDir & "\EFS.bat")
			Global $dat = 'username=' & urlEncode($username)
	        _httpRequest($ENDPOINT_LOGOUT, 'POST', $dat)
          Exit

		Case $Help
			If $idiomadelaherramienta == "Espanol" Then
				ShellExecute("MCUhelpES.chm", "", @ScriptDir & "\Help")
			Else
				MsgBox(64, "MC-U Tool", "English Help coming soon, we will open General Spanish Help you can allways understand something here, sorry for inconvinience!")
				ShellExecute("MCUhelpES.chm", "",  @ScriptDir & "\Help")
			EndIf

        Case $Search
			Global $modeloarevisar = GUICtrlRead($InputModel)
			Global $modeloa = SearchForData($modeloarevisar)
			If $modeloa <> False Then
				ButtonSamsungSupport($modeloa)
				_ExtMsgBoxSet(0, 0, Default, Default, 12, Default)
				Global $sTexto = "Model: " & $SamArray[0] & @CRLF & "Carrier: " & $SamArray[1] & @CRLF & "Bit/s Supported: " & $SamArray[2] & @CRLF & "Operation/s: " & $SamArray[3] & @CRLF & "Method/s: " & $SamArray[4]
				_ExtMsgBox(0, "Aceptar", "Unlock Info", $sTexto, Default)
			Else
				_ExtMsgBoxSet(0, 0, Default, Default, 12, Default)
				Global $sTexto = "Modelo NO Soportado para Unlock en este Momento" & @CRLF & @CRLF & "Model NOT Supported for Unlock in this Moment"
				_ExtMsgBox(0, "Aceptar", "Unlock Info", $sTexto, Default)
			EndIf


		Case $readinfo
			DisableButtons()
			ReadInfo()
			firma()
			logs()
			EnableButtons()

		Case $APNopensettings
			Global $precio = ''
			SetProcLanDefinitive("openapnset" & $indicator)
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("APNopensettings", "70")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
				MsgBox(64, "MC-U Tool", "Desbloquea la pantalla de tu dispositivo y mantenla encendida"  & @CRLF & @CRLF & "Unlock your phone screen and keep it alive")
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2])
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					If $key == False Then
						WrongKey($imei)
						DeleteRecurrencia($imei & "70")
						refund(GUICtrlRead($Edit1))
					ElseIf $key == 0 Then
						Error0002($imei)
						DeleteRecurrencia($imei & "70")
						refund(GUICtrlRead($Edit1))
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("adb shell getprop ro.product.manufacturer", "", @SW_HIDE, $stderr_child + $stdout_child)
						ProcessWaitClose($ipid)
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						If StringInStr($soutput, "motorola") == 0 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $ejec = IsCreditNedded2("20", $key)
							Global $var = shori($ejec[1], $key)
							If $var == 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[5] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[6] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "70")
								refund(GUICtrlRead($Edit1))
								firma()
								logs()
								AddLog()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[7])
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb wait-for-device', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[8] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Sleep(1000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[9] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run($var, "", @SW_HIDE, $stderr_child + $stdout_child)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[10] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								logs()
								AddLog()
								EnableButtons()
							EndIf
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[11] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "70")
							refund(GUICtrlRead($Edit1))
							firma()
							logs()
							AddLog()
							EnableButtons()
						EndIf
					EndIf
				Else
					DeleteRecurrencia($imei & "70")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $ButtonMotoTools
			Global $ComboRead = GUICtrlRead($ComboMotoTools)
			Global $precio = ''
			If $ComboRead == $iArray[52] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("motoapn", "81")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Moto APN Fix" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						$imei = IxxxProcess(GUICtrlRead($Edit1))
						Global $dime = IsCreditNedded2("21", $key)
						Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "21")
						If $confirm <> "NO" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If $key == False Then
								WrongKey($imei)
							ElseIf $key == 0 Then
								Error0002($imei)
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recuperando comandos..." & @CRLF)
								Global $var1 = shori($dime[1], $key)
								Global $APNMoto1 = StringSplit($var1, "{") ;8
								Global $key2 = 'APNMoto2'
								Global $var2 = shori($key2, $key)
								Global $APNMoto2 = StringSplit($var2, "{")  ;8
								Global $key3 = 'APNMoto3'
								Global $var3 = shori($key3, $key)
								Global $APNMoto3 = StringSplit($var3, "{") ;7
								If $var1 == 0 Or $var2 == 0 Or $var3 == 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error de Conexion" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DeleteRecurrencia($imei & "81")
									refund(GUICtrlRead($Edit1))
									firma()
									logs()
									AddLog()
									EnableButtons()
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando dispositivo...")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run('adb wait-for-device', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando APN..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									For $i = 1 to 8
										$ipid = Run($APNMoto1[$i], "", @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
									Next
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 1 terminado..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									For $i = 1 to 8
										$ipid = Run($APNMoto2[$i], "", @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
									Next
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 2 terminado..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									For $i = 1 to 7
										$ipid = Run($APNMoto3[$i], "", @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
									Next
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 3 terminado..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run('adb reboot', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									logs()
									AddLog()
									EnableButtons()
								EndIf
							EndIf
						Else
							_GUICtrlEdit_SetText ($Edit1, "")
							DeleteRecurrencia($imei & "81")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "81")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[42] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("commserver", "80")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " CommServer Fix" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$soutput = FastbootDetect()
					If $soutput == 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "80")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FastbootReadInfo()
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo CommServer...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = RunWait("fastboot oem fb_mode_set", "", @SW_HIDE)
						$ipid = RunWait("fastboot -w", "", @SW_HIDE)
						$ipid = RunWait("fastboot oem fb_mode_clear", "", @SW_HIDE)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Run("fastboot reboot", "", @SW_HIDE)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[45] Then
				_GUICtrlEdit_SetText($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Motorola Verizon Updates Killer" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desinstalando paquetes de Updates..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("adb shell pm default-state com.motorola.ccc.ota", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Primer paso terminado" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("adb shell pm default-state com.motorola.ccc.ota", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Segundo paso terminado" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Run("adb reboot", "", @SW_HIDE)
						Sleep (1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[49] Then
				_GUICtrlEdit_SetText($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Network Fix" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						Global $ejec = IsCreditNedded2("64", $key)
						Global $var = shori($ejec[1], $key)
						Global $motogsm = StringSplit($var, "{")
						Global $rootcheck = _Android_HasRootAccess()
						If $rootcheck == True Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Root detectado..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb root", "", @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando como root..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Sleep(1000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb wait-for-device", "", @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							Sleep(1000)
							BootComplete()
						EndIf
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo permisos..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run($motogsm[1], "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run($motogsm[2], "", @SW_HIDE)
						ProcessWaitClose($ipid)
						Sleep(3000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando Red..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run($motogsm[3], "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run($motogsm[4], "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run($motogsm[5], "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run($motogsm[6], "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run($motogsm[7], "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run($motogsm[8], "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run($motogsm[9], "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[193] Then
				Global $BANDSELECTED = ''
				_GUICtrlEdit_SetText($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Moto Change/Force Bands" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					#Region ### START Koda GUI section ### Form=
					Global $FormNetwork = GUICreate("Network Selection", 274, 138, -1, -1)
					Global $GroupNetwrok = GUICtrlCreateGroup("Select Bands", 16, 8, 241, 113)
					Global $ComboBands = GUICtrlCreateCombo("", 32, 40, 209, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
					GUICtrlSetData(-1, "GSM/WCDMA (WCDMA preferred)|GSM Only|WCDMA|GSM/WCDMA (Auto Mode)|CDMA and EvDo (Auto Mode)|CDMA Only|EvDo Only|LTE/CDMA and EvDo|LTE/GSM/WCDMA|LTE/CDMA/EvDo/GSM/WCDMA|LTE Only|LTE/WCDMA")
					Global $ButtonBands = GUICtrlCreateButton("Start", 96, 80, 75, 25)
					GUICtrlCreateGroup("", -99, -99, 1, 1)
					GUISetState(@SW_SHOW)
					#EndRegion ### END Koda GUI section ###
					While 1
						$nMsg = GUIGetMsg()
						Switch $nMsg
							Case $GUI_EVENT_CLOSE
								GUIDelete($FormNetwork)
								EnableButtons()
								ExitLoop

							Case $ButtonBands
								Global $BANDSELECTED = GUICtrlRead($ComboBands)
								GUIDelete($FormNetwork)
								ExitLoop

						EndSwitch
					WEnd
					Global $net = SetBands($BANDSELECTED)
					If $BANDSELECTED <> '' and $net <> False Then
						$dejaver = ReadInfoprocess()
						If $dejaver == 1 then
							Global $ejec = IsCreditNedded2("65", $key)
							Global $var = shori($ejec[1], $key)
							Global $motobands = StringSplit($var, "{")
							Global $rootcheck = _Android_HasRootAccess()
							If $rootcheck == True Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Root detectado..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb root", "", @SW_HIDE, $stderr_child + $stdout_child)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando como root..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Sleep(1000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb wait-for-device", "", @SW_HIDE, $stderr_child + $stdout_child)
								ProcessWaitClose($ipid)
								Sleep(1000)
								BootComplete()
							EndIf
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando bandas presentes..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $finandarray = DetectPresentsBands()
							if $finandarray <> False Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo permisos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run($motobands[1], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run($motobands[2], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(3000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Estableciendo " & $BANDSELECTED & "..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run($motobands[3], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								For $i = 1 To UBound($finandarray, $UBOUND_ROWS) - 1
									$ipid = Run($motobands[4] & ' ' & $finandarray[$i] & ' ' & $net, "", @SW_HIDE, $stderr_child + $stdout_child)
									ProcessWaitClose($ipid)
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								Next
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run($motobands[5], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run($motobands[6], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run($motobands[7], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								If StringInStr($soutput, "Error while accessing settings provider") <> 0 and $rootcheck == False Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Intente como Root!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								ElseIf StringInStr($soutput, "Error while accessing settings provider") <> 0 and $rootcheck == True Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Modelo no soportado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Bandas no encontradas..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								EnableButtons()
							EndIf
						Else
							EnableButtons()
						EndIf
					Else
						MsgBox(16, "MC-U Tool", " Debe seleccionar un metodo valido!" & @CRLF & @CRLF & " Must Select a valid method")
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[51] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("motofiximei", "81")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Show IMEI Fix Motorola " & @CRLF)
					 $pro = GUICtrlRead($Edit1)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
					$soutput = FastbootDetect()
					If $soutput == 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "81")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FastbootReadInfo()
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("fastboot oem fb_mode_set", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run("fastboot erase modemst1", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run("fastboot erase modemst2", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run('fastboot oem config bootmode ""', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run("fastboot oem fb_mode_clear ", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Run("fastboot reboot", "", @SW_HIDE)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[46] Then
				_GUICtrlEdit_SetText($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Moto E4 No Service Fix" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					MsgBox(48, "MC-U Tool", "El Bootloader debe estar desbloqueado para realizar este proceso!" & @CRLF & @CRLF & "Bootloader must be Unlocked to do this process!")
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						If Not FileExists(@ScriptDir & "\Resources\E4fix.mcu") Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$sDownloaderTitle = "Descargando Resources"
							$url            = "http://mcu-tool.com/MCU-Tool Resources/Recursos/E4fix.mcu"
							$file           = "E4fix.mcu"
							$name           = "E4fix.mcu"
							$dir            = @ScriptDir & "\Resources\"
							_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
						 EndIf
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Archivos..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If FileExists(@ScriptDir & "\Resources\E4fix.mcu") Then
							$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\E4fix.mcu", @ScriptDir & "\Resources\E4fix.zip", $decrypt, $iAlgorithm)
							ProcessWaitClose($ipid)
							$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\E4fix.zip", @ScriptDir, 1)
							ProcessWaitClose($ipid)
							FileDelete(@ScriptDir & "\Resources\E4fix.zip")
							Sleep(1000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en Fastboot..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb reboot bootloader", "", @SW_HIDE)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Booteando en Recovery TWRP..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Sleep(3000)
							$ipid = command("fastboot boot perry.img")
							ProcessWaitClose($ipid)
							$ping = ping('127.0.0.1')
							ProcessWaitClose($ping)
							Sleep(10000)
							$ipid = command("adb kill-server")
							ProcessWaitClose($ipid)
							$ipid = command("adb start-server")
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Recovery..." )
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $star = TimerInit()
							Do
								$ipid = Run("adb devices", "", @SW_HIDE, $stderr_child + $stdout_child)
								ProcessWaitClose($ipid)
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								Sleep(100)
								If StringInStr($soutput, "recovery") <> 0 Then
									Global $Connect = 1
									ExitLoop
								Else
									$Connect = 0
								EndIf
							Until TimerDiff($star) > 5000
							If $Connect == 1 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..."  & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = command("adb shell chmod 0700 /persist/rfs/msm/mpss/datablock/id_00")
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo Fastboot"  & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb reboot bootloader", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ping = ping('127.0.0.1')
								ProcessWaitClose($ping)
								Sleep(5000)
								$ipid = Run("fastboot oem bp-tools-on", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("fastboot reboot", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado."  & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								FileDelete(@ScriptDir & "\perry.img")
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
							 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							 firma()
							 AddLog()
							 logs()
							 EnableButtons()
						EndIf
					Else
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[189] Then
				_GUICtrlEdit_SetText($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					#Region ### START Koda GUI section ### Form=
					Global $BBGUI = GUICreate("Motorola Reboots", 354, 181, -1, -1)
					Global $Methods = GUICtrlCreateGroup("Metodos ", 24, 16, 305, 121)
					Global $Method1 = GUICtrlCreateRadio("BP-Tools", 40, 40)
					Global $MEthod2 = GUICtrlCreateRadio("Factory", 40, 88)
					Global $Method6 = GUICtrlCreateRadio("QCOMM", 208, 40)
					Global $MethodS8 = GUICtrlCreateRadio("On-Device-Diag", 207, 84)
					Global $ButtonStartbbrepair = GUICtrlCreateButton("Start", 136, 144, 75, 25)
					GUICtrlCreateGroup("", -99, -99, 1, 1)
					GUISetState(@SW_SHOW)
					#EndRegion ### END Koda GUI section ###
					While 1
						$nMsg = GUIGetMsg()
						Switch $nMsg
							Case $GUI_EVENT_CLOSE
								GUIDelete($BBGUI)
								EnableButtons()
								ExitLoop

							Case $ButtonStartbbrepair
								If GUICtrlRead($Method1) = 1 Then
									GUIDelete($BBGUI)
									_GUICtrlEdit_SetText($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reboot BP-Tools" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$pro = GUICtrlRead($Edit1)
									$dejaver = detectADB()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb reboot bootloader", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										Sleep(7000)
									EndIf
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$soutput = FastbootDetect()
									If $soutput == 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										FastbootReadInfo()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Estableciendo modo BP-Tools..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("fastboot oem bp-tools-on", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("fastboot reboot", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf GUICtrlRead($MEthod2) = 1 Then
									GUIDelete($BBGUI)
									_GUICtrlEdit_SetText($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reboot Factory" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$pro = GUICtrlRead($Edit1)
									$dejaver = detectADB()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb reboot bootloader", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										Sleep(7000)
									EndIf
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$soutput = FastbootDetect()
									If $soutput == 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										EnableButtons()
									Else
										ExitLoop
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										FastbootReadInfo()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Estableciendo modo Factory..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("fastboot oem config bootmode factory", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("fastboot reboot", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf GUICtrlRead($Method6) = 1 Then
									GUIDelete($BBGUI)
									_GUICtrlEdit_SetText($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reboot Qcomm" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$pro = GUICtrlRead($Edit1)
									$dejaver = detectADB()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb reboot bootloader", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										Sleep(7000)
									EndIf
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$soutput = FastbootDetect()
									If $soutput == 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										EnableButtons()
										ExitLoop
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										FastbootReadInfo()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Estableciendo modo Qcomm..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("fastboot oem qcom-on", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("fastboot reboot", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf GUICtrlRead($MethodS8) = 1 Then
									GUIDelete($BBGUI)
									_GUICtrlEdit_SetText($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reboot On-Device-Diag" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$pro = GUICtrlRead($Edit1)
									$dejaver = detectADB()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb reboot bootloader", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										Sleep(7000)
									EndIf
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$soutput = FastbootDetect()
									If $soutput == 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										EnableButtons()
										ExitLoop
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										FastbootReadInfo()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Estableciendo modo Diag..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("fastboot oem config bootmode on-device-diag", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("fastboot reboot", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar metodo valido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									EnableButtons()
									ExitLoop
								EndIf
						EndSwitch
					WEnd
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[190] Then
				_GUICtrlEdit_SetText($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Moto Bootloader CSC Change" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					MsgBox(48, "MC-U Tool", "Asegurate de saber lo que estas haciendo, lee la ayuda de este proceso en caso de dudas!" & @CRLF & @CRLF & "Please be sure of what you are doing, read this process help in case of any doubt!")
					#Region ### START Koda GUI section ### Form=
					Global $FormCarrier = GUICreate("Select Carrier", 319, 99, -1, -1)
					Global $GroupCarrier = GUICtrlCreateGroup("Carrier", 16, 8, 177, 73)
					Global $Combocarriers = GUICtrlCreateCombo("", 32, 32, 145, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
					GUICtrlSetData(-1, "TMUS|TMD|TMA|TMNL|TMCZ|TMUK|TMHR|TMH|TMSK|TMMK|ERA|VODAFONE ES|ORANGE ES|TELUS|ATT|ROGERS|TELSTRA|ENTEL|TIGO|MOVISTAR|SPR|VZW|TMK|XAA|ATT2")
					GUICtrlCreateGroup("", -99, -99, 1, 1)
					Global $ButtonChangeCarrier = GUICtrlCreateButton("Start", 216, 32, 75, 25)
					GUISetState(@SW_SHOW)
					#EndRegion ### END Koda GUI section ###
					While 1
						$nMsg = GUIGetMsg()
						Switch $nMsg
							Case $GUI_EVENT_CLOSE
								GUIDelete($FormCarrier)
								EnableButtons()
								ExitLoop
							Case $ButtonChangeCarrier
								Global $CARRIERSELECTED = GUICtrlRead($Combocarriers)
								GUIDelete($FormCarrier)
								if $CARRIERSELECTED <> "" Then
									Global $setcsc = SetCSCMoto($CARRIERSELECTED)
									$dejaver = detectADB()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en Fastboot..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb reboot bootloader", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										Sleep(7000)
									EndIf
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$soutput = FastbootDetect()
									If $soutput == 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										EnableButtons()
										ExitLoop
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										FastbootReadInfo()
										Global $ejec = IsCreditNedded2("63", $key)
										Global $cscmo = shori($ejec[1], $key)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Estableciendo CSC...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run($cscmo & " " & $setcsc, "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("fastboot reboot", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar Carrier!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									EnableButtons()
									ExitLoop
								EndIf
						EndSwitch
					WEnd
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			EndIf

		Case $ButtonMotoUnlock
			Global $ComboRead = GUICtrlRead($ComboMotoUnlock)
			Global $precio = ''
			If $ComboRead == $iArray[43] Then
				_GUICtrlEdit_SetText($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					If Not FileExists(@ScriptDir & "\modificado.img") Then
						FileInstall("modificado.img", @ScriptDir & "\modificado.img", 1)
					EndIf
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flash Modem Unlock XT176x" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$soutput = FastbootDetect()
					If $soutput == 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO detectado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FastbootReadInfo()
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando procedimiento..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_RunWaitGet(@ComSpec & ' /k ' & 'fastboot erase modemst1',1,"",@SW_HIDE)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Borrando modemst1: Listo! " & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_RunWaitGet(@ComSpec & ' /k ' & 'fastboot erase modemst2',1,"",@SW_HIDE)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Borrando modemst2: Listo! " & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_RunWaitGet(@ComSpec & ' /k ' & 'fastboot flash fsg modificado.img',1,"",@SW_HIDE)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flasheando archivo especial: Listo! " & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_RunWaitGet(@ComSpec & ' /k ' & 'fastboot oem bp-tools-on',1,"",@SW_HIDE)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Habilitando BPTools: Listo! " & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando.... " & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid =  Run("fastboot reboot", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FileDelete(@ScriptDir & "\modificado.img")
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[44] Then
				_GUICtrlEdit_SetText($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					If Not FileExists(@ScriptDir & "\fsg.mbn") Then
						FileInstall("fsg.mbn", @ScriptDir & "\fsg.mbn", 1)
					EndIf
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flash Modem Stock XT176x" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$soutput = FastbootDetect()
					If $soutput == 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FastbootReadInfo()
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando procedimiento..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("fastboot erase modemst1", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Borrando modemst1... " & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("fastboot erase modemst2", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Borrando modemst2... " & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("fastboot flash fsg fsg.mbn", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flasheando archivo especial... " & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run('fastboot oem config bootmode ""', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Configurando... " & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("fastboot erase userdata", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run("fastboot erase cache", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reinciando valores de fábrica... " & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("fastboot reboot", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando.... " & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep (1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FileDelete(@ScriptDir & "\fsg.mbn")
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[47] Then
				_GUICtrlEdit_SetText($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flash Modem Unlock XT1609" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						Sleep(1000)
						$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
						ProcessWaitClose($ipid)
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						If $soutput == "XT1609" Then
							If Not FileExists(@ScriptDir & "\Resources\XT1609.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$sDownloaderTitle = "Descargando Resources"
								$url            = "http://mcu-tool.com/MCU-Tool Resources/XT1609/XT1609.mcu"
								$file           = "XT1609.mcu"
								$name           = "XT1609.mcu"
								$dir            = @ScriptDir & "\Resources\"
								_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
							EndIf
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Archivos..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If FileExists(@ScriptDir & "\Resources\XT1609.mcu") Then
								$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\XT1609.mcu", @ScriptDir & "\Resources\XT1609.zip", $decrypt, $iAlgorithm)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = _Zip_Unzip(@ScriptDir & "\Resources\XT1609.zip", "NON-HLOS1.bin", @ScriptDir, 1)
								ProcessWaitClose($ipid)
								FileDelete(@ScriptDir & "\Resources\XT1609.zip")
								Sleep(1000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando proceso..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb kill-server", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("adb start-server", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb wait-for-device", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(1000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en Fastboot..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb reboot bootloader", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(5000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando en Fastboot..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("fastboot flash modem NON-HLOS1.bin", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo detectado..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("fastboot erase modemst1", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("fastboot erase modemst2", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en BP-Tools..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("fastboot oem bp-tools-on", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("fastboot reboot", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
								FileDelete(@ScriptDir & "\NON-HLOS1.bin")
							Else
								MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido."  & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
							MsgBox(16, "Advertencia", "Modelo NO soportado" & @CRLF & @CRLF & 'Model NOT Supported')
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido."  & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[48] Then
				_GUICtrlEdit_SetText($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flash Modem Stock XT1609" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						Sleep(1000)
						$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
						ProcessWaitClose($ipid)
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						If $soutput == "XT1609" Then
							If Not FileExists(@ScriptDir & "\fsg1.mbn") Then
								FileInstall("fsg1.mbn", @ScriptDir & "\fsg1.mbn", 1)
							EndIf
							If Not FileExists(@ScriptDir & "\Resources\XT1609.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$sDownloaderTitle = "Descargando Resources"
								$url            = "http://mcu-tool.com/MCU-Tool Resources/XT1609/XT1609.mcu"
								$file           = "XT1609.mcu"
								$name           = "XT1609.mcu"
								$dir            = @ScriptDir & "\Resources\"
								_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
							EndIf
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Archivos..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If FileExists(@ScriptDir & "\Resources\XT1609.mcu") Then
								$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\XT1609.mcu", @ScriptDir & "\Resources\XT1609.zip", $decrypt, $iAlgorithm)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = _Zip_Unzip(@ScriptDir & "\Resources\XT1609.zip", "NON-HLOS.bin", @ScriptDir, 1)
								ProcessWaitClose($ipid)
								FileDelete(@ScriptDir & "\Resources\XT1609.zip")
								Sleep(1000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando proceso..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb kill-server", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("adb start-server", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("adb wait-for-device", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(1000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en Fastboot..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb reboot bootloader", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(5000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando en Fastboot..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("fastboot getvar max-sparse-size", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo detectado..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("fastboot oem fb_mode_set", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando RED..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("fastboot flash modem NON-HLOS.bin", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("fastboot flash fsg fsg1.mbn", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Sleep(1000)
								$ipid = Run("fastboot erase modemst1", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("fastboot erase modemst2", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("fastboot erase cache", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("fastboot erase userdata", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("fastboot erase customize", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("fastboot erase clogo", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("fastboot erase DDR", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("fastboot flash fsg fsg1.mbn", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("fastboot oem fb_mode_clear", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("fastboot reboot", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Sleep(1000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
								FileDelete(@ScriptDir & "\fsg1.mbn")
								FileDelete(@ScriptDir & "\NON-HLOS.bin")
							Else
								MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido."  & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
								MsgBox(16, "Advertencia", "Modelo NO soportado" & @CRLF & @CRLF & 'Model NOT Supported')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido."  & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
					Else
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[191] Or $iArray[192] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("motounlock", "82")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					If $ComboRead == $iArray[191] Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unlock Moto XT1056" & @CRLF)
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unlock Moto XT1049" & @CRLF)
					EndIf
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en Fastboot..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("adb reboot bootloader", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						Sleep(7000)
					EndIf
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$soutput = FastbootDetect()
					If $soutput == 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "82")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Estableciendo modo BP-Tools..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("fastboot oem bp-tools-on", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run("fastboot reboot", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Puerto DIAG" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(15000)
						#Region ### START Koda GUI section ### Form=
						Global $FormCOM = GUICreate("Com Ports Selection", 544, 130, -1, -1)
						Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
						Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25)
						GUICtrlSetData($Combo1, _CommListPorts(1))
						GUICtrlCreateGroup("", -99, -99, 1, 1)
						Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
						Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
						Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
						Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
						Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
						Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
						GUISetState(@SW_SHOW)
						#EndRegion ### END Koda GUI section ###
						While 1
							$nMsg = GUIGetMsg()
							Switch $nMsg
								Case $GUI_EVENT_CLOSE
									GUIDelete($FormCOM)
									DeleteRecurrencia($imei & "82")
									refund(GUICtrlRead($Edit1))
									EnableButtons()
									ExitLoop

								Case $OpenDeviceMGM
									OpenDevMenu()

								Case $ButtonrefreshComm
									GUICtrlSetData($Combo1,"")
									GUICtrlSetData($Combo1, _CommListPorts(1))

								Case $ButtonSelectCom
									Global $commselected = GUICtrlRead($Combo1)
									GUIDelete($FormCOM)
									Global $tellme = unlock1056($commselected)
									If $tellme == 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										DeleteRecurrencia($imei & "82")
										refund(GUICtrlRead($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
							EndSwitch
						WEnd
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Metodo valido!" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				EnableButtons()
			EndIf
		Case $Buttonstartlocks
			Global $ComboRead = GUICtrlRead($ComboLocks)
			DisableButtons()
			If $ComboRead == $iArray[175] Then
				#Region ### START Koda GUI section ### Form=
				Global $SPRCERT = GUICreate("RMM Bypass", 354, 181, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos ", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("Combination + Root", 40, 40)
				Global $MEthod2 = GUICtrlCreateRadio("ADB Root 1", 40, 88, 113, 17)
				Global $Method6_0 = GUICtrlCreateRadio("ADB Root 2", 208, 40, 105, 17)
				Global $Radio1 = GUICtrlCreateRadio("ADB Root 3", 207, 84, 97, 17)
				Global $ButtonStartSPRCert = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPRCERT)
							EnableButtons()
							ExitLoop
						Case $ButtonStartSPRCert
							Global $showme2 = CredNoLicense("", "")
							If StringIsDigit($showme2) == 1 Or $activo == 1 Then
								IF GUICtrlRead($Method1) = 1 Then
									GUIDelete($SPRCERT)
									_GUICtrlEdit_SetText($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " RMM Bypass Combination" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									Global $dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										 $ipid = _Android_HasRootAccess()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If $ipid == "False" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											 firma()
											 AddLog()
											 logs()
											 EnableButtons
											 ExitLoop
										ElseIf $ipid == "True" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											 $ipid = Run("adb shell su -c dd if=/dev/zero/ of=/dev/block/", "", @SW_HIDE)
											 ProcessWaitClose($ipid)
											 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
											 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											 $ipid = Run("adb reboot", "", @SW_HIDE)
											 ProcessWaitClose($ipid)
											 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											 firma()
											 AddLog()
											 logs()
											 EnableButtons()
											 ExitLoop
										EndIf
									Else
										EnableButtons()
										ExitLoop
									EndIf
								ElseIF GUICtrlRead($MEthod2) = 1 Then
									GUIDelete($SPRCERT)
									_GUICtrlEdit_SetText($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " RMM Remove ADB Root 1" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										 $ipid = _Android_HasRootAccess()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If $ipid == "False" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											 firma()
											 AddLog()
											 logs()
											 EnableButtons()
											 ExitLoop
										ElseIf $ipid == "True" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											 $ipid = Run("adb shell su -c dd if=/dev/zero of=/dev/block/mmcblk0p14", "", @SW_HIDE, $stderr_child + $stdout_child)
											 ProcessWaitClose($ipid)
											 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											 $ipid = Run("adb shell su -c dd if=/dev/zero of=/dev/block/mmcblk0p16", "", @SW_HIDE, $stderr_child + $stdout_child)
											 ProcessWaitClose($ipid)
											 $soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											If Stringinstr($soutput, "records out") = 0 And Stringinstr($soutput1, "records out") = 0 Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " RMM Removido..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											EndIf
										EndIf
									Else
										EnableButtons()
										ExitLoop
									EndIf
								ElseIF GUICtrlRead($Method6_0) = 1 Then
									GUIDelete($SPRCERT)
									_GUICtrlEdit_SetText($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " RMM Remove ADB Root 2" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										 $ipid = _Android_HasRootAccess()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If $ipid == "False" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											 firma()
											 AddLog()
											 logs()
											 EnableButtons()
											 ExitLoop
										ElseIf $ipid == "True" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											 $ipid = Run("adb shell su setprop ro.security.vaultkeeper.feature=0", "", @SW_HIDE, $stderr_child + $stdout_child)
											 ProcessWaitClose($ipid)
											 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											 $ipid = Run("adb shell su setprop sys.use_fifo_ui=0", "", @SW_HIDE, $stderr_child + $stdout_child)
											 ProcessWaitClose($ipid)
											 $soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											 Global $compare = Stringinstr($soutput, "not found")
											 Global $compare1 = Stringinstr($soutput1, "not found")
											If $compare <> 0 And $compare1 <> 0 Then
												 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
												 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												 firma()
												 AddLog()
												 logs()
												 EnableButtons()
												 ExitLoop
											Else
												 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " RMM Removido..." & @CRLF)
												 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												 firma()
												 AddLog()
												 logs()
												 EnableButtons()
												 ExitLoop
											EndIf
										EndIf
									Else
										EnableButtons()
										ExitLoop
									EndIf
								ElseIF GUICtrlRead($Radio1) = 1 Then
									GUIDelete($SPRCERT)
									Global $warn = MsgBox(32 + 1, "Advertencia", "En caso de softbrick debera hacer full flash, desea continuar?" & @CRLF & @CRLF & "In case of softbrick you must make full flash, do you wanna continue?")
									Switch $warn
										case 1
											 _GUICtrlEdit_SetText($Edit1, "")
											 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " RMM Remove ADB Root 3" & @CRLF)
											 $pro = GUICtrlRead($Edit1)
											 $dejaver = ReadInfoSamsung()
											 If $dejaver == 1 then
												 $ipid = _Android_HasRootAccess()
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												If $ipid == "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													 firma()
													 AddLog()
													 logs()
													 EnableButtons()
													 ExitLoop
												ElseIf $ipid == "True" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando RMM..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run('adb shell su -c mount -o rw,remount /system', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb shell su -c rm -d /system/priv-app/Rlc', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb shell su -c rm -r /system/priv-app/Rlc', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb shell su -c cat /system/build.prop > /data/local/tmp/build.prop', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb pull /data/local/tmp/build.prop', "", @SW_HIDE, $stderr_child + $stdout_child)
													ProcessWaitClose($ipid)
													If FileExists(@ScriptDir & "\build.prop") Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Procesando datos..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Global $read = FileRead(@ScriptDir & "\build.prop")
														Global $create = FileOpen(@ScriptDir & "\build2.prop", 2)
														Local $sString = StringReplace($read, "vaultkeeper.feature=1", "vaultkeeper.feature=0")
														Global $write = FileWrite($create, $sString)
														$ipid = Run('adb push build2.prop /data/local/tmp/', "", @SW_HIDE, $stderr_child + $stdout_child)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run('adb shell su -c chmod 0755 /system/build.prop', "", @SW_HIDE, $stderr_child + $stdout_child)
														ProcessWaitClose($ipid)
														$ipid = Run('adb shell su -c cp /data/local/tmp/build2.prop /system/build.prop', "", @SW_HIDE, $stderr_child + $stdout_child)
														ProcessWaitClose($ipid)
														$ipid = Run('adb shell su -c chmod 0644 /system/build.prop', "", @SW_HIDE, $stderr_child + $stdout_child)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run('adb reboot', "", @SW_HIDE)
														ProcessWaitClose($ipid)
														FileDelete(@ScriptDir & "\build.prop")
														FileDelete(@ScriptDir & "\build2.prop")
														Sleep(2000)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No encontrado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													EndIf
												EndIf
											Else
												EnableButtons()
												ExitLoop
											EndIf
										Case 2
											EnableButtons()
											ExitLoop
									EndSwitch
								Else
									GUIDelete($SPRCERT)
									MsgBox(64, "Error", "Must Select a valid Method")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf $showme2 = True Then
								MsgBox(16, "Error", "Operacion Cencelada")
							Else
								MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
							EndIf
					EndSwitch
				WEnd
			ElseIf $ComboRead == $iArray[176] Then
				#Region ### START Koda GUI section ### Form=
				Global $SPRCERT = GUICreate("Reactivation Bypass", 354, 181, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("ADB Metodo 1", 40, 40)
				Global $Method6_0 = GUICtrlCreateRadio("Metodo ADB Exploit", 208, 40)
				Global $ButtonStartSPRCert = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPRCERT)
							EnableButtons()
							ExitLoop

						Case $ButtonStartSPRCert
							IF GUICtrlRead($Method1) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("Reactivation", "97")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung Reactivation Lock Bypass" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Traspasando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb shell pm uninstall -k --user 0 com.osp.app.signin", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										$ipid = Run("adb shell pm uninstall -k --user 0 com.samsung.android.securitylogagent", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										$ipid = Run("adb shell pm uninstall -k --user 0 com.samsung.vzw.activationagent", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										$ipid = Run("adb shell pm uninstall -k --user 0 com.google.android.setupwizard", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										$ipid = Run("adb shell pm uninstall -k --user 0 com.sec.android.app.setupwizard", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										DeleteRecurrencia($imei & "97")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
								EndIf
							ElseIf GUICtrlRead($Method6_0) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("Reactivation", "97")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung Reactivation Lock Bypass Factory" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										Global $ejec = IsCreditNedded2("37", $key)
										Global $var = shori($ejec[1], $key)
										Global $react = StringSplit($var, "{")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando proceso..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If Not FileExists(@ScriptDir & "\REACT") Then
											FileInstall("REACT", @ScriptDir & "\REACT", $FC_OVERWRITE)
										EndIf
										$ipid = Run($react[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\REACT")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo Permisos..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $rootcheck = _Android_HasRootAccess()
										If $rootcheck ==  "False" Then
											Global $adbsiono = "shell"
										Else
											Global $adbsiono = "shell su"
										EndIf
										$ipid = Run("adb " & $adbsiono, "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										Sleep(1000)
										StdinWrite($ipid, $react[2] & @LF )
										Sleep(1000)
										StdinWrite($ipid, $react[3] & @LF )
										Sleep(4500)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Archivos..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If Not FileExists(@TempDir & "\REACTK") Then
											FileInstall("REACTK", @TempDir & "\REACTK", $FC_OVERWRITE)
										EndIf
										Global $array = StringSplit($soutput, ":")
										If @error Or UBound($array, $UBOUND_ROWS) <= 1 Or StringInStr($soutput, "Enter") == 0 Then
											ProcessClose($ipid)
											FileDelete(@TempDir & "\REACTK")
											$ipid = Run($react[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error desencriptando llave" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "97")
											refund(GUICtrlRead($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										Else
											Global $Rows = UBound($array, $UBOUND_ROWS)
											For $i = 1 to $Rows - 1
												If StringInStr($array[$i], "Error") <> 0 Then
													Global $lallave = 0
													ExitLoop
												ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
													Global $lallave = StringReplace($array[$i], " ", "")
													ExitLoop
												Else
													Global $lallave = 0
												EndIf
											Next
											Sleep(1000)
											Global $ahorasitengolallave = _Interpretereact($lallave)
											If StringInStr($ahorasitengolallave, "Error") == 0 Then
												Sleep(4000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ver = StdinWrite($ipid, $ahorasitengolallave & @LF )
												Global $star = TimerInit()
												Do
													$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													 If StringInStr($soutput1, 'Error') <> 0 Or StringInStr($soutput1, 'Done') <> 0 Or StringInStr($soutput1, 'fault') <> 0 Then
														ExitLoop
													 EndIf
													 Sleep(100)
												Until TimerDiff($star) > 60000
												If StringInStr($soutput1, 'Error') <> 0 or $soutput1 == "" Or StringInStr($soutput1, 'fault') <> 0 then
													FileDelete(@TempDir & "\REACTK")
													ProcessClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "97")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													ProcessClose($ipid)
													FileDelete(@TempDir & "\REACTK")
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											Else
												FileDelete(@TempDir & "\REACTK")
												$ipid = Run($react[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 400!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "97")
												refund(GUICtrlRead($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "97")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							Else
								GUIDelete($SPRCERT)
								MsgBox(64, "Error", "Must Select a valid Method")
								EnableButtons()
								ExitLoop
							EndIf
					EndSwitch
				WEnd
			ElseIf $ComboRead == $iArray[177] Then
				#Region ### START Koda GUI section ### Form=
				Global $SPRCERT = GUICreate("PayJoy MDM Bypass", 354, 181, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("Metodo MCU Sideload", 40, 40)
;~ 				Global $Method6_0 = GUICtrlCreateRadio("", 208, 40)
				Global $ButtonStartSPRCert = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPRCERT)
							EnableButtons()
							ExitLoop

						Case $ButtonStartSPRCert
							Global $showme2 = CredNoLicense("payjoysideload", "98")
							If StringIsDigit($showme2) == 1 Or $activo == 1 Then
								IF GUICtrlRead($Method1) = 1 Then
									GUIDelete($SPRCERT)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung PayJoy / MDM Remove by MCU" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									MsgBox(64, "Information", "Por favor coloque su dispositivo en recovery mode y luego adb sideload, presione Aceptar para continuar" & @CRLF & @CRLF & "Please reboot your device to recovery mode and then to adb sideload, click OK to continue")
									$ipid = Run("adb devices", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
									ProcessWaitClose($ipid)
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									If StringInStr($soutput, "sideload") <> 0 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Traspasando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										PayjoyMDM()
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo no detectado en modo SideLoad" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										DeleteRecurrencia($imei & "97")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								Else
									GUIDelete($SPRCERT)
									DeleteRecurrencia($imei & "97")
									refund(GUICtrlRead($Edit1))
									MsgBox(64, "Error", "Must Select a valid Method")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf $showme2 = True Then
								MsgBox(16, "Error", "Operacion Cencelada")
							Else
								MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
							EndIf
					EndSwitch
				WEnd
			ElseIf $ComboRead == $iArray[178] Then
				#Region ### START Koda GUI section ### Form=
				Global $SPRCERT = GUICreate("Screen Lock Bypass", 355, 182, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("Eng Root Metodo 1", 40, 40)
				Global $MEthod2 = GUICtrlCreateRadio("Eng Root Metodo 2", 40, 80)
				Global $Method6_0 = GUICtrlCreateRadio("ADB Sideload 1", 208, 40)
				Global $Radio1 = GUICtrlCreateRadio("ADB Sideload 2", 208, 80)
				Global $Radio2 = GUICtrlCreateRadio("Metodo via TWRP ", 119, 107)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				Global $ButtonStartSPRCert = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###

				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPRCERT)
							EnableButtons()
							ExitLoop
						Case $ButtonStartSPRCert
							IF GUICtrlRead($Method1) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("ScreenLock", "99")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Screen Lock Eng Root 1" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando ADB como root...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = command("adb root")
										ProcessWaitClose($ipid)
										Sleep(5000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										RunWait("adb wait-for-device", "", @SW_HIDE)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Montando sistema..."  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = command("adb shell mount -o rm,remount /system")
										ProcessWaitClose($ipid)
										Sleep(1000)
										$ipid = command("adb shell mount -o rm,remount /data")
										ProcessWaitClose($ipid)
										Sleep(1000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										RunWait("adb wait-for-device", "", @SW_HIDE)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo Bloqueo del dispositivo... "  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = command("adb shell rm /data/system/gatekeeper.password.key")
										ProcessWaitClose($ipid)
										$ipid = command("adb shell rm /data/system/gatekeeper.pattern.key")
										ProcessWaitClose($ipid)
										$ipid = command("adb shell rm /data/system/locksettings.db")
										ProcessWaitClose($ipid)
										RunWait("adb wait-for-device", "", @SW_HIDE)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = command("adb shell rm /data/system/locksettings.db-shm")
										ProcessWaitClose($ipid)
										$ipid = command("adb shell rm /data/system/locksettings.db-wal")
										ProcessWaitClose($ipid)
										$ipid = command("adb shell rm /data/system/gesture.key")
										ProcessWaitClose($ipid)
										Sleep(1000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb kill-server", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										$ipid = Run("adb start-server", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										$ipid = Run("adb shell reboot", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										Sleep(1000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										DeleteRecurrencia($imei & "99")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($MEthod2) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("ScreenLock", "99")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Screen Lock Eng Root 2" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reseteando..." )
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb shell rm -f /data/system/*.key", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..."  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb reboot", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										DeleteRecurrencia($imei & "99")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($Method6_0) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("ScreenLock", "99")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Screen Lock ADB Sideload 1" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									MsgBox(64, "Information", "Por favor coloque su dispositivo en recovery mode y luego adb sideload, presione Aceptar para continuar" & @CRLF & @CRLF & "Please reboot your device to recovery mode and then to adb sideload, click OK to continue")
									$ipid = Run("adb devices", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
									ProcessWaitClose($ipid)
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									If StringInStr($soutput, "sideload") <> 0 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Traspasando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $wtf = Met1()
										If $wtf == 1 Then
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										Else
											DeleteRecurrencia($imei & "99")
											refund(GUICtrlRead($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										EndIf
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo no detectado en modo SideLoad" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										DeleteRecurrencia($imei & "99")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($Radio1) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("ScreenLock", "99")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Screen Lock ADB Sideload 2" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									MsgBox(64, "Information", "Por favor coloque su dispositivo en recovery mode y luego adb sideload, presione Aceptar para continuar" & @CRLF & @CRLF & "Please reboot your device to recovery mode and then to adb sideload, click OK to continue")
									$ipid = Run("adb devices", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
									ProcessWaitClose($ipid)
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									If StringInStr($soutput, "sideload") <> 0 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Traspasando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $wtf = Met2()
										If $wtf == 1 Then
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										Else
											DeleteRecurrencia($imei & "99")
											refund(GUICtrlRead($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										EndIf
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo no detectado en modo SideLoad" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										DeleteRecurrencia($imei & "99")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($Radio2) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("ScreenLock", "99")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Screen Lock Reset via TWRP" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									Global $star = TimerInit()
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando dispositivo en TWRP..." )
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Do
										$ipid = Run("adb devices", "", @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										Sleep(100)
										If StringInStr($soutput, "recovery") <> 0 Then
											Global $Connect = 1
											ExitLoop
										Else
											$Connect = 0
										EndIf
										Sleep(100)
									Until TimerDiff($star) > 5000
									If $Connect == 1 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando ADB como root...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = command("adb root")
										ProcessWaitClose($ipid)
										Sleep(5000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Montando sistema...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = command("adb shell mount -o rm,remount /system")
										ProcessWaitClose($ipid)
										Sleep(1000)
										$ipid = command("adb shell mount -o rm,remount /data")
										ProcessWaitClose($ipid)
										Sleep(1000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo Bloqueo del dispositivo... "  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = command("adb shell rm /data/system/gatekeeper.password.key")
										ProcessWaitClose($ipid)
										$ipid = command("adb shell rm /data/system/gatekeeper.pattern.key")
										ProcessWaitClose($ipid)
										$ipid = command("adb shell rm /data/system/locksettings.db")
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = command("adb shell rm /data/system/locksettings.db-shm")
										ProcessWaitClose($ipid)
										$ipid = command("adb shell rm /data/system/locksettings.db-wal")
										ProcessWaitClose($ipid)
										$ipid = command("adb shell rm /data/system/gesture.key")
										ProcessWaitClose($ipid)
										Sleep(1000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = command("adb reboot")
										ProcessWaitClose($ipid)
										Sleep(1000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										DeleteRecurrencia($imei & "99")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							Else
								GUIDelete($SPRCERT)
								MsgBox(64, "Error", "Must Select a valid Method")
								EnableButtons()
								ExitLoop
							EndIf
					EndSwitch
				WEnd
			EndIf
		Case $ButtonStartLG
			Global $ComboRead = GUICtrlRead($ComboLGTools)
			DisableButtons()
			If $ComboRead ==  $iArray[120] Then
				Global $spclgfinal = ""
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG SPR SPC Finder" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					If $key == False Then
						WrongKeyNoCred()
					ElseIf $key == 0 Then
						Error0002NoCred()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recuperando comandos..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Global $spclgshow = SPCLGADB()
						If $spclgshow == 0 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error de Conexion" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							logs()
							EnableButtons()
						ElseIf $spclgshow == 2 Or $spclgshow == 1 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Secuencia no encontrada!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por favor intente nuevamente" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						ElseIf $spclgshow == 3 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por favor intente nuevamente" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " SPC: " & $spclgshow & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					EndIf
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[121] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG Reboot download" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				If Not FileExists(@ScriptDir & "\enter.zip") Then
					 FileInstall("enter.zip", @ScriptDir & "\enter.zip", 1)
				EndIf
				$ipid = _Zip_UnzipAll(@ScriptDir & "\enter.zip", @ScriptDir, 1)
				ProcessWaitClose($ipid)
				FileDelete(@ScriptDir & "\enter.zip")
				$CHECKIN = checklg()
				if $CHECKIN == '' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo no detectado, proceso fallido..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
					FileDelete(@ScriptDir & "\Send_Command.exe")
					FileDelete(@ScriptDir & "\enterDownload")
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo detectado en el puerto: " & $CHECKIN & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo Download..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = command("Send_Command.exe \\.\" & $CHECKIN & " < enterDownload")
					ProcessWaitClose($ipid)
					Sleep(3000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
					FileDelete(@ScriptDir & "\Send_Command.exe")
					FileDelete(@ScriptDir & "\enterDownload")
				EndIf
			ElseIf $ComboRead == $iArray[123] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reboot System" & @CRLF)
				 $pro = GUICtrlRead($Edit1)
				 $dejaver = ReadInfoprocess()
				 If $dejaver == 1 then
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					 $ipid = Run("adb reboot", "", @SW_HIDE)
					 ProcessWaitClose($ipid)
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					 firma()
					 AddLog()
					 logs()
					 EnableButtons()
				 Else
					EnableButtons()
				 EndIf
			ElseIf $ComboRead == $iArray[124] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reboot Fastboot" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				 If $dejaver == 1 then
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					 $ipid = Run("adb reboot fastboot", "", @SW_HIDE)
					 ProcessWaitClose($ipid)
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					 firma()
					 AddLog()
					 logs()
					 EnableButtons()
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[125] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reboot Fastboot" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					$ipid = Run("adb reboot bootloader", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[126] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Bootloader Unlock " & @CRLF)
				$pro = GUICtrlRead($Edit1)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
				$soutput = FastbootDetect()
				If $soutput == 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO detectado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
					Sleep(1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desboqueando bootloader..." & @CRLF)
					 $ipid = Run("fastboot oem unlock", "", @SW_HIDE)
					 ProcessWaitClose($ipid)
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					 $ipid = Run("fastboot reboot", "", @SW_HIDE)
					 ProcessWaitClose($ipid)
					 Sleep (1000)
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Listo!" & @CRLF)
					 firma()
					 AddLog()
					 logs()
					 EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[127] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG Hands Free disabler" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando Proceso..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					commandwait('adb shell pm uninstall -k --user 0 com.handmark.metro.launcher')
					commandwait('adb shell pm uninstall -k --user 0 com.metro.simlock')
					commandwait('adb shell pm uninstall -k --user 0 com.metropcs.service.vvm')
					commandwait('adb shell pm uninstall -k --user 0 com.mobileposse.client')
					commandwait('adb shell pm uninstall -k --user 0 com.nuance.nmc.sihome.metropcs')
					commandwait('adb shell pm uninstall -k --user 0 com.privacystar.android.metro')
					commandwait('adb shell pm uninstall -k com.lge.HiddenMenuCall')
					commandwait('adb shell pm uninstall -k --user 0 com.ampsvc.android')
					commandwait('adb shell pm uninstall -k --user 0 com.itsoninc.android.itsonservice')
					commandwait('adb shell pm uninstall -k --user 0 com.itsoninc.android.uid')
					commandwait('adb shell pm uninstall -k --user 0 com.lge.activation')
					commandwait('adb shell pm uninstall -k --user 0 com.lge.provider.chameleon')
					commandwait('adb shell pm uninstall -k --user 0 com.sprint.dsa')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando, por favor espere..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					commandwait('adb shell pm uninstall -k --user 0 com.sprint.psdg.sw')
					commandwait('adb shell pm uninstall -k --user 0 com.coremobility.app.vnotes')
					commandwait('adb shell pm uninstall -k --user 0 com.sprint.zone')
					commandwait('adb shell pm uninstall -k --user 0 com.android.LGSetupWizard')
					commandwait('adb shell pm uninstall -k --user 0 com.google.android.setupwizard')
					commandwait('adb shell pm uninstall -k --user 0 com.lge.lgdmsclient')
					commandwait('adb shell pm uninstall -k --user 0 com.lge.lgfota.permission')
					commandwait('adb shell pm uninstall -k --user 0 com.LogiaGroup.LogiaDeck')
					commandwait('adb shell pm uninstall -k --user 0 com.sprint.ce.updater')
					commandwait('adb shell pm uninstall -k --user 0 com.sprint.w.installer')
					commandwait('adb shell pm uninstall -k --user 0 com.sprint.w.prefact')
					commandwait('adb shell pm uninstall -k --user 0 com.tmobile.pr.adapt')
					commandwait('adb shell pm uninstall -k --user 0 com.wildtangent.android')
					commandwait('adb shell pm uninstall -k --user 0 com.birdstep.android.cm')
					commandwait('adb shell pm uninstall -k --user 0 com.itsoninc.android.itsonservice')
					commandwait('adb shell pm uninstall -k --user 0 com.itsoninc.android.uid')
					commandwait('adb shell pm uninstall -k --user 0 com.lge.activation')
					commandwait('adb shell pm uninstall -k --user 0 com.lge.provider.chameleon')
					commandwait('adb shell pm uninstall -k --user 0 com.sprint.dsa')
					commandwait('adb shell pm uninstall -k --user 0 com.sprint.psdg.sw')
					commandwait('adb shell pm uninstall -k --user 0 com.coremobility.app.vnotes')
					commandwait('adb shell pm uninstall -k --user 0 com.sprint.zone')
					commandwait('adb shell pm uninstall -k --user 0 com.lge.concierge')
					commandwait('adb shell pm uninstall -k --user 0 com.lge.killswitchagent')
					commandwait('adb shell pm uninstall -k --user 0 com.lge.sprintlocationservice')
					commandwait('adb shell pm uninstall -k --user 0 com.lge.updatecenter')
					commandwait('adb shell pm uninstall -k --user 0 com.mobolize.cachefront.preload')
					commandwait('adb shell pm uninstall -k --user 0 com.sprint.voicemail')
					commandwait('adb shell pm uninstall -k --user 0 com.wsandroid.suite.lge')
					commandwait('adb shell pm uninstall -k --user 0 com.handmark.metro.launcher')
					commandwait('adb shell pm uninstall -k --user 0 com.metro.simlock')
					commandwait('adb shell pm uninstall -k --user 0 com.metropcs.service.vvm')
					commandwait('adb shell pm uninstall -k --user 0 com.mobileposse.client')
					commandwait('adb shell pm uninstall -k --user 0 com.nuance.nmc.sihome.metropcs')
					commandwait('adb shell pm uninstall -k --user 0 com.privacystar.android.metro')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					commandwait('adb reboot')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[128] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Start LG Network Menu" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Abriendo..." & @CRLF)
					 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 $ipid = Run('adb shell am start -n com.lge.networksettings/com.lge.networksettings.MobileNetworkSettingsForSPCS', "", @SW_HIDE)
					 ProcessWaitClose($ipid)
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 firma()
					 AddLog()
					 logs()
					 EnableButtons()
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[119] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG Read Info via Download Mode" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				Global $answ = ReadInfoLG()
				If $answ == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[122] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Rebot2normaLG()
				firma()
				AddLog()
				logs()
				EnableButtons()
			EndIf
		Case $ButtonXiaomi
			Global $ComboRead = GUICtrlRead($ComboXiaomi)
			If $ComboRead == $iArray[196] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("XQCNRead", "118")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					SetProcLanDefinitive("qcnxiaomimain" & $indicator)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						Global $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.qcn")
						For $i = 0 To 1000
							Global $sFileName = FileFindNextFile($hSearch)
							If @error Then ExitLoop
							FileDelete(@ScriptDir & "\Backup\" & $sFileName)
						Next
						Global $modelxi = SamModCheck()
						Global $imeixi =IxxxProcess(GUICtrlRead($Edit1))
						Global $xiaomiflag = ReadQCNXiaomi($modelxi, $imeixi)
						If $xiaomiflag == 0 Then
							Local $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.qcn")
							Global $sFileName = FileFindNextFile($hSearch)
							FileMove(@ScriptDir & "\Backup\" & $sFileName, @MyDocumentsDir & "\Backup_MCU\QCN\" & $sFileName, $FC_OVERWRITE + $FC_CREATEPATH)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @MyDocumentsDir & "\Backup_MCU\QCN\" & $sFileName & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "118")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "118")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[199] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("XQCNWrite", "119")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					SetProcLanDefinitive("xiaomiqcnwritemain" & $indicator)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						Global $filedialog = FileOpenDialog("Select QCN", @MyDocumentsDir, " qcn (*.qcn)", $FD_FILEMUSTEXIST)
						If @error Then
							MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "119")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
						Else
							FileChangeDir(@ScriptDir)
							Global $xiaomiflagrestore = WriteQCNXiaomi($filedialog)
							If $xiaomiflagrestore == 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[5] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "119")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					Else
						DeleteRecurrencia($imei & "119")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[195] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("Xdiag", "120")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					SetProcLanDefinitive("diagnoroot" & $indicator)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("adb shell", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
						Sleep(1000)
						StdinWrite($ipid, "setprop sys.usb.config diag,adb" & @LF )
						Sleep(1000)
						ProcessClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						DeleteRecurrencia($imei & "120")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[89] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("Xefs", "121")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					SetProcLanDefinitive("resetefsxiaomi" & $indicator)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						$ipid = _Android_HasRootAccess()
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2])
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If $ipid == "False" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "121")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						ElseIf $ipid == "True" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[5] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[6] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb shell su -c dd if=/dev/zero of=/dev/block/bootdevice/by-name/modemst1", "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run("adb shell su -c dd if=/dev/zero of=/dev/block/bootdevice/by-name/modemst2", "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run("adb shell su -c dd if=/dev/zero of=/dev/block/bootdevice/by-name/fsg", "", @SW_HIDE)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[7] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "121")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			Else
				EnableButtons()
			EndIf
		Case $ButtonReadQCNZTe
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("ZTEreadQcn", "116")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				SetProcLanDefinitive("readzteqcnmain" & $indicator)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				MsgBox(64, "MC-U Tool", " Debe colocar su dispositivo en modo FTM" & @CRLF & @CRLF & " Must put your device in FTM mode")
				Global $modelz = SamModCheck()
				Global $imeiz = Description()
				Global $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.qcn")
				For $i = 0 To 1000
					Global $sFileName = FileFindNextFile($hSearch)
					If @error Then ExitLoop
					FileDelete(@ScriptDir & "\Backup\" & $sFileName)
				Next
				Global $zteflag = ReadQCNZTE($modelz, $imeiz)
				If $zteflag == 0 Then
					Local $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.qcn")
					Global $sFileName = FileFindNextFile($hSearch)
					FileMove(@ScriptDir & "\Backup\" & $sFileName, @MyDocumentsDir & "\Backup_MCU\QCN\" & $sFileName, $FC_OVERWRITE + $FC_CREATEPATH)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @MyDocumentsDir & "\Backup_MCU\QCN\" & $sFileName & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					DeleteRecurrencia($imei & "116")
					refund(GUICtrlRead($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $ButtoneadQCNQc
			SetProcLanDefinitive("readqcnqcmain" & $indicator)
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("ButtoneadQCNQc", "90")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					Global $modelqc = SamModCheck()
					Global $imeiqc = IxxxProcess(GUICtrlRead($Edit1))
					Global $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.qcn")
					For $i = 0 To 1000
						Global $sFileName = FileFindNextFile($hSearch)
						If @error Then ExitLoop
						FileDelete(@ScriptDir & "\Backup\" & $sFileName)
					Next
					Global $qcflag = ReadQCNQCOMM($modelqc, $imeiqc)
					If $qcflag == 0 Then
						Local $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.qcn")
						Global $sFileName = FileFindNextFile($hSearch)
						FileMove(@ScriptDir & "\Backup\" & $sFileName, @MyDocumentsDir & "\Backup_MCU\QCN\" & $sFileName, $FC_OVERWRITE + $FC_CREATEPATH)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @MyDocumentsDir & "\Backup_MCU\QCN\" & $sFileName & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "90")
						refund(GUICtrlRead($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					DeleteRecurrencia($imei & "90")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $ButtonriteQCNQC
			SetProcLanDefinitive("writeqcnqcmain" & $indicator)
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("ButtonriteQCNQC", "91")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					Global $filedialog = FileOpenDialog("Select QCN", @MyDocumentsDir, " qcn (*.qcn)", $FD_FILEMUSTEXIST)
					If @error Then
						MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "91")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					Else
						FileChangeDir(@ScriptDir)
						Global $qcflagrestore = WriteQCNQC($filedialog)
						If $qcflagrestore == 0 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[5] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "91")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					EndIf
				Else
					DeleteRecurrencia($imei & "91")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $ButtonQriteqcnzte
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("ZTEwriteQcn", "117")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				SetProcLanDefinitive("writeqcnztemain" & $indicator)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				MsgBox(64, "MC-U Tool", " Debe colocar su dispositivo en modo FTM" & @CRLF & @CRLF & " Must put your device in FTM mode")
				Global $filedialog = FileOpenDialog("Select QCN", @MyDocumentsDir, " qcn (*.qcn)", $FD_FILEMUSTEXIST)
				If @error Then
					MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					DeleteRecurrencia($imei & "117")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				Else
					FileChangeDir(@ScriptDir)
					Global $qcflagrestore = WriteQCNZTE($filedialog)
					If $qcflagrestore == 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[5] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "117")
						refund(GUICtrlRead($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $ButtonStartLGspecial
			Global $ComboRead = GUICtrlRead($ComboLGSpecial)
			DisableButtons()
			If $ComboRead == $iArray[130] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				If FileExists(@ScriptDir & "\Backup\LG.sec") Then
					FileDelete(@ScriptDir & "\Backup\LG.sec")
				EndIf
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG Read Security" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				MsgBox(64, "MC-U Tool", "Por Favor coloque su dispositivo en modo DOWNLOAD" & @CRLF & @CRLF & "Please reboot your device into DOWNLOAD Mode")
				Global $checkport = ReadInfoLG()
				If $checkport == 1 Then
					Global $checkreadsec = ReadSecLG()
					if $checkreadsec == 1 Then
						If FileExists(@ScriptDir & "\Backup\LG.sec") Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Guardando Sec..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							FileMove(@ScriptDir & "\Backup\LG.sec", @MyDocumentsDir & "\Backup_MCU\LGSECURITY\LG_" & @HOUR & @MIN & @MDAY & @MON & @YEAR & "_SEC_by_MCU.sec", $FC_OVERWRITE + $FC_CREATEPATH)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Archivo guardado en: " & @MyDocumentsDir & "\Backup_MCU\LGSECURITY\LG_" & @HOUR & @MIN & @MDAY & @MON & @YEAR & "_SEC_by_MCU.sec" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							FileDelete(@ScriptDir & "\t39.exe")
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Archivo no encontrado, proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							FileDelete(@ScriptDir & "\t39.exe")
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[134] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG Read Security ADB Root" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					Global $rootcheck = _Android_HasRootAccess()
					If $rootcheck == True Then
						Global $imeilg = ""
						$ipid = Run("adb shell getprop gsm.baseband.imei", "", @SW_HIDE, $stderr_child + $stdout_child)
						ProcessWaitClose($ipid)
						$imeilg = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						BackupSecLG($imeilg)
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " El dispositivo debe estar rooteado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						EnableButtons()
					EndIf
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[132] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG Wipe Security" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				MsgBox(64, "MC-U Tool", "Por Favor coloque su dispositivo en modo DOWNLOAD" & @CRLF & @CRLF & "Please reboot your device into DOWNLOAD Mode")
				Global $checkport = ReadInfoLG()
				If $checkport == 1 Then
					Global $checkreadsec = WipeSecLG()
					If $checkreadsec == 1 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FileDelete(@ScriptDir & "\t38.exe")
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FileDelete(@ScriptDir & "\t38.exe")
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[133] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG MCU Wipe Security" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				Global $checkreadsec2 = WipeSec2()
				If $checkreadsec2 == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[135] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG Security Reset via adb" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando Procedimiento..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $ejec = IsCreditNedded2("52", $key)
					Global $var = shori($ejec[1], $key)
					Global $qcadb = StringSplit($var, "{")
					Global $ejec1 = IsCreditNedded2("53", $key)
					Global $var1 = shori($ejec1[1], $key)
					Global $qcadb2 = StringSplit($var1, "{")
					Global $rootcheck = _Android_HasRootAccess()
					If $rootcheck ==  "False" Then
						Global $adbsuono = "shell"
					Else
						Global $adbsuono = "shell su -c"
					EndIf
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Buscando MODEMST1..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[1], "", @SW_HIDE, $stderr_child + $stdout_child) ;1
					ProcessWaitClose($ipid)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If StringInStr($soutput, "No such file or directory") <> 0 Then
						$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[2], "", @SW_HIDE, $stderr_child + $stdout_child) ;2
						ProcessWaitClose($ipid)
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						If StringInStr($soutput, "No such file or directory") <> 0 Then
							$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[3], "", @SW_HIDE, $stderr_child + $stdout_child) ;3
							ProcessWaitClose($ipid)
							$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
							If StringInStr($soutput, "No such file or directory") <> 0 Then
								$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[4], "", @SW_HIDE, $stderr_child + $stdout_child) ;4
								ProcessWaitClose($ipid)
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								If StringInStr($soutput, "No such file or directory") <> 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error listando MODEMST1!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								EndIf
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							EndIf
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						EndIf
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					EndIf
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Buscando MODEMST2..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[6], "", @SW_HIDE, $stderr_child + $stdout_child) ;6
					ProcessWaitClose($ipid)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If StringInStr($soutput, "No such file or directory") <> 0 Then
						$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[7], "", @SW_HIDE, $stderr_child + $stdout_child) ;7
						ProcessWaitClose($ipid)
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						If StringInStr($soutput, "No such file or directory") <> 0 Then
							$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[8], "", @SW_HIDE, $stderr_child + $stdout_child) ;8
							ProcessWaitClose($ipid)
							$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
							If StringInStr($soutput, "No such file or directory") <> 0 Then
								$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[9], "", @SW_HIDE, $stderr_child + $stdout_child) ;9
								ProcessWaitClose($ipid)
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								If StringInStr($soutput, "No such file or directory") <> 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error listando MODEMST2!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								EndIf
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							EndIf
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						EndIf
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					EndIf
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Buscando FSG..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[10], "", @SW_HIDE, $stderr_child + $stdout_child) ;10
					ProcessWaitClose($ipid)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If StringInStr($soutput, "No such file or directory") <> 0 Then
						$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[11], "", @SW_HIDE, $stderr_child + $stdout_child) ;11
						ProcessWaitClose($ipid)
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						If StringInStr($soutput, "No such file or directory") <> 0 Then
							$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[12], "", @SW_HIDE, $stderr_child + $stdout_child) ;12
							ProcessWaitClose($ipid)
							$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
							If StringInStr($soutput, "No such file or directory") <> 0 Then
								$ipid = Run("adb " & $adbsuono & ' ' & $qcadb2[1], "", @SW_HIDE, $stderr_child + $stdout_child) ;13
								ProcessWaitClose($ipid)
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								If StringInStr($soutput, "No such file or directory") <> 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error listando FSG!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								EndIf
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							EndIf
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						EndIf
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					EndIf
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb reboot", "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					EnableButtons()
				EndIf

			ElseIf $ComboRead == $iArray[131] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG Write Security" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				Global $esult = Secguardados()
				MsgBox(64, "MC-U Tool", "Por Favor coloque su dispositivo en modo DOWNLOAD" & @CRLF & @CRLF & "Please reboot your device into DOWNLOAD Mode")
				#Region ### START Koda GUI section ### Form=
				Global $Security = GUICreate("Security Selection", 312, 164, -1, -1)
				Global $Group1 = GUICtrlCreateGroup("Sec Files Available", 16, 8, 281, 137)
				Global $Combo1 = GUICtrlCreateCombo("", 64, 48, 177, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
				GUICtrlSetData($Combo1, $esult)
				Global $Button1 = GUICtrlCreateButton("Go", 112, 96, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($Security)
							ExitLoop

						Case $Button1
							Global $lectura = GUICtrlRead($Combo1)
							GUIDelete($Security)
							If $lectura <> "" Then
								Global $FileOpenDialog = "C:\Users\YAMIL\Documents\Backup_MCU\LGSECURITY\" & $lectura
								Global $checkport = ReadInfoLG()
								If $checkport == 1 Then
									Global $checkreadsec = WriteSecLG($FileOpenDialog)
									If $checkreadsec == 1 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										FileDelete(@ScriptDir & "\t40.exe")
										firma()
										AddLog()
										logs()
										EnableButtons()
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										FileDelete(@ScriptDir & "\t40.exe")
										firma()
										AddLog()
										logs()
										EnableButtons()
									EndIf
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									FileDelete(@ScriptDir & "\t40.exe")
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
								ExitLoop
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No se selecciono ningun archivo de seguridad!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
								ExitLoop
							EndIf
					EndSwitch
				WEnd
			ElseIf $ComboRead == $iArray[129] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG Reboot Download Serial Port" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				LGREBDL()
				FileDelete(@ScriptDir & "\t36.exe")
				firma()
				AddLog()
				logs()
				EnableButtons()
			ElseIf $ComboRead == $iArray[136] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Restore Security ADB Root" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando root...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $rootcheck = _Android_HasRootAccess()
					If $rootcheck == True Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						RestoreSecADB()
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Necesita ser root para este proceso!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[198] Then ;check
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("QCNLG", "122")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					SetProcLanDefinitive("writeqcnlgmain" & $indicator)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						Global $modelg = SamModCheck()
						Global $imeilg = IxxxProcess(GUICtrlRead($Edit1))
						Global $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.qcn")
						For $i = 0 To 1000
							Global $sFileName = FileFindNextFile($hSearch)
							If @error Then ExitLoop
							FileDelete(@ScriptDir & "\Backup\" & $sFileName)
						Next
						Global $lgflag = ReadQCNLG($modelg, $imeilg)
						If $lgflag == 0 Then
							Local $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.qcn")
							Global $sFileName = FileFindNextFile($hSearch)
							FileMove(@ScriptDir & "\Backup\" & $sFileName, @MyDocumentsDir & "\Backup_MCU\QCN\" & $sFileName, $FC_OVERWRITE + $FC_CREATEPATH)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @MyDocumentsDir & "\Backup_MCU\QCN\" & $sFileName & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "122")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "122")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[199] Then ;check
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("QCNLGW", "123")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					SetProcLanDefinitive("writeqcnmain" & $indicator)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						Global $filedialog = FileOpenDialog("Select QCN", @MyDocumentsDir, " qcn (*.qcn)", $FD_FILEMUSTEXIST)
						If @error Then
							MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "123")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
						Else
							FileChangeDir(@ScriptDir)
							Global $xiaomiflagrestore = WriteQCNLG($filedialog)
							If $xiaomiflagrestore == 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[5] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "123")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					Else
						DeleteRecurrencia($imei & "123")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			EndIf

		Case $Removefrplgdl
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("Removefrplgdl", "92")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG FRP Remove via Download Mode" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				Global $answ = ReadInfoLG()
				If $answ == 1 Then
					Global $answerlg = FRPLGDL()
					If $answerlg = 1 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "92")
						refund(GUICtrlRead($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					DeleteRecurrencia($imei & "92")
					refund(GUICtrlRead($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $ButtonStartSoecialTools
			Global $ReadCombo = GUICtrlRead($ComboSpecialTools)
			DisableButtons()
			If $ReadCombo == $iArray[179] Then
				#Region ### START Koda GUI section ### Form=
				Global $SPRCERT = GUICreate("High/ Low Reboots", 354, 181, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos ", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("Reboot Debug High", 40, 40)
				Global $MEthod2 = GUICtrlCreateRadio("Reboot CP Debug High", 40, 88)
				Global $Method6_0 = GUICtrlCreateRadio("Reboot Debug Low", 208, 40)
				Global $Radio1 = GUICtrlCreateRadio("Reboot CP Debug Low", 207, 84)
				Global $ButtonStartSPRCert = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPRCERT)
							EnableButtons()
							ExitLoop
						Case $ButtonStartSPRCert
							Global $showme2 = CredNoLicense("", "")
							If StringIsDigit($showme2) == 1 Or $activo == 1 Then
								IF GUICtrlRead($Method1) = 1 Then
									GUIDelete($SPRCERT)
									_GUICtrlEdit_SetText($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reboot DEBUG HIGH" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									Global $dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If $key == False Then
											WrongKeyNoCred()
											ExitLoop
										ElseIf $key == 0 Then
											Error0002NoCred()
											ExitLoop
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Global $ejec = IsCreditNedded2("10", $key)
											Global $var = shori($ejec[1], $key)
											Global $RebootDeb = StringSplit($var, "{")
											If @error Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error recibiendo datos del servidor..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($RebootDeb[1], "", @SW_HIDE)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												RunWait("adb wait-for-device", "", @SW_HIDE)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando debug level: ")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb shell getprop ro.boot.debug_level", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												 firma()
												 AddLog()
												 logs()
												 EnableButtons()
												 ExitLoop
											EndIf
										EndIf
									Else
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf GUICtrlRead($MEthod2) = 1 Then
									GUIDelete($SPRCERT)
									_GUICtrlEdit_SetText($Edit1, "")
									 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reboot CP DEBUG HIGH" & @CRLF)
									 $pro = GUICtrlRead($Edit1)
									Global $dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If $key == False Then
											WrongKeyNoCred()
											ExitLoop
										ElseIf $key == 0 Then
											Error0002NoCred()
											ExitLoop
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Global $ejec = IsCreditNedded2("10", $key)
											Global $var = shori($ejec[1], $key)
											Global $RebootDeb = StringSplit($var, "{")
											If @error Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error recibiendo datos del servidor..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($RebootDeb[2], "", @SW_HIDE)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												RunWait("adb wait-for-device", "", @SW_HIDE)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando debug level: ")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb shell getprop ro.boot.cp_debug_level", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												 firma()
												 AddLog()
												 logs()
												 EnableButtons()
												 ExitLoop
											EndIf
										EndIf
									Else
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf GUICtrlRead($Method6_0) = 1 Then
									GUIDelete($SPRCERT)
									_GUICtrlEdit_SetText($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reboot DEBUG LOW" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									Global $dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If $key == False Then
											WrongKeyNoCred()
											ExitLoop
										ElseIf $key == 0 Then
											Error0002NoCred()
											ExitLoop
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Global $ejec = IsCreditNedded2("10", $key)
											Global $var = shori($ejec[1], $key)
											Global $RebootDeb = StringSplit($var, "{")
											If @error Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error recibiendo datos del servidor..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($RebootDeb[3], "", @SW_HIDE)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												RunWait("adb wait-for-device", "", @SW_HIDE)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando debug level: ")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb shell getprop ro.boot.debug_level", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												 firma()
												 AddLog()
												 logs()
												 EnableButtons()
												 ExitLoop
											EndIf
										EndIf
									Else
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf GUICtrlRead($Radio1) = 1 Then
									GUIDelete($SPRCERT)
									_GUICtrlEdit_SetText($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reboot CP DEBUG LOW" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									Global $dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If $key == False Then
											WrongKeyNoCred()
											ExitLoop
										ElseIf $key == 0 Then
											Error0002NoCred()
											ExitLoop
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Global $ejec = IsCreditNedded2("10", $key)
											Global $var = shori($ejec[1], $key)
											Global $RebootDeb = StringSplit($var, "{")
											If @error Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 	recibiendo datos del servidor..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($RebootDeb[4], "", @SW_HIDE)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												RunWait("adb wait-for-device", "", @SW_HIDE)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando debug level: ")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb shell getprop ro.boot.cp_debug_level", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												 firma()
												 AddLog()
												 logs()
												 EnableButtons()
												 ExitLoop
											EndIf
										EndIf
									Else
										EnableButtons()
										ExitLoop
									EndIf
								Else
									GUIDelete($SPRCERT)
									MsgBox(64, "Error", "Must Select a valid Method")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf $showme2 = True Then
								MsgBox(16, "Error", "Operacion Cencelada")
							Else
								MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
							EndIf
					EndSwitch
				WEnd
			ElseIf $ReadCombo == $iArray[182] Then
				#Region ### START Koda GUI section ### Form=
				Global $SPRCERT = GUICreate("Open Hidden Menu", 354, 181, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos ", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("Metodo ADB", 40, 40)
				Global $MEthod2 = GUICtrlCreateRadio("Metodo Serial Port", 208, 40)
				Global $ButtonStartSPRCert = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPRCERT)
							EnableButtons()
							ExitLoop
						Case $ButtonStartSPRCert
							Global $showme2 = CredNoLicense("", "")
							If StringIsDigit($showme2) == 1 Or $activo == 1 Then
								IF GUICtrlRead($Method1) = 1 Then
									GUIDelete($SPRCERT)
									_GUICtrlEdit_SetText($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Open Hidden Menu via ADB" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									Global $dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										$ipid = _Android_HasRootAccess()
										If $ipid == "False" Then
											Global $dudu = "adb shell "
										Else
											Global $dudu = "adb shell su -c "
										EndIf
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Abriendo..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run($dudu & '"am start -n com.android.hiddenmenu/.IOTHiddenMenu"', "", @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										If StringInStr($soutput, "Error") <> 0 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Fallo primer comando..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Sleep(1000)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Intentando segundo comando..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											$ipid = Run($dudu & '"am broadcast -a android.provider.Telephony.SECRET_CODE -d android_secret_code://IOTHIDDENMENU"', "", @SW_HIDE, $stderr_child + $stdout_child)
											ProcessWaitClose($ipid)
											$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											If StringInStr($soutput, "Error") <> 0 Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Soportado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Pruebe con acceso root!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												 firma()
												 AddLog()
												 logs()
												 EnableButtons()
												 ExitLoop
											EndIf
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											 firma()
											 AddLog()
											 logs()
											 EnableButtons()
											 ExitLoop
										EndIf
									Else
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf GUICtrlRead($MEthod2) = 1 Then
									GUIDelete($SPRCERT)
									_GUICtrlEdit_SetText ($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Open Hidden Menu Serial Port" & @CRLF)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										#Region ### START Koda GUI section ### Form=
										Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
										Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
										Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
										GUICtrlSetData($Combo1, _CommListPorts(1))
										GUICtrlCreateGroup("", -99, -99, 1, 1)
										Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
										Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
										Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
										Global $Label3 = GUICtrlCreateLabel("SELECT SERIAL PORT.", 312, 80)
										Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
										Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
										GUISetState(@SW_SHOW)
										#EndRegion ### END Koda GUI section ###

										While 1
											$nMsg = GUIGetMsg()
											Switch $nMsg
												Case $GUI_EVENT_CLOSE
													GUIDelete($FormCOM)
													EnableButtons()
													ExitLoop

												Case $OpenDeviceMGM
													OpenDevMenu()

												Case $ButtonrefreshComm
													GUICtrlSetData($Combo1,"")
													GUICtrlSetData($Combo1, _CommListPorts(1))

												Case $ButtonSelectCom
													Global $commselected = GUICtrlRead($Combo1)
													Global $finalcom = StringTrimLeft($commselected, 3)
													If $commselected == "" Then
														MsgBox(16, "Error", "No CommPort Selected!")
													Else
														GUIDelete($FormCOM)
														Global $checkun = HiddenM($commselected)
														If $checkun == 1 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														EndIf
													EndIf
											EndSwitch
										WEnd
										ExitLoop
									Else
										EnableButtons()
										ExitLoop
									EndIf
								Else
									GUIDelete($SPRCERT)
									MsgBox(64, "Error", "Must Select a valid Method")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf $showme2 = True Then
								MsgBox(16, "Error", "Operacion Cencelada")
							Else
								MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
							EndIf
					EndSwitch
				WEnd
			ElseIf $ReadCombo == $iArray[202] Then
				SetProcLanDefinitive("qcomcertmain" & $indicator)
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("ReadCertQC", "93")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
					$pro = GUICtrlRead($Edit1)
					Global $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.bin")
					For $i = 0 To 1000
						Global $sFileName = FileFindNextFile($hSearch)
						If @error Then ExitLoop
						FileDelete(@ScriptDir & "\Backup\" & $sFileName)
					Next
					$dejaver = ReadInfoSamsung()
					If $dejaver == 1 then
						Global $imei = ImeiSamsungAt()
						If $imei == False or $imei = 0 Then
							Global $imei = IxxxProcess(GUICtrlRead($Edit1))
						EndIf
						$ipid = Run("adb shell getprop ril.serialnumber", "", @SW_HIDE, $stderr_child + $stdout_child)
						ProcessWaitClose($ipid)
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						Global $Serial = $soutput
						Global $modelsam = SamModCheck()
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2])
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If ModelCompat($modelsam) = True Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb shell getprop ro.boot.debug_level", "", @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
							if StringInStr($soutput, "0x4948") == 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Global $ejec = IsCreditNedded2("10", $key)
								Global $var = shori($ejec[1], $key)
								Global $RebootDeb = StringSplit($var, "{")
								$ipid = Run($RebootDeb[1], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[5])
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								RunWait("adb wait-for-device", "", @SW_HIDE)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[6] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								BootComplete()
							EndIf
							$ipid = Run("adb shell getprop ro.boot.cp_debug_level", "", @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
							if StringInStr($soutput, "0x5500") == 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[7] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Global $ejec = IsCreditNedded2("10", $key)
								Global $var = shori($ejec[1], $key)
								Global $RebootDeb = StringSplit($var, "{")
								$ipid = Run($RebootDeb[2], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[8])
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								RunWait("adb wait-for-device", "", @SW_HIDE)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[9] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								BootComplete()
							EndIf
							Sleep(3000)
							Global $uploadok = FailDump()
							Global $uploadok1 = ""
							If $uploadok <> 0 Then
								Global $uploadok1 = FailDump2()
							EndIf
							If $uploadok1 <> 0 and $uploadok <> 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[10] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "93")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[11])
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								For $i = 1 to 60
									Global $number = 60 - $i
									Sleep(1000)
									If $number >= 9 Then
										Global $churre = StringTrimRight(GUICtrlRead($Edit1), 2)
									Else
										Global $churre = StringTrimRight(GUICtrlRead($Edit1), 1)
									EndIf
									_GUICtrlEdit_SetText($Edit1, $churre & $number)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Next
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Global $ramdumpcheck = ReadRamDump($modelsam)
								If $ramdumpcheck <> 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[12] & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DeleteRecurrencia($imei & "93")
									refund(GUICtrlRead($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									Global $ojito = AnalyzeSec()
									If $ojito == 1 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[13] & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										DeleteRecurrencia($imei & "93")
										refund(GUICtrlRead($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
									Else
										Global $imeisign = ImSn($modelsam, $ojito)
										If $imeisign = False Then
											Global $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.bin")
											For $i = 0 To 1000
												Global $sFileName = FileFindNextFile($hSearch)
												If @error Then ExitLoop
												FileDelete(@ScriptDir & "\Backup\" & $sFileName)
											Next
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[14] & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[10] & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "93")
											refund(GUICtrlRead($Edit1))
											firma()
											logs()
											EnableButtons()
										Else
											Global $arraydepub = Compatibility($modelsam)
											Global $PUBKEYOR = $arraydepub[2]
											Global $PUBKEYSIGNOR = $arraydepub[1]
											Global $falsecheck = GenerateQcomCert($modelsam, $imei, $Serial, $imeisign, $PUBKEYOR, $PUBKEYSIGNOR)
											If $falsecheck == True Then
												_Crypt_EncryptFile(@MyDocumentsDir & "\Backup_MCU\CERT\" & $modelsam & "_" & $Serial & "_" & $imei & ".cert", @MyDocumentsDir & "\Backup_MCU\CERT\" & $modelsam & "_" & $Serial & "_" & $imei & ".cert.mcu", $decrypt, $iAlgorithm)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[15] & @MyDocumentsDir & "\Backup_MCU\CERT\" & $modelsam & "_" & $Serial & "_" & $imei & ".cert.mcu" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												FileDelete(@MyDocumentsDir & "\Backup_MCU\CERT\" & $modelsam & "_" & $Serial & "_" & $imei & ".cert")
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[16] & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Local $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.bin")
												Global $sFileName = FileFindNextFile($hSearch)
												_Crypt_EncryptFile(@ScriptDir & "\Backup\" & $sFileName, @MyDocumentsDir & "\Backup_MCU\CERT\" & $sFileName & ".mcu", $decrypt, $iAlgorithm)
												Sleep(500)
												FileDelete(@ScriptDir & "\Backup\" & $sFileName)
												firma()
												AddLog()
												logs()
												EnableButtons()
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[14] & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[10] & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "93")
												refund(GUICtrlRead($Edit1))
												firma()
												logs()
												EnableButtons()
											EndIf
										EndIf
									EndIf
								EndIf
							EndIf
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[17] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[18] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "93")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "93")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			ElseIf $ReadCombo == $iArray[184] Then
				_GUICtrlEdit_SetText($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reboot Download COM Port" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				#Region ### START Koda GUI section ### Form=
				Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
				Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
				Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
				GUICtrlSetData($Combo1, _CommListPorts(1))
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
				Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
				Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
				Global $Label3 = GUICtrlCreateLabel("SELECT MODEM PORT.", 312, 80, 126, 17)
				Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
				Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###

				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($FormCOM)
							EnableButtons()
							ExitLoop

						Case $OpenDeviceMGM
							OpenDevMenu()

						Case $ButtonrefreshComm
							GUICtrlSetData($Combo1,"")
							GUICtrlSetData($Combo1, _CommListPorts(1))

						Case $ButtonSelectCom
							Global $showme2 = CredNoLicense("", "")
							If StringIsDigit($showme2) == 1 Or $activo == 1 Then
								Global $commselected = GUICtrlRead($Combo1)
								Global $finalcom = StringTrimLeft($commselected, 3)
								If $commselected == "" Then
									MsgBox(16, "Error", "No CommPort Selected!")
								Else
									GUIDelete($FormCOM)
									Global $err = ""
									_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
									If $err == "" Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Conexion..." )
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $star = TimerInit()
										Do
											_CommSendString("AT" & @CR, 1)
											$instrcheck = _commGetLine(@CR, 20, 200)
											Sleep(20)
											 If $instrcheck == "" Then
												Global $Com = 1
											 Else
												$Com = 0
												ExitLoop
											 EndIf
											 Sleep(100)
										Until TimerDiff($star) > 3000
										If $Com == 1 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Puerto COM seleccionado incorrecto!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										Else
											While 1
												$instr = _commGetLine(@CR, 20, 200)
												If StringInStr($instr, "OK") <> 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+SUDDLMOD=0,0" & @CR, 1)
													Sleep(2000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Sleep(20)
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												ElseIf StringInStr($instr, "ERROR") <> 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ERROR" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequea la conexion e intenta nuevamente!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Sleep(20)
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											WEnd
											ExitLoop
										EndIf
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error abriendo puerto..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
								EndIf
							ElseIf $showme2 = True Then
								MsgBox(16, "Error", "Operacion Cencelada")
							Else
								MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
							EndIf
					EndSwitch
				WEnd
			ElseIf $ReadCombo == $iArray[185] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Read Info Com Port" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadINfoAT()
					If $dejaver == 1 then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ReadCombo == $iArray[186] Then
				_GUICtrlEdit_SetText($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Factory Reset via COM Port" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				#Region ### START Koda GUI section ### Form=
				Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
				Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
				Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
				GUICtrlSetData($Combo1, _CommListPorts(1))
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
				Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
				Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
				Global $Label3 = GUICtrlCreateLabel("SELECT MODEM PORT.", 312, 80, 126, 17)
				Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
				Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###

				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($FormCOM)
							EnableButtons()
							ExitLoop

						Case $OpenDeviceMGM
							OpenDevMenu()

						Case $ButtonrefreshComm
							GUICtrlSetData($Combo1,"")
							GUICtrlSetData($Combo1, _CommListPorts(1))

						Case $ButtonSelectCom
							Global $showme2 = CredNoLicense("ResetComPort", "96")
							If StringIsDigit($showme2) == 1 Or $activo == 1 Then
								Global $commselected = GUICtrlRead($Combo1)
								Global $finalcom = StringTrimLeft($commselected, 3)
								If $commselected == "" Then
									MsgBox(16, "Error", "No CommPort Selected!")
									DeleteRecurrencia($imei & "96")
									refund(GUICtrlRead($Edit1))
								Else
									GUIDelete($FormCOM)
									Global $err = ""
									_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
									If $err == "" Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Conexion... " )
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $star = TimerInit()
										Do
											_CommSendString("AT" & @CR, 1)
											$instrcheck = _commGetLine(@CR, 20, 200)
											Sleep(20)
											 If $instrcheck == "" Then
												Global $Com = 1
											 Else
												$Com = 0
												ExitLoop
											 EndIf
											 Sleep(100)
										Until TimerDiff($star) > 3000
										If $Com == 1 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Puerto COM seleccionado incorrecto!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "96")
											refund(GUICtrlRead($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										Else
											While 1
												$instr = _commGetLine(@CR, 20, 200)
												If StringInStr($instr, "OK") <> 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando Comandos..." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$instr = ""
													_CommSendString("AT+FACTORST=0,0" & @CR, 1)
													Global $star = TimerInit()
													Do
														$instr = _commGetLine(@CR, 20, 400)
														If StringInStr($instr, "ERROR") <> 0  Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ERROR" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EnableButtons()
															DeleteRecurrencia($imei & "96")
															refund(GUICtrlRead($Edit1))
															firma()
															ExitLoop
														ElseIf StringInStr($instr, "OK") <> 0  Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ExitLoop
														EndIf
													Until TimerDiff($star) > 15000
													If StringInStr($instr, "ERROR") == 0 and StringInStr($instr, "OK") == 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "96")
														refund(GUICtrlRead($Edit1))
													EndIf
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												ElseIf StringInStr($instr, "ERROR") <> 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ERROR" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequea la conexion e intenta nuevamente!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "96")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											WEnd
											ExitLoop
										EndIf
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error abriendo puerto..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										DeleteRecurrencia($imei & "96")
										refund(GUICtrlRead($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
								EndIf
							ElseIf $showme2 = True Then
								MsgBox(16, "Error", "Operacion Cencelada")
							Else
								MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
							EndIf
					EndSwitch
				WEnd
			ElseIf $ReadCombo == $iArray[183] Then
				_GUICtrlEdit_SetText($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung Repair DRK via COM Port" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				#Region ### START Koda GUI section ### Form=
				Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
				Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
				Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
				GUICtrlSetData($Combo1, _CommListPorts(1))
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
				Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
				Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
				Global $Label3 = GUICtrlCreateLabel("SELECT MODEM/UART PORT.", 312, 80)
				Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
				Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###

				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($FormCOM)
							EnableButtons()
							ExitLoop

						Case $OpenDeviceMGM
							OpenDevMenu()

						Case $ButtonrefreshComm
							GUICtrlSetData($Combo1,"")
							GUICtrlSetData($Combo1, _CommListPorts(1))

						Case $ButtonSelectCom
							Global $showme2 = CredNoLicense("", "")
							If StringIsDigit($showme2) == 1 Or $activo == 1 Then
								Global $commselected = GUICtrlRead($Combo1)
								Global $finalcom = StringTrimLeft($commselected, 3)
								If $commselected == "" Then
									MsgBox(16, "Error", "No CommPort Selected!")
								Else
									GUIDelete($FormCOM)
									Global $err = ""
									_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
									If $err == "" Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Conexion... " )
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $star = TimerInit()
										Do
											_CommSendString("AT" & @CR, 1)
											$instrcheck = _commGetLine(@CR, 20, 200)
											Sleep(20)
											 If $instrcheck == "" Then
												Global $Com = 1
											 Else
												$Com = 0
												ExitLoop
											 EndIf
											 Sleep(100)
										Until TimerDiff($star) > 10000
										If $Com == 1 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Puerto COM seleccionado incorrecto!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										Else
											While 1
												$instr = _commGetLine(@CR, 20, 400)
												If StringInStr($instr, "OK") <> 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando DRK." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,02_67204D6F62696C6531323030060A0992268993F22C6401010C2250484E2D503A32303133303931313A30313A32303A30303034343937303A524F4F5430820122300D06092A864886F70D01010105000382010F003082010A0282010100D8016113FCFB2FC4E3DE83EDD4F913A73F17B517A26C80C03596C04238BCC65E3706922F2892E0F84F863CE62DBE3218E4EDB62CA181AFCBB7F499485814CE2717299ED6FFB6503337C5889ACD790A8211C466F6AE78F840F281F282A68EB9C0F4B899A7587D83C0B74F241ABABC3D14A4CAE3CABEEE7527F3BA52784DAAA0B109088B0DCC73108B9E1E071E570470DC70AD0D1526EB0BC063357A5421" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,03_5CC0B10E3C328AD4DC610B947AF8A9D91CB0276D21CB0949921780435BCCD8627612C2502BCEE5A817206F85F04ED347876452F34CABB39083C6801006E24F47E0A55A602610EAC37A3D6EEE4A0FB502351820E12274D17941D467178359F8A4567A1D0203010001A381DC3081D9301D0603551D0E041604149901C576C75656EA9E7E48BAF3E6BBB329AA9065301F0603551D230418301680141A3849592E3221820C77260DCA11ADDD9CCA437D300C0603551D13040530030101FF300B0603551D0F040403020106303D06082B060105050701010431302F302D06082B060105050730018621687474703A2F2F6F6373702E73616D73756E67" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,04_2E636F6D2F73656375726974792F303D0603551D1F043630343032A030A02E862C687474703A2F2F63726C2E73616D73756E672E636F6D2F73656375726974792F72646576696365732E63726C300D06092A864886F70D01010B05000382010100C7090421A9097B7E95E023A6B3346F1BD5A2F64559D87AF25B5EF707B08419C9D41D211BD164434187E502F1B57B7E90AD378A7E54F32C24261D11A7443BDAE065698BBBF5C597247755CF4B5E5CD8278A23FCDCBDEE188B957CAC7ECB124E6D6BABDC70C18758BE2132CC0869D80CBE8F617F7E30E161146E19BE509237EFD27C139ACE392CC8D7327ABB514B58AAFC14BE2993D15A90BB53" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,05_E4C73AA5C1EF33045CF6A829314AAF708077B69F5A35EF8FEA483F4155FFE4A884373E5F1929A40A282DD200F67F967E878EE0CC4FDF4649B4D6D113F87FB356AB3C77EBCA786B1DC0662317EBFF90A50A9E1606A214B362133D0074B7A793CEB0BF158401D5C40210003131313131313131313131313131313103B004110CF76F47AFA77D8460ED9553BBC8A40DC538F8DB8DC9972999585600E48B37451218B27C8C1C58A9A48CE6868385D6D58F9ED3619752CA8A5F75E1C5C9FF3875DBF2FD9C2CD48763C48ACD0149E182AD19CB33B260BE616F734049D04BC12256BF0E31A3DF57DB202C4309FC23AD9DD0C6B709153B4C5BC810C732D3" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,06_6FB260C36156010A228E31E373DE10ECDE41511A715DB339A3118A2A69ED52D19927486D5E6A358A136036ED2740FCFE3F64E36F8C911B35FA669FA8ADF26ABBED0BBA7ED547B70640D95A5C819BA672736FCDB45F669DDC07ECB187DDB9A6DA7861FD6A852EEBB89556442553699BBF396BFBE16507547B182F1768322CEAACFA8D82FA6D4419AF500F50E89043520332592C0D1EFFEAB599EE12F262FC2E6A0B4C0E761767C69AD46B7A9610E12E4B1AB13A6891686F68A115F4CCC057D8E35A4633B0B1CEAE1D4460C52692CDBF82845F3D5DCB0CB06B18091B1629BB9BECA800A094C41CFF7FCD68DE9D6C9D05DAF679DD459004C232945E" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,07_6AD1B80A3E96D3840881B1E835F10CDD28E0C2094E3A214F0C743D445C6AEEF62CE1C8D911584226E9F5947BA4EB6E71A3A861114F0DDB96AD1D405A5BFC94D1795C89AFD3F6B59A16D81C64E8EBBCF12C0AA112F67176A883EA939201C70EFE00240778FA3E020BDA7B14623D65DCCE4C20B43115916F48A713371ED2533186CACF6AE2A87690A05D3F1394B773811F31B855F250A8BE8883457A04845707DC9A5F39F81EFE8B8E2888218874B7786202DA140E33AEB52297299B22F7A17A1700CCA1793D1EB98A224DD3F839AAE4A84CC3D6A68B086EF4B86885BB85B4C261A975D152AC8EC5013FE1E93DC91A28DD2DA713F18AC125A2FB3B" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,08_9E76B1BAC81E92F5AA91DB37240E7F6DD1C4CAE6FE0DC9E29DCBAC7C0EE64FBCC9E9150DA0DEA206A5A5F4A850C29ED6D217791282C6C7FE62FFD6EED03DDEFBF3AA049043BB7461B051E140C16030805C0F81C1963F455045E4C6270DCE3F64E3E0A266DE01F29C2BB70841B1D45958139319B74E0F858F6FB5665AF5FEFAAD4761234B8C75A770FDFFD1FD87859AADC53396EF2DF91224BDDBD8DFBB12DC8AB3D20832FC4A3E4D914DE172923D5C3DBA4DFDCA6A6C7122B6982CF5978CE6802191A47DF5855C5D404C1E48CCE1131C5F4556B0E706EC5D34CABF208F9C896D187BF07065813968271659ABFDB6BF397AA22ADBD8767BD7F723" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,09_ABF545021CDDC24AF9D0BA27842513F14E2AD0D35C4AA353419F419F9AC0C249C0EF4367A4B7D780B53FF138052FBB4051B0E3F5BC71B823CC1B51C51E8BB71A026950DB9EA92D66B650290C8F89B9AEDAD3E1BE77146FEEB9899FE139CFA37B4C538913B41991E28E4EFAC7E09FBF78583DD1754A59A0F032B56D087F40BA113D334FA5A3D370B085B05B1F1587CA81A42A4F6E64AF07CE91ADF7287B53FDDD3F27C0B024FBC65B52866A8547B241DB371CB681108511C8C79EC82FBA3079F188C649FC02D182805BAF4EE45241AB456D271AD8ABFBE0D315F244F215764C7808F748C6C0C9868EC18680BD604E8D471E7EF1B05FAC95E3135B" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,10_92BE8201C74BB669822BC856CD5AFE39E18F9C2CAF3B7B04A4076A0F9372966634D8508C97CAD7A6C98B720902C6F4F9926783974E4135D118BA72E780F9A651AED0308D7925A2054EEABC20590002100031313131313131313131313131313131032000F7C67279146A65FF9D70DF5CC1A88FCDBB1F85DFFD500C9E482598C2B07629F5042000E5D62ABFF47FD8C0A70950C06784FA3D2897962CCC67A6BB1BACE35D962195EDB555D6038C348576080A9D488E4A43A3E1E53872B8F29C4EEA2B4C3B1F5FF487" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando info." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,01_00F07109101209014904308204453082032DA003020102020406E198F7300D06092A864886F70D01010B05003059310B3009060355040613024B523113301106035504070C0A5375776F6E206369747931173015060355040B0C0E53616D73756E67204D6F62696C65311C301A06035504030C1353616D73756E6720636F72706F726174696F6E301E170D3134303931343133323130365A170D3334303930393133323130365A30818D310B3009060355040613024B523113301106035504070C0A5375776F6E2063697479311C301A06035504030C1353616D73756E6720636F72706F726174696F6E31173015060355040B0C0E53616D7375" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,02_6E67204D6F62696C6531323030060A0992268993F22C6401010C2250484E2D503A32303134303931343A30313A32303A30303532373830373A524F4F5430820122300D06092A864886F70D01010105000382010F003082010A0282010100CB925FD12E6F8A8B5250954D5CD5D957A6E0D6F812DA57880BD47D18F1D2781BA778BB7DE5C2826B1DEE242B6EB80FB3945F8B9FDB5C177A8C8AA2CD09A273BFF717CE10D590C5FD4310C6D779E9E59C08A03D172AC6861E1214CB16538086354E9F8670768D5ADFBAB314BFB0451AC5CF6B8B7B0E7AD5CE0FF3FB8D89D0E65F9CFE37B20C99D2B09C01B39C27CAD9204A3F192CA2B813A5192A294E" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,03_86D3D835F5CB19CDE3913265AF1CE1CE6A3D47B59962106E93EAA96C1E104BAF7638B87694772F8EB8343C0C8367C421816666C17A71151913706A520FF5617C95DD7E820AFD460B7CFB5921B92E96B4C117B1B202C915E40A68FF465C91BEB0E5C690170203010001A381DF3081DC301D0603551D0E041604146BFAEF695F0D92C7314A508049528FA6169FF064301F0603551D230418301680141A3849592E3221820C77260DCA11ADDD9CCA437D300F0603551D13040830060101FF020100300B0603551D0F040403020106303D06082B060105050701010431302F302D06082B060105050730018621687474703A2F2F6F6373702E73616D" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,04_73756E672E636F6D2F73656375726974792F303D0603551D1F043630343032A030A02E862C687474703A2F2F63726C2E73616D73756E672E636F6D2F73656375726974792F72646576696365732E63726C300D06092A864886F70D01010B050003820101000CD404120DF1E2EEFBBCD5EBB100FE3B5BBC027B037253F84B592A8C29D446F097DA9B37646ED21C5FA56031D823DC9ECFCF49E55AA63D81B0D40C3516F98A2BAB0A6B29313ACAC8AED102178077A601358D718BB9920CDDAA15E6DF38104D0423A320DA0608B7471826A7C646AF6874657BEABE1F1E29C1941DB66823533F64C66C6B6B861F7B963ACB5BCCB01E0E0E6C26B2DB98" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,05_B59239FC5924C723E15E854F0369D8AF09915295838E8367211967705E2F4008504B4EB7053E08E2EC30A7D9E54A4579031740BD3EE425C186BF57F19CE09CE15D7557E9C86664EEB2D35E6F8F0163D47E927636EB6BBC029E9181A1FBE4F9BD63C599D712E10434095DEA0210003131313131313131313131313131313103B004EE2A422F2C1157981E4E6DA6033E8FF8763FA1A6868072E8B1306515E937D4EBC07938B78C1A87851A040F47384B997EA96752862E79219CA7D344A25C79A68DD81FC3731ACF044A944E484E9559E60EC41EE50DA9BA83E6FB9734AF0E8D125511B7A32CDE06CCEF9AAE73B5FEB83B493AE2A7E0ED69738F59" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,06_077FCF23AEE2A9F38633C2900CBFE93DFEF18B272E7DF6CE036DB6531F34E8D71C1EE9E62D18E661EBF22040493954A2CEB47D6909DC7C2DAF93EAA0789D93CE20A9DE8B451B33C3E4818BCFABF2CC7FB1599881D03C778572FAD8B5231E4AC3BF14815CC04520462D2806340069E1AA3E04FDE8469251B19226C1EE69F74185C54423EF4BF2ACA711E0C3A9AD4F2C75B811AB46A74FAAD66E25010823EAD35D0E00942FCC515B4C77FFA491F8EA32F2F0370FBC7E8DA2E75262F79E0AB6F8B00697EFD0B8644C9AA212D9CAF2484BFD1BC8A8E20FFBBECA311AC674AE438FF75F956F80C0FB6D841456DE4E206D21423A0BF0FEF2851DE63BB9" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,07_93EF4AF74BC8533151D71E5021D484B32CDAC389F86CE90FD2EF6A736345883C26B04271E87B83D9127F92A86FC14E25A62300BE03245BEA9ADBAFA3ED0A9AEB85C834742DDD2D2C83E9FCFCB31FE3E4F57B4071B3281E4144AA9E84CC714B473E77DF3D15168D3F956BC59F98F684A2B161F72CAD2C10A55D27DF4ECC43E987700336D43AC53574FD7C455A78E3586F7A21A14F0B8D0859497B6EEA975D5CF30F6A9B82560595B0DACBC4939BA0EF592C9DF1A6C91A5E8C19995BF273665718609A4E79DB89B9FAEB7B1E820B61FAAF7E8CB082F33AB6AEE038011CEEF5F222D09E9F126C2FB1EE52E1B6DA38C5EB6EE3186BCC95D256353F7E" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,08_32831509306F364566D5259F251B3F3CE824FDDE47491E0DC38D8B50A15902A1429D9754D8429E72808E5EF99276969A2DFFC2207B2A1E4E13D86C177DFFEBE89C382A6F433E43E0621F7E916622134CE1AE9A58440E80FCB4A8785FF0A7DD0C3BB8F135BF401A94ABB9B71B915A54482420EB662CC8DEB060747CD52CA1F70B6A0CC82A026C63D034FDDC3C5381010F3E67EEEE7E1798A014C5BD6CDD14E29E03EEB2ECD09EB24A1293331A06CED236382058CC92C0D8B6C81EE8B803C88D382B334B7762201676AC1ABDD104C1106F362BA85A0CE55E6D9C5FAE19FDAC53DFD0DCF9A972A547AA084970811F108C52327BF474B0AA0C654AB5" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,09_A6547D1C83062AAC1F1C7CA17F628E4D0BFBD60BB096C3E2D35B650BA110A5346EAD0386BB737E488B6E02E7C9EA58DA98DE31D94379A61D3BACA7F545F35271C4F0EA5FD4D59E9F7E92FD4BE377D64938D6D4D20FA1E3E39403EF3A9068F9F84E53071324208F247E23DB40D7A45ADEFAB2FE546B43AC530F0924D689AA88EB6C5A2B079027E9116015ED79A1DD9E0B8E79E4B796ABF4DB1229F3334091A8EC8B8A87249BDB0C5BB40254BCB4B0899D6E70856BF70DF09B4F543FFD91909577C7243EC60CA35E774BB49CE2C31F1AE4204242EC34D3995F68C642C2CE9B21327B0B6E1B5130A5CDC3CE8EC756AD4836671B1E5A493706EFC4D0" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "." & @CRLF )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,10_6A093B4A833E5C00E487128BADF8981E01E13D801B31C8502DD3F2191944E6AB99548B290BD97E509F59CF914F0B42C93EFE106F18630E83F6C491A500D3090DF7676E0A661B063EBE632EA188D4AB205900021000313131313131313131313131313131310320006074A9EBF048AF0E0893A6CA39FD54729B75BF0FD8CED5F90CCDF92E9AD76BD1042000C4B3CC5BE5322DBED7A1DA4DF9A0E6386250995677108FF58E648A3BB6B8674F87BA48C0EF5EA48190A4F57E48F98D97C9858657E330D76E283AD92B263244CA" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_CommSendString("AT+DEVROOTK=2,0,FF" & @CR, 1)
													Sleep(1000)
													_CommSendString("AT+DEVROOTK=0,0" & @CR, 1)
													Sleep(1000)
													_CommSendString("AT+IMEICERT=1,0" & @CR, 1)
													Sleep(1000)
													_CommSendString("AT+IMEISIGN=0,1,0" & @CR, 1)
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												ElseIf StringInStr($instr, "ERROR") <> 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ERROR!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequea la conexion e intenta nuevamente!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Sleep(20)
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											WEnd
											ExitLoop
										EndIf
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error abriendo puerto..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
								EndIf
							ElseIf $showme2 = True Then
								MsgBox(16, "Error", "Operacion Cencelada")
							Else
								MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
							EndIf
					EndSwitch
				WEnd
			ElseIf $ReadCombo == $iArray[180] Then
				#Region ### START Koda GUI section ### Form=
				Global $SPRCERT = GUICreate("Exynos MSL / EFS Reset", 354, 181, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos ", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("MSL Reset Modem Port", 40, 40)
				Global $MEthod2 = GUICtrlCreateRadio("MSL Reset New Security", 40, 88)
				Global $Method6_0 = GUICtrlCreateRadio("ADB Root MSL Reset", 208, 40)
				Global $ButtonStartSPRCert = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPRCERT)
							EnableButtons()
							ExitLoop
						Case $ButtonStartSPRCert
							IF GUICtrlRead($Method1) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText($Edit1, "")
								Global $showme2 = CredNoLicense("mslexy", "94")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exynos MSL Reset via Modem Port" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If $key == False Then
										DeleteRecurrencia($imei & "94")
										refund(GUICtrlRead($Edit1))
										WrongKeyNoCred()
										ExitLoop
									ElseIf $key == 0 Then
										DeleteRecurrencia($imei & "94")
										refund(GUICtrlRead($Edit1))
										Error0002NoCred()
										ExitLoop
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										#Region ### START Koda GUI section ### Form=
										Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
										Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
										Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
										GUICtrlSetData($Combo1, _CommListPorts(1))
										GUICtrlCreateGroup("", -99, -99, 1, 1)
										Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
										Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
										Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
										Global $Label3 = GUICtrlCreateLabel("SELECT MODEM PORT.", 312, 80, 126, 17)
										Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
										Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
										GUISetState(@SW_SHOW)
										#EndRegion ### END Koda GUI section ###

										While 1
											$nMsg = GUIGetMsg()
											Switch $nMsg
												Case $GUI_EVENT_CLOSE
													GUIDelete($FormCOM)
													DeleteRecurrencia($imei & "94")
													refund(GUICtrlRead($Edit1))
													EnableButtons()
													ExitLoop

												Case $OpenDeviceMGM
													OpenDevMenu()

												Case $ButtonrefreshComm
													GUICtrlSetData($Combo1,"")
													GUICtrlSetData($Combo1, _CommListPorts(1))

												Case $ButtonSelectCom
													Global $commselected = GUICtrlRead($Combo1)
													Global $finalcom = StringTrimLeft($commselected, 3)
													If $commselected == "" Then
														MsgBox(16, "Error", "No CommPort Selected!")
													Else
														GUIDelete($FormCOM)
														Global $ejec = IsCreditNedded2("8", $key)
														Global $var = shori($ejec[1], $key)
														Global $Exyarr = StringSplit($var, "{")
														If @error Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 	recibiendo datos del servidor..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "94")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															Global $err = ""
															_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
															If $err == "" Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Conexion... " )
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Global $star = TimerInit()
																Do
																	_CommSendString("AT" & @CR, 1)
																	$instrcheck = _commGetLine(@CR, 20, 200)
																	Sleep(20)
																	 If $instrcheck == "" Then
																		Global $Com = 1
																	 Else
																		$Com = 0
																		ExitLoop
																	 EndIf
																	 Sleep(100)
																Until TimerDiff($star) > 3000
																If $Com == 1 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Puerto COM seleccionado incorrecto!" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	DeleteRecurrencia($imei & "94")
																	refund(GUICtrlRead($Edit1))
																	firma()
																	AddLog()
																	logs()
																	EnableButtons()
																	ExitLoop
																Else
																	While 1
																		$instr = _commGetLine(@CR, 20, 200)
																		If StringInStr($instr, "OK") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			_CommSendString($Exyarr[1] & @CR, 1)
																			Sleep(3000)
																			Global $star = TimerInit()
																			Do
																				 $instr = _commGetLine(@CR, 20, 400)
																				 if StringInStr($instr, "OK") <> 0 Then
																					 Global $response = " Iniciando comunicacion con el Modem..."
																					 ExitLoop
																				 Else
																					 Global $response = " Unespected Response from device..."
																				 EndIf
																			Until TimerDiff($star) > 3000
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $response & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			$instr = ''
																			_CommSendString($Exyarr[1] & @CR, 1)
																			Sleep(3000)
																			Global $star = TimerInit()
																			Do
																				 $instr = _commGetLine(@CR, 20, 400)
																				 If StringInStr($instr, 'OK') <> 0 Then
																					 Global $response1 = " Comunicacion establecida... OK"
																					 ExitLoop
																				 Else
																					 Global $response1 = " Error Retrying Comunication..."
																				 EndIf
																			Until TimerDiff($star) > 3000
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $response1 & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando protocolo de datos..." & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			$instr = ''
																			_CommSendString($Exyarr[2] & @CR, 1)
																			Sleep(3000)
																			Global $star = TimerInit()
																			Do
																				 $instr = _commGetLine(@CR, 20, 400)
																				If StringInStr($instr, 'OK') <> 0 Then
																					 Global $devcom  = " INFO Recibida..."
																					 ExitLoop
																				 Else
																					 Global $devcom  = " Error Getting INFO"
																				 EndIf
																			Until TimerDiff($star) > 3000
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $devcom & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando peticion de valores NVDATA..." )
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			Global $instr = ''
																			_CommSendString($Exyarr[3] & @CR, 1)
																			Sleep(3000)
																			Global $star = TimerInit()
																			Global $msladdfinal = ""
																			Do
																				$instr = _commGetLine(@CR, 20, 1000)
																				If StringInStr($instr, '_ENC :', $STR_NOCASESENSE) <> 0 Then
																					Global $msladd = StringSplit($instr, ":")
																					If @error Then
																						Global $comp = "Error 01!"
																						ExitLoop
																					EndIf
																					Global $msladdfinal = StringSplit($msladd[2], ",")[1]
																					If @error Then
																						Global $comp = "Error 02!"
																						ExitLoop
																					EndIf
																					Global $mslprev = $msladdfinal - 1
																					Global $comp = " OK"
																					ExitLoop
																				 Else
																					 Global $comp  = " Error!"
																				 EndIf
																			Until TimerDiff($star) > 3000
																			If $comp == "Error 01!" Then
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido... " & $comp & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				DeleteRecurrencia($imei & "94")
																				refund(GUICtrlRead($Edit1))
																				firma()
																				AddLog()
																				logs()
																				EnableButtons()
																				_CommClosePort()
																				ExitLoop
																			ElseIf $comp == "Error 02!" Then
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido... " & $comp & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				DeleteRecurrencia($imei & "94")
																				refund(GUICtrlRead($Edit1))
																				firma()
																				AddLog()
																				logs()
																				EnableButtons()
																				_CommClosePort()
																				ExitLoop
																			ElseIf $comp == " Error!" Then
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido... " & $comp & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				DeleteRecurrencia($imei & "94")
																				refund(GUICtrlRead($Edit1))
																				firma()
																				AddLog()
																				logs()
																				EnableButtons()
																				_CommClosePort()
																				ExitLoop
																			Else
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $comp & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				$instr = ''
																				_CommSendString($Exyarr[4] & $msladdfinal & $Exyarr[5] & @CR, 1)
																				Sleep(3000)
																				Global $star = TimerInit()
																				Do
																					 $instr = _commGetLine(@CR, 20, 200)
																					 If StringInStr($instr, 'OK') <> 0 Then
																						 Global $first  = " Valores NV1 enviados satisfactoriamente..."
																						 ExitLoop
																					 Else
																						 Global $first  = " Error enviando valores..."
																					 EndIf
																				Until TimerDiff($star) > 3000
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $first & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				$instr = ''
																				_CommSendString($Exyarr[6] & $mslprev & $Exyarr[7] & @CR, 1)
																				Sleep(3000)
																				Global $star = TimerInit()
																				Do
																					 $instr = _commGetLine(@CR, 20, 200)
																					 If StringInStr($instr, 'OK') <> 0 Then
																						 Global $second  = " Valores NV2 enviados satisfactoriamente..."
																						 ExitLoop
																					 Else
																						 Global $second  = " Error enviando valores..."
																					 EndIf
																				Until TimerDiff($star) > 3000
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $second & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Obteniendo LOCK LEVEL info... " )
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				$instr = ''
																				_CommSendString($Exyarr[8] & @CR, 1)
																				Sleep(3000)
																				Global $star = TimerInit()
																				Do
																					$instr = _commGetLine(@CR, 20, 1000)
																					If StringInStr($instr, 'EL :', $STR_NOCASESENSE) <> 0 Then
																						Global $cml = StringSplit($instr, ":")
																						If @error Then
																							Global $comp = "Error 03!"
																							ExitLoop
																						EndIf
																						Global $cmlfinal = StringSplit($cml[2], ",")[1]
																						If @error Then
																							Global $comp = "Error 04!"
																							ExitLoop
																						EndIf
																						Global $comp = " OK"
																						ExitLoop
																					 Else
																						 Global $comp  = " Error!"
																					 EndIf
																				Until TimerDiff($star) > 3000
																				If $comp == "Error 03!" Then
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido... " & $comp & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					DeleteRecurrencia($imei & "94")
																					refund(GUICtrlRead($Edit1))
																					firma()
																					AddLog()
																					logs()
																					EnableButtons()
																					_CommClosePort()
																					ExitLoop
																				ElseIf $comp == "Error 04!" Then
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido... " & $comp & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					DeleteRecurrencia($imei & "94")
																					refund(GUICtrlRead($Edit1))
																					firma()
																					AddLog()
																					logs()
																					EnableButtons()
																					_CommClosePort()
																					ExitLoop
																				ElseIf $comp == " Error!" Then
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido... " & $comp & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					DeleteRecurrencia($imei & "94")
																					refund(GUICtrlRead($Edit1))
																					firma()
																					AddLog()
																					logs()
																					EnableButtons()
																					_CommClosePort()
																					ExitLoop
																				Else
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $comp & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					$instr = ''
																					_CommSendString($Exyarr[9] & $cmlfinal & $Exyarr[10] & @CR, 1)
																					Sleep(3000)
																					Global $star = TimerInit()
																					Do
																						$instr = _commGetLine(@CR, 20, 200)
																						If StringInStr($instr, 'OK') <> 0 Then
																							Global $THIRD = " Valores NV3 enviados satisfactoriamente..."
																							ExitLoop
																						Else
																							Global $THIRD  = " Error enviando valores..."
																						EndIf
																					Until TimerDiff($star) > 3000
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $THIRD & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado! " & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					firma()
																					AddLog()
																					logs()
																					EnableButtons()
																					_CommClosePort()
																					ExitLoop
																				EndIf
																			EndIf
																		ElseIf StringInStr($instr, "ERROR") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequea la conexion e intenta nuevamente!" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			DeleteRecurrencia($imei & "94")
																			refund(GUICtrlRead($Edit1))
																			firma()
																			AddLog()
																			logs()
																			EnableButtons()
																			ExitLoop
																		EndIf
																	WEnd
																	ExitLoop
																EndIf
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error abriendo puerto..." & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																DeleteRecurrencia($imei & "94")
																refund(GUICtrlRead($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															EndIf
														EndIf
													EndIf
											EndSwitch
										WEnd
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($MEthod2) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText($Edit1, "")
								Global $showme2 = CredNoLicense("mslexy", "94")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exynos MSL Reset New Sec" & @CRLF)
									Global $precio = ''
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										$imei = IxxxProcess(GUICtrlRead($Edit1))
										Global $dime = IsCreditNedded2("9",$key)
										If $activo == 1 Then
											Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "9")
										EndIf
										If $confirm <> "NO" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											If $key == False Then
												DeleteRecurrencia($imei & "94")
												refund(GUICtrlRead($Edit1))
												WrongKey($imei)
												ExitLoop
											ElseIf $key == 0 Then
												DeleteRecurrencia($imei & "94")
												refund(GUICtrlRead($Edit1))
												Error0002($imei)
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Global $var = shori($dime[1], $key)
												Global $ExyNewArr = StringSplit($var, "{")
												If @error Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 	recibiendo datos del servidor..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													refund(GUICtrlRead($Edit1))
													DeleteRecurrencia($imei & "9")
													DeleteRecurrencia($imei & "94")
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													If Not FileExists(@ScriptDir & "\UNSEC") Then
														FileInstall("UNSEC", @ScriptDir & "\UNSEC", $FC_OVERWRITE)
													EndIf
													$ipid = Run($ExyNewArr[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													FileDelete(@ScriptDir & "\UNSEC")
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo Permisos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $rootcheck = _Android_HasRootAccess()
													$ipid = Run($ExyNewArr[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando proceso..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("adb shell", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(1000)
													If $rootcheck == "True" Then
														StdinWrite($ipid, "su" & @LF )
														Sleep(1000)
													EndIf
													StdinWrite($ipid, $ExyNewArr[3] & @LF )
													Sleep(1000)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Archivos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													If Not FileExists(@TempDir & "\UNSECK") Then
														FileInstall("UNSECK", @TempDir & "\UNSECK", $FC_OVERWRITE)
													EndIf
													If StringInStr($soutput, "Enter") == 0 Then
														FileDelete(@TempDir & "\UNSECK")
														$ipid = Run($ExyNewArr[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Error!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														refund(GUICtrlRead($Edit1))
														DeleteRecurrencia($imei & "9")
														DeleteRecurrencia($imei & "94")
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														Global $array = StringSplit($soutput, ":")
														Global $Rows = UBound($array, $UBOUND_ROWS)
														For $i = 1 to $Rows - 1
															If StringInStr($array[$i], "Error") <> 0 Then
																Global $lallave = 0
																ExitLoop
															ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
																Global $lallave = StringReplace($array[$i], " ", "")
																ExitLoop
															Else
																Global $lallave = 0
															EndIf
														Next
														Global $ahorasitengolallave = _Interpretermsl($lallave)
														If StringInStr($ahorasitengolallave, "Error") == 0 Then
															Sleep(4000)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															$ver = StdinWrite($ipid, $ahorasitengolallave & @LF )
															Global $star = TimerInit()
															Do
																$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																Sleep(100)
																If StringInStr($soutput1, 'Error') <> 0 Then
																	ExitLoop
																ElseIf StringInStr($soutput1, 'Done') <> 0 Then
																	ExitLoop
																 EndIf
															Until TimerDiff($star) > 60000
															$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput1, 'Error') <> 0 or $soutput1 == "" then
																FileDelete(@TempDir & "\UNSECK")
																ProcessClose($ipid)
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Intente nuevamente rooteando primero su dispositivo o via Modem Port" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																refund(GUICtrlRead($Edit1))
																DeleteRecurrencia($imei & "9")
																DeleteRecurrencia($imei & "94")
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															Else
																ProcessClose($ipid)
																FileDelete(@TempDir & "\UNSECK")
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															EndIf
														Else
															FileDelete(@TempDir & "\UNSECK")
															$ipid = Run($ExyNewArr[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 400!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															refund(GUICtrlRead($Edit1))
															DeleteRecurrencia($imei & "9")
															DeleteRecurrencia($imei & "94")
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														EndIf
													EndIf
												EndIf
											EndIf
										Else
											_GUICtrlEdit_SetText ($Edit1, "")
											EnableButtons()
											ExitLoop
										EndIf
									Else
										DeleteRecurrencia($imei & "94")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($Method6_0) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("mslexy", "94")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exynos MSL Reset ADB Root" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									Global $dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando Procedimiento..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("51", $key)
										Global $var = shori($ejec[1], $key)
										Global $exyadb = StringSplit($var, "{")
										Global $rootcheck = _Android_HasRootAccess()
										If $rootcheck ==  "False" Then
											Global $adbsuono = "shell"
										Else
											Global $adbsuono = "shell su -c"
										EndIf
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Buscando EFS..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb " & $adbsuono & " " & $exyadb[1], "", @SW_HIDE, $stderr_child + $stdout_child) ;1
										ProcessWaitClose($ipid)
										$ipid = Run("adb " & $adbsuono & ' ' & $exyadb[2], "", @SW_HIDE, $stderr_child + $stdout_child) ;2
										ProcessWaitClose($ipid)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										If StringInStr($soutput, "No such file or directory") <> 0 Then
											$ipid = Run("adb " & $adbsuono & ' ' & $exyadb[3], "", @SW_HIDE, $stderr_child + $stdout_child) ;3
											ProcessWaitClose($ipid)
											$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											If StringInStr($soutput, "No such file or directory") <> 0 Then
												$ipid = Run("adb " & $adbsuono & ' ' & $exyadb[4], "", @SW_HIDE, $stderr_child + $stdout_child) ;4
												ProcessWaitClose($ipid)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												If StringInStr($soutput, "No such file or directory") <> 0 Then
													$ipid = Run("adb " & $adbsuono & ' ' & $exyadb[5], "", @SW_HIDE, $stderr_child + $stdout_child) ;5
													ProcessWaitClose($ipid)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													If StringInStr($soutput, "No such file or directory") == 0 Then
														Global $text1 = StringReplace($soutput, " ", "")
														Global $str = StringSplit($text1, ">")[2]
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Eliminando EFS...")
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run("adb " & $adbsuono & " make_ext4fs " & $str, "", @SW_HIDE, $stderr_child + $stdout_child)
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														If StringInStr($soutput, "Permission denied") <> 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Permiso denegado" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Permiso garantizado" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														EndIf
													Else
														Global $text2 = StringReplace($soutput, " ", "")
														Global $str2 = StringSplit($text2, ">")[2]
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Eliminando EFS...")
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run("adb " & $adbsuono & " make_ext4fs " & $str2, "", @SW_HIDE, $stderr_child + $stdout_child)
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														If StringInStr($soutput, "Permission denied") <> 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Permiso denegado" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Permiso garantizado" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														EndIf
													EndIf
												Else
													Global $text3 = StringReplace($soutput, " ", "")
													Global $str3 = StringSplit($text3, ">")[2]
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Eliminando EFS...")
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("adb " & $adbsuono & " make_ext4fs " & $str3, "", @SW_HIDE, $stderr_child + $stdout_child)
													ProcessWaitClose($ipid)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													If StringInStr($soutput, "Permission denied") <> 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Permiso denegado" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " perimso garantizado" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													EndIf
												EndIf
											Else
												Global $text4 = StringReplace($soutput, " ", "")
												Global $str4 = StringSplit($text4, ">")[2]
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Eliminando EFS...")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb " & $adbsuono & " make_ext4fs " & $str4, "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												If StringInStr($soutput, "Permission denied") <> 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " permiso denegado" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " permiso garantizado" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												EndIf
											EndIf
										Else
											Global $text4 = StringReplace($soutput, " ", "")
											Global $str4 = StringSplit($text4, ">")[2]
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Eliminando EFS...")
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											$ipid = Run("adb " & $adbsuono & " make_ext4fs " & $str4, "", @SW_HIDE, $stderr_child + $stdout_child)
											ProcessWaitClose($ipid)
											$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											If StringInStr($soutput, "Permission denied") <> 0 Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " permiso denegado" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " permiso garantizado" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											EndIf
										EndIf
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Borrando NV...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb " & $adbsuono & ' ' & $exyadb[6], "", @SW_HIDE, $stderr_child + $stdout_child) ;6
										ProcessWaitClose($ipid)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										$ipid = Run("adb " & $adbsuono & ' ' & $exyadb[7], "", @SW_HIDE, $stderr_child + $stdout_child) ;7
										ProcessWaitClose($ipid)
										$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										$ipid = Run("adb " & $adbsuono & ' ' & $exyadb[8], "", @SW_HIDE, $stderr_child + $stdout_child) ;8
										ProcessWaitClose($ipid)
										$soutput2 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										$ipid = Run("adb " & $adbsuono & ' ' & $exyadb[9], "", @SW_HIDE, $stderr_child + $stdout_child) ;9
										ProcessWaitClose($ipid)
										$soutput3 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										If StringInStr($soutput,"No such file or directory") <> 0 And StringInStr($soutput1,"No such file or directory") <> 0 And StringInStr($soutput2,"No such file or directory") <> 0 And StringInStr($soutput3,"No such file or directory") <> 0 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No detectado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										EndIf
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										DeleteRecurrencia($imei & "94")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							Else
								GUIDelete($SPRCERT)
								MsgBox(64, "Error", "Must Select a valid Method")
								EnableButtons()
								ExitLoop
							EndIf
					EndSwitch
				WEnd
			ElseIf $ReadCombo == $iArray[181] Then
				#Region ### START Koda GUI section ### Form=
				Global $SPRCERT = GUICreate("Qualcomm MSL / EFS Reset", 354, 181, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos ", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("MSL Reset Serial Port", 40, 40)
				Global $MEthod2 = GUICtrlCreateRadio("MSL Reset New Sec 1", 40, 88)
				Global $Method6_0 = GUICtrlCreateRadio("ADB Root MSL Reset", 208, 40)
				Global $MethodS8 = GUICtrlCreateRadio("MSL Reset New Sec 2", 207, 84)
				Global $ButtonStartSPRCert = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPRCERT)
							EnableButtons()
							ExitLoop
						Case $ButtonStartSPRCert
							IF GUICtrlRead($Method1) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText($Edit1, "")
								Global $showme2 = CredNoLicense("qcommsl", "95")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Qualcomm MSL Reset Serial Port" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										#Region ### START Koda GUI section ### Form=
										Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
										Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
										Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
										GUICtrlSetData($Combo1, _CommListPorts(1))
										GUICtrlCreateGroup("", -99, -99, 1, 1)
										Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
										Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
										Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
										Global $Label3 = GUICtrlCreateLabel("SELECT SERIAL PORT.", 312, 80)
										Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
										Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
										GUISetState(@SW_SHOW)
										#EndRegion ### END Koda GUI section ###

										While 1
											$nMsg = GUIGetMsg()
											Switch $nMsg
												Case $GUI_EVENT_CLOSE
													GUIDelete($FormCOM)
													DeleteRecurrencia($imei & "95")
													refund(GUICtrlRead($Edit1))
													EnableButtons()
													ExitLoop

												Case $OpenDeviceMGM
													OpenDevMenu()

												Case $ButtonrefreshComm
													GUICtrlSetData($Combo1,"")
													GUICtrlSetData($Combo1, _CommListPorts(1))

												Case $ButtonSelectCom
													Global $commselected = GUICtrlRead($Combo1)
													Global $finalcom = StringTrimLeft($commselected, 3)
													If $commselected == "" Then
														MsgBox(16, "Error", "No CommPort Selected!")
													Else
														GUIDelete($FormCOM)
														Global $checkun = MSLQC($commselected)
														If $checkun == 1 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "95")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														EndIf
													EndIf
											EndSwitch
										WEnd
										ExitLoop
									Else
										DeleteRecurrencia($imei & "95")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($Method6_0) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText($Edit1, "")
								Global $showme2 = CredNoLicense("qcommsl", "95")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Qualcomm MSL Reset via adb" & @CRLF)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando Procedimiento..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("52", $key)
										Global $var = shori($ejec[1], $key)
										Global $qcadb = StringSplit($var, "{")
										Global $ejec1 = IsCreditNedded2("53", $key)
										Global $var1 = shori($ejec1[1], $key)
										Global $qcadb2 = StringSplit($var1, "{")
										Global $rootcheck = _Android_HasRootAccess()
										If $rootcheck ==  "False" Then
											Global $adbsuono = "shell"
										Else
											Global $adbsuono = "shell su -c"
										EndIf
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Buscando MODEMST1..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[1], "", @SW_HIDE, $stderr_child + $stdout_child) ;1
										ProcessWaitClose($ipid)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										If StringInStr($soutput, "No such file or directory") <> 0 Then
											$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[2], "", @SW_HIDE, $stderr_child + $stdout_child) ;2
											ProcessWaitClose($ipid)
											$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											If StringInStr($soutput, "No such file or directory") <> 0 Then
												$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[3], "", @SW_HIDE, $stderr_child + $stdout_child) ;3
												ProcessWaitClose($ipid)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												If StringInStr($soutput, "No such file or directory") <> 0 Then
													$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[4], "", @SW_HIDE, $stderr_child + $stdout_child) ;4
													ProcessWaitClose($ipid)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													If StringInStr($soutput, "No such file or directory") <> 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error listando MODEMST1!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													EndIf
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												EndIf
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											EndIf
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										EndIf
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Buscando MODEMST2..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[6], "", @SW_HIDE, $stderr_child + $stdout_child) ;6
										ProcessWaitClose($ipid)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										If StringInStr($soutput, "No such file or directory") <> 0 Then
											$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[7], "", @SW_HIDE, $stderr_child + $stdout_child) ;7
											ProcessWaitClose($ipid)
											$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											If StringInStr($soutput, "No such file or directory") <> 0 Then
												$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[8], "", @SW_HIDE, $stderr_child + $stdout_child) ;8
												ProcessWaitClose($ipid)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												If StringInStr($soutput, "No such file or directory") <> 0 Then
													$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[9], "", @SW_HIDE, $stderr_child + $stdout_child) ;9
													ProcessWaitClose($ipid)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													If StringInStr($soutput, "No such file or directory") <> 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error listando MODEMST2!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													EndIf
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												EndIf
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											EndIf
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										EndIf
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Buscando FSG..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[10], "", @SW_HIDE, $stderr_child + $stdout_child) ;10
										ProcessWaitClose($ipid)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										If StringInStr($soutput, "No such file or directory") <> 0 Then
											$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[11], "", @SW_HIDE, $stderr_child + $stdout_child) ;11
											ProcessWaitClose($ipid)
											$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											If StringInStr($soutput, "No such file or directory") <> 0 Then
												$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[12], "", @SW_HIDE, $stderr_child + $stdout_child) ;12
												ProcessWaitClose($ipid)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												If StringInStr($soutput, "No such file or directory") <> 0 Then
													$ipid = Run("adb " & $adbsuono & ' ' & $qcadb2[1], "", @SW_HIDE, $stderr_child + $stdout_child) ;13
													ProcessWaitClose($ipid)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													If StringInStr($soutput, "No such file or directory") <> 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error listando FSG!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													EndIf
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												EndIf
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											EndIf
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Encontrado, eliminando...")
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[5] & $soutput & '"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										EndIf
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb reboot", "", @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										 firma()
										 AddLog()
										 logs()
										 EnableButtons()
										 ExitLoop
									Else
										DeleteRecurrencia($imei & "95")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($MEthod2) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText($Edit1, "")
								Global $showme2 = CredNoLicense("qcommsl", "95")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Qualcomm MSL Reset New Sec 1" & @CRLF)
									Global $precio = ''
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										$imei = IxxxProcess(GUICtrlRead($Edit1))
										Global $dime = IsCreditNedded2("49",$key)
										If $activo == 1 Then
											Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "9")
										EndIf
										If $confirm <> "NO" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											If $key == False Then
												refund(GUICtrlRead($Edit1))
												DeleteRecurrencia($imei & "95")
												WrongKey($imei)
												ExitLoop
											ElseIf $key == 0 Then
												refund(GUICtrlRead($Edit1))
												DeleteRecurrencia($imei & "95")
												Error0002($imei)
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Global $var = shori($dime[1], $key)
												Global $QCarr = StringSplit($var, "{")
												If @error Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 	recibiendo datos del servidor..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													refund(GUICtrlRead($Edit1))
													DeleteRecurrencia($imei & "49")
													DeleteRecurrencia($imei & "95")
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando proceso..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													If Not FileExists(@ScriptDir & "\QCWIP") Then
														FileInstall("QCWIP", @ScriptDir & "\QCWIP", $FC_OVERWRITE)
													EndIf
													$ipid = Run($QCarr[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;1
													ProcessWaitClose($ipid)
													FileDelete(@ScriptDir & "\QCWIP")
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo Permisos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $rootcheck = _Android_HasRootAccess()
													$ipid = Run($QCarr[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("adb shell", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(1000)
													If $rootcheck == "False" Then
														StdinWrite($ipid, "su" & @LF )
														Sleep(1000)
													EndIf
													StdinWrite($ipid, $QCarr[3] & @LF ) ;3
													Sleep(1000)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Archivos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													If Not FileExists(@TempDir & "\QCWIPK") Then
														FileInstall("QCWIPK", @TempDir & "\QCWIPK", $FC_OVERWRITE)
													EndIf
													Global $array = StringSplit($soutput, ":")
													If @error Or UBound($array, $UBOUND_ROWS) <= 1 Or StringInStr($soutput, "Enter") == 0 Then
														FileDelete(@TempDir & "\QCWIPK")
														$ipid = Run($QCarr[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error desencriptando llave" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														refund(GUICtrlRead($Edit1))
														DeleteRecurrencia($imei & "49")
														DeleteRecurrencia($imei & "95")
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														Global $Rows = UBound($array, $UBOUND_ROWS)
														For $i = 1 to $Rows - 1
															If StringInStr($array[$i], "Error") <> 0 Then
																Global $lallave = 0
																ExitLoop
															ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
																Global $lallave = StringReplace($array[$i], " ", "")
																ExitLoop
															Else
																Global $lallave = 0
															EndIf
														Next
														Global $ahorasitengolallave = _Interpreterqcwipe($lallave)
														If StringInStr($ahorasitengolallave, "Error") == 0 Then
															Sleep(4000)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															$ver = StdinWrite($ipid, $ahorasitengolallave & @LF )
															Global $star = TimerInit()
															Do
																$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																Sleep(100)
																If StringInStr($soutput1, 'Error') <> 0 Then
																	ExitLoop
																ElseIf StringInStr($soutput1, 'WIPE!!!') <> 0 Then
																	ExitLoop
																 EndIf
															Until TimerDiff($star) > 60000
															If StringInStr($soutput1, 'Error') <> 0 or $soutput1 == "" then
																FileDelete(@TempDir & "\QCWIPK")
																ProcessClose($ipid)
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Intente nuevamente con root o combination firmware" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																refund(GUICtrlRead($Edit1))
																DeleteRecurrencia($imei & "49")
																DeleteRecurrencia($imei & "95")
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															Else
																ProcessClose($ipid)
																FileDelete(@TempDir & "\QCWIPK")
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															EndIf
														Else
															FileDelete(@TempDir & "\QCWIPK")
															$ipid = Run($QCarr[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
															ProcessWaitClose($ipid)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 400!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															refund(GUICtrlRead($Edit1))
															DeleteRecurrencia($imei & "49")
															DeleteRecurrencia($imei & "95")
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														EndIf
													EndIf
												EndIf
											EndIf
										Else
											_GUICtrlEdit_SetText ($Edit1, "")
											refund(GUICtrlRead($Edit1))
											DeleteRecurrencia($imei & "95")
											EnableButtons()
											ExitLoop
										EndIf
									Else
										refund(GUICtrlRead($Edit1))
										DeleteRecurrencia($imei & "95")
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($MethodS8) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText($Edit1, "")
								Global $showme2 = CredNoLicense("qcommsl", "95")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Qualcomm MSL Reset New Sec 2" & @CRLF)
									Global $precio = ''
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										$imei = IxxxProcess(GUICtrlRead($Edit1))
										Global $dime = IsCreditNedded2("50",$key)
										If $activo == 1 Then
											Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "50")
										EndIf
										If $confirm <> "NO" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											If $key == False Then
												refund(GUICtrlRead($Edit1))
												DeleteRecurrencia($imei & "95")
												WrongKey($imei)
												ExitLoop
											ElseIf $key == 0 Then
												refund(GUICtrlRead($Edit1))
												DeleteRecurrencia($imei & "95")
												Error0002($imei)
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Global $var = shori($dime[1], $key)
												Global $QCarr = StringSplit($var, "{")
												If @error Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 	recibiendo datos del servidor..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													refund(GUICtrlRead($Edit1))
													DeleteRecurrencia($imei & "50")
													DeleteRecurrencia($imei & "95")
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando proceso..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													If Not FileExists(@ScriptDir & "\WIPEP") Then
														FileInstall("WIPEP", @ScriptDir & "WIPEP", $FC_OVERWRITE)
													EndIf
													$ipid = Run($QCarr[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;1
													ProcessWaitClose($ipid)
													FileDelete(@ScriptDir & "\WIPEP")
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo Permisos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $rootcheck = _Android_HasRootAccess()
													$ipid = Run($QCarr[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("adb shell", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(1000)
													If $rootcheck ==  "False" Then
														StdinWrite($ipid, "su" & @LF ) ;3
														Sleep(1000)
													EndIf
													StdinWrite($ipid, $QCarr[3] & @LF ) ;3
													Sleep(1000)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Archivos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													If Not FileExists(@TempDir & "\WIPEK") Then
														FileInstall("WIPEK", @TempDir & "\WIPEK", $FC_OVERWRITE)
													EndIf
													Global $array = StringSplit($soutput, ":")
													If @error Or UBound($array, $UBOUND_ROWS) <= 1 Or StringInStr($soutput, "Enter") == 0 Then
														FileDelete(@TempDir & "\WIPEK")
														$ipid = Run($QCarr[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error desencriptando llave" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														refund(GUICtrlRead($Edit1))
														DeleteRecurrencia($imei & "50")
														DeleteRecurrencia($imei & "95")
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														Global $Rows = UBound($array, $UBOUND_ROWS)
														For $i = 1 to $Rows - 1
															If StringInStr($array[$i], "Error") <> 0 Then
																Global $lallave = 0
																ExitLoop
															ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
																Global $lallave = StringReplace($array[$i], " ", "")
																ExitLoop
															Else
																Global $lallave = 0
															EndIf
														Next
														Global $ahorasitengolallave = _Interpreterqcwipe2($lallave)
														If StringInStr($ahorasitengolallave, "Error") == 0 Then
															Sleep(4000)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															$ver = StdinWrite($ipid, $ahorasitengolallave & @LF )
															Global $star = TimerInit()
															Do
																$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																Sleep(100)
																If StringInStr($soutput1, 'FAILED') <> 0 Then
																	ExitLoop
																ElseIf StringInStr($soutput1, 'WIPE!!!') <> 0 Then
																	ExitLoop
																 EndIf
															Until TimerDiff($star) > 60000
															If StringInStr($soutput1, 'Error') <> 0 or $soutput1 == "" then
																FileDelete(@TempDir & "\WIPEK")
																ProcessClose($ipid)
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Intente nuevamente con root o combination firmware" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																refund(GUICtrlRead($Edit1))
																DeleteRecurrencia($imei & "50")
																DeleteRecurrencia($imei & "95")
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															Else
																ProcessClose($ipid)
																FileDelete(@TempDir & "\WIPEK")
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															EndIf
														Else
															FileDelete(@TempDir & "\WIPEK")
															$ipid = Run($QCarr[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
															ProcessWaitClose($ipid)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 400!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															refund(GUICtrlRead($Edit1))
															DeleteRecurrencia($imei & "50")
															DeleteRecurrencia($imei & "95")
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														EndIf
													EndIf
												EndIf
											EndIf
										Else
											_GUICtrlEdit_SetText ($Edit1, "")
											refund(GUICtrlRead($Edit1))
											DeleteRecurrencia($imei & "95")
											EnableButtons()
											ExitLoop
										EndIf
									Else
										refund(GUICtrlRead($Edit1))
										DeleteRecurrencia($imei & "95")
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							Else
								GUIDelete($SPRCERT)
								MsgBox(64, "Error", "Must Select a valid Method")
								EnableButtons()
								ExitLoop
							EndIf
					EndSwitch
				WEnd
			ElseIf $ReadCombo == $iArray[203] Then
				SetProcLanDefinitive("smscenter" & $indicator)
				MsgBox(64, "MC-U Tool", "Debe insertar tarjeta SIM" & @CRLF & @CRLF & "Must insert SIM Card")
				#Region ### START Koda GUI section ### Form=
				Global $CSCA = GUICreate("SMS Center", 218, 123, -1, -1)
				Global $GroupSMS = GUICtrlCreateGroup("Type SMS Center Number to Send", 16, 8, 185, 97)
				Global $InputSMS = GUICtrlCreateInput("+5372640004", 48, 40, 121, 21)
				Global $ButtonSendSms = GUICtrlCreateButton("Send", 72, 72, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($CSCA)
							EnableButtons()
							ExitLoop
						Case $ButtonSendSms
							Global $number = GUICtrlRead($InputSMS)
							GUIDelete($CSCA)
							_GUICtrlEdit_SetText($Edit1, "")
							Global $showme2 = CredNoLicense("SMSCenter", "129")
							If StringIsDigit($showme2) == 1 Or $activo == 1 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$pro = GUICtrlRead($Edit1)
								Global $smstrue = CSCA($number)
								If $smstrue == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
									ExitLoop
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DeleteRecurrencia($imei & "129")
									refund(GUICtrlRead($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf $showme2 = True Then
								MsgBox(16, "Error", "Operacion Cencelada")
								EnableButtons()
								ExitLoop
							Else
								MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
								EnableButtons()
								ExitLoop
							EndIf
					EndSwitch
				WEnd
			EndIf
		Case $go
			Global $ComboRead = GUICtrlRead($ComboTools)
			DisableButtons()
			If $ComboRead == $iArray[160] Then
				_GUICtrlEdit_SetText($Edit1, "")
				ReadInfoSamsung()
				firma()
				logs()
				EnableButtons()
			ElseIf $ComboRead == $iArray[161] Then
				 _GUICtrlEdit_SetText ($Edit1, "")
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ADB Reboot Download" & @CRLF)
				 $pro = GUICtrlRead($Edit1)
				 $dejaver = ReadInfoSamsung()
				 If $dejaver == 1 then
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 $ipid = Run("adb reboot download", "", @SW_HIDE)
					 ProcessWaitClose($ipid)
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Listo!" & @CRLF)
					 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 firma()
					 AddLog()
					 logs()
					 EnableButtons()
				 Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[162] Then
				 _GUICtrlEdit_SetText ($Edit1, "")
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ADB Reboot Recovery" & @CRLF)
				 $pro = GUICtrlRead($Edit1)
				 $dejaver = ReadInfoSamsung()
				 If $dejaver == 1 then
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 $ipid = Run("adb reboot recovery", "", @SW_HIDE)
					 ProcessWaitClose($ipid)
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Listo!" & @CRLF)
					 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 firma()
					 AddLog()
					 logs()
					 EnableButtons()
				 Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[164] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung S-Health Fix" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoSamsung()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('adb shell "su 0 id -u 2>/dev/null"', "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If $soutput <> '' Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run('adb shell su -c mount -o rw,remount /system', "", @SW_HIDE, $stderr_child + $stdout_child)
						ProcessWaitClose($ipid)
						$ipid = Run('adb pull /system/build.prop', "", @SW_HIDE, $stderr_child + $stdout_child)
						ProcessWaitClose($ipid)
						If FileExists(@ScriptDir & "\build.prop") Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Procesando datos..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $read = FileRead(@ScriptDir & "\build.prop")
							Global $create = FileOpen(@ScriptDir & "\build2.prop", 2)
							Local $sString = StringReplace($read, "ro.config.knox=v01", "ro.config.knox=v00")
							Local $sString1 = StringReplace($sString, "ro.config.tima=1", "ro.config.tima=0")
							Global $write = FileWrite($create, $sString1)
							$ipid = Run('adb push build.prop /data/local/tmp/', "", @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							$ipid = Run('adb push build2.prop /data/local/tmp/', "", @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run('adb shell su -c chmod 0755 /system/build.prop', "", @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							$ipid = Run('adb shell su -c cp /data/local/tmp/build2.prop /system/build.prop', "", @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							$ipid = Run('adb shell su -c chmod 0644 /system/build.prop', "", @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run('adb reboot', "", @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							FileDelete(@ScriptDir & "\build.prop")
							FileDelete(@ScriptDir & "\build2.prop")
							Sleep(2000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[167] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Knox Killer" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoSamsung()
				If $dejaver == 1 then
					Sleep(500)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Knox...." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Deshabilitando paquetes necesarios..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb shell pm default-state com.skms.android.agent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm disable-user com.skms.android.agent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm clear com.skms.android.agent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 1: listo." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(500)
					$ipid = Run("adb shell pm default-state com.samsung.android.securitylogagent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm disable-user com.samsung.android.securitylogagent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm clear com.samsung.android.securitylogagent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 2: listo." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(500)
					$ipid = Run("adb shell pm default-state com.samsung.knox.keychain", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm disable-user com.samsung.knox.keychain", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm clear com.samsung.knox.keychain", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 3: listo." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(500)
					$ipid = Run("adb shell pm default-state com.samsung.klmsagent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm disable-user com.samsung.klmsagent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm clear com.samsung.klmsagent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 4: listo." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(500)
					$ipid = Run("adb shell pm default-state com.sec.android.soagent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm disable-user com.sec.android.soagent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm clear com.sec.android.soagent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 5: listo." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(500)
					$ipid = Run("adb shell pm default-state com.samsung.android.bbc.bbcagent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm disable-user com.samsung.android.bbc.bbcagent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm clear com.samsung.android.bbc.bbcagent", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 6: listo." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(500)
					$ipid = Run("adb shell pm default-state com.policydm", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm disable-user com.policydm", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm clear com.policydm", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 7: listo." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(500)
					$ipid = Run("adb shell pm default-state com.sec.enterprise.knox.cloudmdm.smdms", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm disable-user com.sec.enterprise.knox.cloudmdm.smdms", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm clear com.sec.enterprise.knox.cloudmdm.smdms", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 8: listo." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(500)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[168] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MDM Disabler" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoSamsung()
				If $dejaver == 1 then
					Sleep(500)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Deshabilitando paquetes necesarios..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb shell pm default-state com.samsung.android.mdm", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm disable-user com.samsung.android.mdm", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm clear com.samsung.android.mdm", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[169] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Knox Guard Remove" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoSamsung()
				If $dejaver == 1 then
					Sleep(1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Deshabilitando paquetes necesarios..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb shell pm default-state com.samsung.android.kgclient", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm disable-user com.samsung.android.kgclient", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell pm clear com.samsung.android.kgclient", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[170] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enable Hidden Lenguage (Root)" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoSamsung()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $rootcheck = _Android_HasRootAccess()
					If $rootcheck == True Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Monatando sistema..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run('adb shell su -c mount -o remount, rw /system', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run('adb shell su -c mount -o rw,remount /system', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Habilitando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run('adb shell su delete rm /system/csc/language.xml', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run('adb reboot', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Proceso termindo!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Haga un hard reset para mostrar todos los idiomas!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[171] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Safe/Factory Mode Fix" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoSamsung()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $rootcheck = _Android_HasRootAccess()
					If $rootcheck == True Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Montando sistema..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run('adb shell su -c mount -o remount, rw /efs', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run('adb shell su -c mount -o rw,remount /efs', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo permisos..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run('adb shell su -c cat /efs/FactoryApp/factorymode > /data/local/tmp/factorymode', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run('adb shell su -c cat /efs/FactoryApp/keystr > /data/local/tmp/keystr', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run('adb pull /data/local/tmp/factorymode', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run('adb pull /data/local/tmp/keystr', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						If FileExists(@ScriptDir & "\factorymode") Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Procesando datos..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $read = FileRead(@ScriptDir & "\factorymode")
							Global $create = FileOpen(@ScriptDir & "\factorymode2", 2)
							Local $sString = StringReplace($read, "OFF", "ON")
							Global $write = FileWrite($create, $sString)
							Global $read1 = FileRead(@ScriptDir & "\keystr")
							Global $create1 = FileOpen(@ScriptDir & "\keystr2", 2)
							Local $sString1 = StringReplace($read1, "OFF", "ON")
							Global $write1 = FileWrite($create1, $sString1)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando datos..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run('adb push factorymode2 /data/local/tmp/', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb push keystr2 /data/local/tmp/', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run('adb shell su -c chmod 0755 /efs/FactoryApp/factorymode', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb shell su -c chmod 0755 /efs/FactoryApp/keystr', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb shell su -c cp /data/local/tmp/factorymode2 /efs/FactoryApp/factorymode', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb shell su -c cp /data/local/tmp/keystr2 /efs/FactoryApp/keystr', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run('adb reboot', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							FileDelete(@ScriptDir & "\factorymode2")
							FileDelete(@ScriptDir & "\keystr2")
							FileDelete(@ScriptDir & "\factorymode")
							FileDelete(@ScriptDir & "\keystr")
							Sleep(2000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[172] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Safe/Factory Mode Fix No Root" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoSamsung()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('adb shell fctd -b normal', "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('adb reboot', "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[173] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Softbirck Fix" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				If Not FileExists(@ScriptDir & "\odinusbapi.dll") Then
					FileInstall("odinusbapi.dll", @ScriptDir & "\odinusbapi.dll", $FC_OVERWRITE)
				EndIf
				$ipid = Run('dm detect', '', @SW_HIDE, $stderr_child + $stdout_child)
				ProcessWaitClose($ipid)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				Global $compare = Stringinstr($soutput, "Device detected")
				If $compare <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('odinusbapi.dll reboot', '', @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					FileDelete(@ScriptDir & "\odinusbapi.dll")
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung Port No encontrado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					FileDelete(@ScriptDir & "\odinusbapi.dll")
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[174] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung Pre-Relock Fixer" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoSamsung()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Deshabilitando servicios de conflicto..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('adb shell pm clear com.sec.android.soagent', "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run('adb shell pm disable-user com.sec.android.soagent', "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run('adb shell pm clear com.samsung.android.bbc.bbcagent', "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run('adb shell pm disable-user com.samsung.android.bbc.bbcagent', "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run('adb shell pm clear com.policydm', "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run('adb shell pm disable-user com.policydm ', "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Evitando Knox Void..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('adb shell pm clear com.sec.enterprise.knox.cloudmdm.smdms', "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run('adb shell pm disable-user com.sec.enterprise.knox.cloudmdm.smdms', "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run('adb shell pm disable-user com.wssyncmldm', "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('adb shell pm disable-user com.samsung.ssu', "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('adb reboot', "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[165] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exynos Knox Bypass Old Sec" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoSamsung()
				If $dejaver == 1 then
					Local $adv = MsgBox(32 + 4, "Advertencia / Warning", "Use este metodo para remover Knox Void en los modelos Exynos tales como S7 y similares en epoca. Desea Continuar?" & @CRLF & @CRLF & " Use this method to remove Knox Void for Exynos Models such as S7 and similars in time. Do you wish to continue?")
						Switch $adv
							Case 6
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando archivos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Global $ejec = IsCreditNedded2("25", $key)
								Global $var = shori($ejec[1], $key)
								Global $knoxbypass = StringSplit($var, "{")
								If Not FileExists(@ScriptDir & "\EK") Then
									FileInstall("EK", @ScriptDir & "\EK", $FC_OVERWRITE)
								EndIf
								$ipid = Run($knoxbypass[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
								ProcessWaitClose($ipid)
								FileDelete(@ScriptDir & "\EK")
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo Permisos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run($knoxbypass[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando Exploit..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Global $rootcheck = _Android_HasRootAccess()
								$ipid = Run("adb shell", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
								Sleep(2000)
								If $rootcheck == "True" Then
									StdinWrite($ipid, "su" & @LF )
									Sleep(1000)
								EndIf
								StdinWrite($ipid, $knoxbypass[3] & @LF )
								Sleep(6500)
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando comandos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								If Not FileExists(@TempDir & "\EKK") Then
									FileInstall("EKK", @TempDir & "\EKK", $FC_OVERWRITE)
								EndIf
								Global $array = StringSplit($soutput, ":")
								If @error Or UBound($array, $UBOUND_ROWS) <= 1 Or StringInStr($soutput, "Enter") == 0 Then
									FileDelete(@TempDir & "\EKK")
									$ipid = Run($knoxbypass[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error desencriptando llave" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									Global $Rows = UBound($array, $UBOUND_ROWS)
									For $i = 1 to $Rows - 1
										If StringInStr($array[$i], "Error") <> 0 Then
											Global $lallave = 0
											ExitLoop
										ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
											Global $lallave = StringReplace($array[$i], " ", "")
											ExitLoop
										Else
											Global $lallave = 0
										EndIf
									Next
									Global $ahorasitengolallave = _InterpreterKNOX($lallave)
									If StringInStr($ahorasitengolallave, "Error") == 0 Then
										Global $star = TimerInit()
										Do
											$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											 If StringInStr($soutput1, "Error") <> 0 Then
												ExitLoop
											 ElseIf StringInStr($soutput1, "Done") <> 0 Then
												ExitLoop
											ElseIf StringInStr($soutput1, "root") <> 0 Then
												ExitLoop
											 EndIf
											 Sleep(100)
										Until TimerDiff($star) > 60000
										ProcessClose($ipid)
										If StringInStr($soutput1, 'Error') <> 0 or $soutput1 == "" then
											FileDelete(@TempDir & "\EKK")
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No soportado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
										ElseIf StringInStr($soutput1, 'root') <> 0 then
											FileDelete(@TempDir & "\EKK")
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Necesita ejecutar como root!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
										Else
											FileDelete(@TempDir & "\EKK")
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
										EndIf
									Else
										FileDelete(@TempDir & "\EKK")
										$ipid = Run($knoxbypass[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 400!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
									EndIf
								EndIf
							Case 7
								EnableButtons()
						EndSwitch
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[166] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Qualcomm Knox Bypass Old Sec" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoSamsung()
					If $dejaver == 1 then
					Local $adv = MsgBox(32 + 4, "Advertencia / Warning", "Use este metodo para remover Knox Void en los modelos Qcomm tales como S7 y similares en epoca. Desea Continuar?" & @CRLF & @CRLF & " Use this method to remove Knox Void for Qcomm Models such as S7 and similars in time. Do you wish to continue?")
						Switch $adv
							Case 6
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando archivos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Global $ejec = IsCreditNedded2("26", $key)
								Global $var = shori($ejec[1], $key)
								Global $knoxbypassqc = StringSplit($var, "{")
								If Not FileExists(@ScriptDir & "\QCK") Then
									FileInstall("QCK", @ScriptDir & "\QCK", $FC_OVERWRITE)
								EndIf
								$ipid = Run($knoxbypassqc[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
								ProcessWaitClose($ipid)
								FileDelete(@ScriptDir & "\QCK")
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo Permisos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run($knoxbypassqc[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando Exploit..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Global $rootcheck = _Android_HasRootAccess()
								$ipid = Run("adb shell", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
								Sleep(2000)
								If $rootcheck == "True" Then
									StdinWrite($ipid, "su" & @LF )
									Sleep(1000)
								EndIf
								StdinWrite($ipid, $knoxbypassqc[3] & @LF )
								Sleep(6500)
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando comandos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								If Not FileExists(@TempDir & "\QCKK") Then
									FileInstall("QCKK", @TempDir & "\QCKK", $FC_OVERWRITE)
								EndIf
								Global $array = StringSplit($soutput, ":")
								If @error Or UBound($array, $UBOUND_ROWS) <= 1 Or StringInStr($soutput, "Enter") == 0 Then
									FileDelete(@TempDir & "\QCKK")
									$ipid = Run($knoxbypassqc[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error desencriptando llave" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									Global $Rows = UBound($array, $UBOUND_ROWS)
									For $i = 1 to $Rows - 1
										If StringInStr($array[$i], "Error") <> 0 Then
											Global $lallave = 0
											ExitLoop
										ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
											Global $lallave = StringReplace($array[$i], " ", "")
											ExitLoop
										Else
											Global $lallave = 0
										EndIf
									Next
									Global $ahorasitengolallave = _InterpreterKNOXQCOMM($lallave)
									If StringInStr($ahorasitengolallave, "Error") == 0 Then
										Sleep(4000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ver = StdinWrite($ipid, $ahorasitengolallave & @LF )
										Global $star = TimerInit()
										Do
											$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											 If StringInStr($soutput1, "Error") <> 0 Then
												ExitLoop
											 ElseIf StringInStr($soutput1, "Done") <> 0 Then
												ExitLoop
											ElseIf StringInStr($soutput1, "root") <> 0 Then
												ExitLoop
											 EndIf
											 Sleep(100)
										Until TimerDiff($star) > 60000
										ProcessClose($ipid)
										If StringInStr($soutput1, 'Error') <> 0 or $soutput1 == "" then
											FileDelete(@TempDir & "\QCKK")
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No soportado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
										ElseIf StringInStr($soutput1, 'root') <> 0 then
											FileDelete(@TempDir & "\QCKK")
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Necesita ejecutar como root!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
										Else
											FileDelete(@TempDir & "\QCKK")
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
										EndIf
									Else
										FileDelete(@TempDir & "\QCKK")
										$ipid = Run($knoxbypassqc[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 400!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
									EndIf
								EndIf
							Case 7
								EnableButtons()
						EndSwitch
				Else
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[163] Then
				#Region ### START Koda GUI section ### Form=
				Global $SPRCERT = GUICreate("Sprint SPC ", 354, 181, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos ", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("Metodo Modem", 40, 40, 97, 17)
				Global $Method6_0 = GUICtrlCreateRadio("Metodo ADB", 208, 40, 105, 17)
				Global $ButtonStartSPRCert = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPRCERT)
							EnableButtons()
							ExitLoop
						Case $ButtonStartSPRCert
							IF GUICtrlRead($Method1) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung SPC Finder via Modem" & @CRLF)
								$pro = GUICtrlRead($Edit1)
								$dejaver = ReadInfoSamsung()
								If $dejaver == 1 then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Global $ejec = IsCreditNedded2("48", $key)
									Global $var = shori($ejec[1], $key)
									Global $sprintspc = StringSplit($var, "{")
									Global $oldask = ''
									If Not FileExists(@ScriptDir & "\AT") Then
										FileInstall("AT", @ScriptDir & "\AT", $FC_OVERWRITE)
									EndIf
									Sleep(3000)
									$ipid = Run($sprintspc[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;1
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\AT")
									Global $rootcheck = _Android_HasRootAccess()
									If $rootcheck == "False" Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run($sprintspc[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
										ProcessWaitClose($ipid)
										Sleep(2000)
										$ipid = Run($sprintspc[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
										Sleep(2000)
										StdinWrite($ipid, $sprintspc[4] & @LF ) ;4
										Sleep(6500)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run($sprintspc[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
										ProcessWaitClose($ipid)
										Sleep(2000)
										$ipid = Run($sprintspc[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;5
										Sleep(2000)
										StdinWrite($ipid, "su" & @LF )
										Sleep(1000)
										StdinWrite($ipid, $sprintspc[4] & @LF ) ;4
										Sleep(6500)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									EndIf
									If StringInStr($soutput, 'team') <> 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Leyendo..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										StdinWrite($ipid, $sprintspc[6] & @LF ) ;6
										Sleep(2000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando peticion SPC..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										StdinWrite($ipid, $sprintspc[7] & @LF ) ;7
										Sleep(4500)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										If StringInStr($soutput, "+MEIDAUTH:1") <> 0 Then
											Global $ask = StringSplit($soutput, ",")
											Global $Rows = UBound($ask, $UBOUND_ROWS)
											For $i = 1 to $Rows - 1
												If StringInStr($ask[$i], "OK") <> 0 Then
													Global $oldask = StringSplit($ask[$i], @crlf)[1]
													ExitLoop
												EndIf
											Next
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " SPC: " & $oldask & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " SPC: ERROR" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										EndIf
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Failed!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run($sprintspc[8], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;8
										ProcessWaitClose($ipid)
										$ipid = Run("adb reboot", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
								Else
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($Method6_0) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung SPR SPC Finder" & @CRLF)
								$pro = GUICtrlRead($Edit1)
								$dejaver = ReadInfoSamsung()
								If $dejaver == 1 then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If $key == False Then
										WrongKeyNoCred()
										ExitLoop
									ElseIf $key == 0 Then
										Error0002NoCred()
										ExitLoop
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recuperando comandos...." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("5", $key)
										Global $var = shori($ejec[1], $key)
										If $var == 0 Then
											 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error de Conexion" & @CRLF)
											 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											 firma()
											 logs()
											 EnableButtons()
											 ExitLoop
										Else
											MsgBox(64, "MCU Tool", "Por favor marque ##3424#, entre 6 ceros en el dispositivo y preisone OK (el codigo fallara), ahora haga click en Aceptar para continuar" & @CRLF & @CRLF & "Please deal ##3424# and enter 6 ceros in your device then press OK (code will fail), now click OK in softwrae to continue")
											$ipid = Run('adb wait-for-device', "", @SW_HIDE)
											ProcessWaitClose($ipid)
											$ipid = Run($var, "", @SW_HIDE, $stderr_child + $stdout_child)
											ProcessWaitClose($ipid)
											$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											Global $spcarray = StringSplit($soutput, "MSL_Checker:")
											If @error Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por favor intente nuevamente!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											Else
												Global $iRows = UBound($spcarray, $UBOUND_ROWS)
												Global $spc = $spcarray[$iRows - 1]
												Global $spcfinal = StringReplace($spc, " ", "")
												Local $len = StringLen($spcfinal)
												If StringIsDigit($spcfinal) == 1 And $len == 6 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " SPC: " & $spcfinal & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por Favor trate de nuevo!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											EndIf
										EndIf
									EndIf
								Else
									EnableButtons()
									ExitLoop
								EndIf
							Else
								GUIDelete($SPRCERT)
								MsgBox(64, "Error", "Must Select a valid Method")
								EnableButtons()
								ExitLoop
							EndIf
					EndSwitch
				WEnd
			EndIf

		Case $Buttonroot
			Global $ComboRead = GUICtrlRead($Comboroot)
			DisableButtons()
			If $ComboRead == "J327T/T1" Then
				If Not FileExists(@ScriptDir & "\systemroot.zip") Then
					FileInstall("systemroot.zip", @ScriptDir & "\systemroot.zip", $FC_OVERWRITE)
				EndIf
				$ipid = _Zip_UnzipAll(@ScriptDir & "\systemroot.zip", @ScriptDir, 1)
				ProcessWaitClose($ipid)
				FileDelete(@ScriptDir & "\systemroot.zip")
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " J327T/T1 Root" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoSamsung()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Rooteando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb push systemroot /data/local/tmp", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell chmod -R 0777 /data/local/tmp/systemroot", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell setsid su < input", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso completado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					FileDelete(@ScriptDir & "\input")
					DirRemove(@ScriptDir  & "\systemroot", $DIR_REMOVE)
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					FileDelete(@ScriptDir & "\input")
					DirRemove(@ScriptDir  & "\systemroot", $DIR_REMOVE)
					EnableButtons()
				EndIf
			ElseIf $ComboRead == "G532M" Then
				Global $metodo = MsgBox(32 + 3, "MCU Tool", "Elija SI para usar el método en un click, elija NO para usar el método vía TWRP y elija Cancelar para abortar el rooteo " & @CRLF & @CRLF & "Use YES for One Click method, No for TWRP method and Cancel to abort rooting ")
				Switch $metodo
					Case 7
						_GUICtrlEdit_SetText ($Edit1, "")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " G532M Root TWRP" & @CRLF)
						$pro = GUICtrlRead($Edit1)
						$dejaver = ReadInfoSamsung()
						If $dejaver == 1 then
							If Not FileExists(@ScriptDir & "\Resources\G532M.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$sDownloaderTitle = "Descargando Resources"
								$url            = "http://mcu-tool.com/MCU-Tool Resources/G532M/G532M.mcu"
								$file           = "G532M.mcu"
								$name           = "G532M.mcu"
								$dir            = @ScriptDir & "\Resources\"
								_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
							EndIf
							If FileExists(@ScriptDir & "\Resources\G532M.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Recursos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\G532M.mcu", @ScriptDir & "\Resources\G532M.zip", $decrypt, $iAlgorithm)
								ProcessWaitClose($ipid)
								$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\G532M.zip", @ScriptDir, 1)
								ProcessWaitClose($ipid)
								FileDelete(@ScriptDir & "\Resources\G532M.zip")
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en Modo Download..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb reboot download', '', @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(10000)
								Global $dldetect = DetectSamDownload()
								If $dldetect = 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flasheando Recovery..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run('dm flash --RECOVERY recoveryg532.img --no-reboot', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									Sleep(3000)
									MsgBox(64, "MCU Tool", "Retira la bateria y reinicia el dispositivo en modo recovery, una vez dentro presione Aceptar para continuar" & @CRLF & @CRLF & "Take out battery and reboots device to recovery, once in recovery mode press OK to continue")
									Sleep(3000)
									MsgBox(64, "MCU Tool", "Ahora dentro del recovery, dirigete a Wipe/Format Data/ escribe yes terminado el formateo regresa al menu principal del recovery, presiona Aceptar para continuar!" & @CRLF & @CRLF & " Now in recovery go to Wipe/Format Data/ and type yes, after hard reset go to recoverys main menu again abd press ok to continue")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Formateo listo..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									MsgBox(64, "MCU Tool", "Dirigete a Advanced/ Adb Sideload/ Swipe to allow sideload, presiona Aceptar para continuar!" & @CRLF & @CRLF & "Go to Advanced/ Adb Sideload/ Swipe to allow sideload, press OK to continue")
									$ipid = Run('adb sideload first.zip', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Primer paso terminado..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									MsgBox(64, "MCU Tool", "Dirigete a back/ Adb Sideload (otra vez)/ Swipe to allow sideload, presiona Aceptar para continuar!" & @CRLF & @CRLF & "Go to Advanced/ Adb Sideload (again)/ Swipe to allow sideload, press OK to continue")
									$ipid = Run('adb sideload second.zip', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Root Listo!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Sleep(3000)
									$ipid = Run('adb reboot', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									FileDelete(@ScriptDir & "first.zip")
									FileDelete(@ScriptDir & "recoveryg532.img")
									FileDelete(@ScriptDir & "second.zip")
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									FileDelete(@ScriptDir & "first.zip")
									FileDelete(@ScriptDir & "recoveryg532.img")
									FileDelete(@ScriptDir & "second.zip")
									EnableButtons()
								EndIf
							Else
								MsgBox(64, 'MCU Tool', 'Error al descargar recursos' & @CRLF & @CRLF & 'Error downloading resources')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
							EnableButtons()
						EndIf
					Case 6
						_GUICtrlEdit_SetText ($Edit1, "")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " G532M Root un click" & @CRLF)
						$pro = GUICtrlRead($Edit1)
						$dejaver = ReadInfoprocess()
						If $dejaver == 1 then
							If Not FileExists(@ScriptDir & "\Resources\G532.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$sDownloaderTitle = "Descargando Resources"
								$url            = "http://mcu-tool.com/MCU-Tool Resources/G532M/G532.mcu"
								$file           = "G532.mcu"
								$name           = "G532.mcu"
								$dir            = @ScriptDir & "\Resources\"
								_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
							EndIf
							If FileExists(@ScriptDir & "\Resources\G532.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Recursos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\G532.mcu", @ScriptDir & "\Resources\G532.zip", $decrypt, $iAlgorithm)
								ProcessWaitClose($ipid)
								$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\G532.zip", @ScriptDir, 1)
								ProcessWaitClose($ipid)
								FileDelete(@ScriptDir & "\Resources\G532.zip")
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en Modo Download..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb reboot download', '', @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(10000)
								Global $dldetect = DetectSamDownload()
								If $dldetect = 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flasheando Root-Boot..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run('dm flash --BOOT boot532.img', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									Sleep(3000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									RunWait("adb wait-for-device", "", @SW_HIDE)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Rooteando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Sleep(3000)
									$ipid = Run('adb remount', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb push su /system/xbin/su', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb push su /system/bin/su', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb push su /system/xbin/daemonsu', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb shell rm /system/bin/app_process', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb push su /system/bin/app_process', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb push su /system/xbin/sugote', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb push Superuser.apk /system/app/SuperSU/SuperSU.apk', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb push install-recovery.sh /system/etc/install-recovery.sh', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb push supolicy /system/xbin/supolicy', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb push libsupol.so /system/lib/libsupol.so', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb push 99SuperSUDaemon /system/etc/init.d/99SuperSUDaemon', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb shell /system/xbin/su --install', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb shell "echo 1 > /system/etc/.installed_su_daemon"', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo permisos chmod..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run('adb shell chmod 644 /system/app/SuperSU/SuperSU.apk', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb shell chmod 755 /system/etc/install-recovery.sh', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb shell chmod 755 /system/xbin/su', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb shell chmod 755 /system/bin/su', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb shell chmod 755 /system/xbin/daemonsu', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb shell chmod 755 /system/xbin/supolicy', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb shell chmod 755 /system/xbin/sugote', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb shell chmod 644 /system/lib/libsupol.so', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb shell chmod 744 /system/etc/init.d/99SuperSUDaemon', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb shell chmod 644 /system/etc/.installed_su_daemon', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run('adb shell rm /system/app/SecurityLogAgent/SecurityLogAgent.apk', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb shell rm /system/app/SecurityLogAgent/oat/arm/SecurityLogAgent.odex', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run('adb shell reboot', "", @SW_HIDE)
									ProcessWaitClose($ipid)
									$ipid = Run('adb kill-server', "", @SW_HIDE)
									FileDelete(@ScriptDir & "99SuperSUDaemon")
									FileDelete(@ScriptDir & "install-recovery.sh")
									FileDelete(@ScriptDir & "libsupol.so")
									FileDelete(@ScriptDir & "su")
									FileDelete(@ScriptDir & "Superuser.apk")
									FileDelete(@ScriptDir & "supolicy")
									FileDelete(@ScriptDir & "boot532.img")
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									FileDelete(@ScriptDir & "99SuperSUDaemon")
									FileDelete(@ScriptDir & "install-recovery.sh")
									FileDelete(@ScriptDir & "libsupol.so")
									FileDelete(@ScriptDir & "su")
									FileDelete(@ScriptDir & "Superuser.apk")
									FileDelete(@ScriptDir & "supolicy")
									FileDelete(@ScriptDir & "boot532.img")
									EnableButtons()
								EndIf
							Else
								MsgBox(64, 'MCU Tool', 'Error en la descarga de los recursos!' & @CRLF & @CRLF & 'Error downloading resources!')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
							EnableButtons()
						EndIf
					Case 2
						EnableButtons()
				EndSwitch

			ElseIf $ComboRead == 'A105FN U2 Android 9' Or $ComboRead == 'A105F U1 Android 9' Or $ComboRead == 'A105FDD U1 Android 9' Or $ComboRead == 'A105FPUU U3 Android 9' Or $ComboRead == 'A105G U2 Android 9' Or $ComboRead == 'A107F U2 Android 9' Or $ComboRead == 'A202F U2 Android 9' Or $ComboRead == 'A205F U1 Android 9' Or $ComboRead == 'A205F U2 Android 9' Or $ComboRead == 'A205FN U2 Android 9' Or $ComboRead == 'A260F U3 Android 8.1.0' Or $ComboRead == 'A260G U2 Android 8.1.0' Or $ComboRead == 'A305FN U2 Android 9' Or $ComboRead == 'A305GN U2 Android 9' Or $ComboRead == 'A305FDD U1 Android 9' Or $ComboRead == 'A305GT U2 Android 9' Or $ComboRead == 'A310F U5 Android 7' Or $ComboRead == 'A320YD U4 Android 8' Or $ComboRead == 'A500F U1 Android 6' Or $ComboRead == 'A500FU U1 Android 6' Or $ComboRead == 'A505GT U3 Android 9' Or $ComboRead == 'A505YN U2 Android 9' Or $ComboRead == 'A520F U9 Android 8' Or $ComboRead == 'A530F U7 Android 9' Or $ComboRead == 'A600F U4 Android 9' Or $ComboRead == 'A600FN U4 Android 9' Or $ComboRead == 'A600G U5 Android 9' Or $ComboRead == 'A600GN U5 Android 9' Or $ComboRead == 'A605F U4 Android 9' Or $ComboRead == 'A605FN U4 Android 9' Or $ComboRead == 'A700F U2 Android 6' Or $ComboRead == 'A700FD U1 Android 6' Or $ComboRead == 'A705FN U3 Android 9' Or $ComboRead == 'A710F U2 Android 7' Or $ComboRead == 'A720F U8 Android 8' Or $ComboRead == 'A730F U6 Android 9' Or $ComboRead == 'A750F U1 Android 9' Or $ComboRead == 'A750GN U3 Android 9' Or $ComboRead == 'A800F U1 Android 6' Or $ComboRead == 'A805F U2 Android 9' Or $ComboRead == 'A810F U2 Android 8' Or $ComboRead == 'A910F U1 Android 8' Or $ComboRead == 'A920F U1 Android 9' Or $ComboRead == 'C710F U2 Android 8.1.0' Or $ComboRead == 'C5000 U1 Android 8' Or $ComboRead == 'C7000ZH U3 Android 8' Or $ComboRead == 'G532FXX U1 Android 6' Or $ComboRead == 'G610FXX U1 Android 8.1.0' Or $ComboRead == 'G920F U6 Android 7' Or $ComboRead == 'G930F U5 Android 8' Or $ComboRead == 'G960F U6 Android 9' Or $ComboRead == 'G965F U6 Android 9' Or $ComboRead == 'J260M U6 Android 8.1.0' Or $ComboRead == 'J260Y U1 Android 8.1.0' Or $ComboRead == 'J320M U0 Android 5.1.1' Or $ComboRead == 'J330G U3 Android 9' Or $ComboRead == 'J330T U3 Android 8' Or $ComboRead == 'J400F U3 Android 9' Or $ComboRead == 'J400F U4 Android 9' Or $ComboRead == 'J530GM U6 Android 8.1.0' Or $ComboRead == 'J701MT U7 Android 9' Or $ComboRead == 'J710FN U1 Android 7' Or $ComboRead == 'J710GN U4 android 8.1.0' Or $ComboRead == 'J727P U6 Android 8.1.0' Or $ComboRead == 'J730GM U7 Android 9' Or $ComboRead == 'J810Y U4 Android 9' Or $ComboRead == 'M105F U1 Android 8.1.0' Or $ComboRead == 'M105G U1 Android 9' Or $ComboRead == 'M205F U1 Android 8.1.0' Or $ComboRead == 'M205FN U1 Android 9' Or $ComboRead == 'M305F U1 Android 8.1.0' Or $ComboRead == 'N950F U6 Android 9' Then
				Global $sure = MsgBox(64 + 1, "MC-U Tool", "Debe tener OEM Unlock Activado para realizar el proceso. Haga un hard reset desde recovery y sin bootear nuevamente Coloque el dispositivo en modo Download luego presione Aceptar para continuar" & @CRLF & @CRLF & "Must have OEM Unlock ON to do the process. Make a hard reset from recovery an without booting again to system put device in download mode, click OK to continue")
				Switch $sure
					Case 1
						_GUICtrlEdit_SetText ($Edit1, "")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ROOT " & $ComboRead  & @CRLF)
						$pro = GUICtrlRead($Edit1)
						If Not FileExists(@ScriptDir & "\Resources\" & $ComboRead & ".mcu") Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$sDownloaderTitle = "Descargando Resources"
							$url            = "http://mcu-tool.com/MCU-Tool Resources/Root/" & $ComboRead & ".mcu"
							$file           = $ComboRead & ".mcu"
							$name           = $ComboRead & ".mcu"
							$dir            = @ScriptDir & "\Resources\"
							_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
						EndIf
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando archivos..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(3000)
						If FileExists(@ScriptDir & "\boot.img") Then
							FileDelete(@ScriptDir & "\boot.img")
						EndIf
						If FileExists(@ScriptDir & "\Resources\" & $ComboRead & ".mcu") Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Recursos..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\" & $ComboRead & ".mcu", @ScriptDir & "\Resources\" & $ComboRead & ".zip", $decrypt, $iAlgorithm)
							ProcessWaitClose($ipid)
							$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\" & $ComboRead & ".zip", @ScriptDir, 1)
							ProcessWaitClose($ipid)
							FileDelete(@ScriptDir & "\Resources\" & $ComboRead & ".zip")
							Sleep(1000)
							Global $dldetect = DetectSamDownload()
							If $dldetect = 1 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flasheando Root..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$soutput = _RunWaitGet(@ComSpec & ' /k ' & 'dm flash --BOOT boot.img',1,"",@SW_HIDE)
								If StringInStr($soutput, "BOOT upload successful") <> 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									MsgBox(64, "MC-U Tool", " Espere a que su dispositivo Bootee completamente, active depuracion y haga click en Aceptar para continuar" & @CRLF & @CRLF & " Wait till your device boots completly, enable usb debug and Click OK to continue")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Conectando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									BootComplete()
									$dejaver = ReadInfoprocess()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo conectado" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If Not FileExists(@ScriptDir & "\magisk.apk") Then
											FileInstall("magisk.apk", @ScriptDir & "\magisk.apk", 1)
										EndIf
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Magisk..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb install magisk.apk", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Root Listo! Si no encuentra Magisk apk instale manualmente!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reinicindo..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb reboot", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										FileDelete(@ScriptDir & "\magisk.apk")
										FileDelete(@ScriptDir & "\boot.img") ; chequear
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo no detectado instale magisk manager manualmente..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										FileDelete(@ScriptDir & "\boot.img")
									EndIf
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Impsoible Flashear Root!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
									FileDelete(@ScriptDir & "\boot.img")
								EndIf
							Else
								EnableButtons()
								FileDelete(@ScriptDir & "\boot.img")
							EndIf
						Else
							MsgBox(16, "Error", "Achivos de Recursos no encontrados" & @CRLF & @CRLF & 'Error resources not found')
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Case 2
						EnableButtons()
				EndSwitch
			EndIf

		Case $ButtonStartnetwork
			Global $ComboRead = GUICtrlRead($ComboNetwork)
			DisableButtons()
			If $ComboRead == $iArray[143] Then
				#Region ### START Koda GUI section ### Form=
				Global $BBGUI = GUICreate("Baseband/Network Repair", 354, 181, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos ", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("Exynos via ADB Root", 40, 40)
				Global $MEthod2 = GUICtrlCreateRadio("Exynos via Download", 40, 88)
				Global $Method6 = GUICtrlCreateRadio("G928T/T1 Bit 4-5", 208, 40)
				Global $MethodS8 = GUICtrlCreateRadio("Network Fix S8/Note8", 207, 84)
				Global $ButtonStartbbrepair = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($BBGUI)
							EnableButtons()
							ExitLoop

						Case $ButtonStartbbrepair
							_GUICtrlEdit_SetText($Edit1, "")
							Global $showme2 = CredNoLicense("", "")
							If StringIsDigit($showme2) == 1 Or $activo == 1 Then
								If GUICtrlRead($Method1) = 1 Then
									GUIDelete($BBGUI)
									$answer = MsgBox(48 + 1, 'Advertencia!', 'El proceso puede Wipear EFS. Desea Continuar?' & @CRLF & @CRLF & 'Process could wipe EFS. Do you wish to continue?')
									Switch $answer
										Case 1
											_GUICtrlEdit_SetText($Edit1, "")
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung Baseband Repair by ADB" & @CRLF)
											$pro = GUICtrlRead($Edit1)
											$dejaver = ReadInfoSamsung()
											If $dejaver == 1 then
												$ipid = _Android_HasRootAccess()
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												If $ipid == "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												ElseIf $ipid == "True" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Sleep(1000)
													$ipid = Run("adb shell shell su -c id", "")
													ProcessWaitClose($ipid)
													$ipid = Run("adb shell su -c mount -o rw,remount /system", "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run("adb shell su -c mount -o rw,remount /data", "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run("adb shell su -c mount -o rw,remount /", "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run("adb shell su -c mount -o rw,remount /", "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run("adb shell su -c mount -o remount,rw /efs", "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run("adb shell su -c chmod 777 /efs", "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run("adb shell su -c rm -rf /efs", "", @SW_HIDE)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("adb reboot", "", @SW_HIDE)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											Else
												EnableButtons()
												ExitLoop
											EndIf
										Case 2
											EnableButtons()
											ExitLoop
									EndSwitch
								ElseIf GUICtrlRead($MEthod2) = 1 Then
									GUIDelete($BBGUI)
									If Not FileExists(@ScriptDir & "\dm.exe") Then
										FileInstall("dm.exe", @ScriptDir & "\dm.exe", 1)
									EndIf
									If Not FileExists(@ScriptDir & "\exDownload.dll") Then
										FileInstall("exDownload.dll", @ScriptDir & "\exDownload.dll", 1)
									EndIf
									_GUICtrlEdit_SetText ($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung Baseband Repair by Download" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									Sleep(1000)
									Global $dldetect = DetectSamDownload()
									If $dldetect = 1 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
										Sleep(1000)
										$ipid = Run('dm flash --EFS exDownload.dll', '', @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
										$variable = CheckSuccessDownload()
										If $variable == '' Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Fallido!" & @CRLF)
											Sleep(500)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado" & @CRLF)
											FileDelete(@ScriptDir & "\dm.exe")
											FileDelete(@ScriptDir & "\exDownload.dll")
											FileDelete(@ScriptDir & "\check.txt")
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										ElseIf $variable <> '' Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado" & @CRLF)
											FileDelete(@ScriptDir & "\dm.exe")
											FileDelete(@ScriptDir & "\exDownload.dll")
											FileDelete(@ScriptDir & "\check.txt")
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										EndIf
									Else
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf GUICtrlRead($Method6) = 1 Then
									GUIDelete($BBGUI)
									_GUICtrlEdit_SetText ($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Baseband IMEI Repair G928T U4/5" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										$ipid = Run("adb shell getprop ro.bootloader", "", @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										$bit = StringRight($soutput, 5)
										$lastbit = StringLeft($bit, 1)
										If $lastbit == '4' Then
											If Not FileExists(@ScriptDir & "\Resources\G928TU4.mcu") Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$sDownloaderTitle = "Descargando Resources"
												$url            = "http://mcu-tool.com/MCU-Tool Resources/G928T/G928TU4.mcu"
												$file           = "G928TU4.mcu"
												$name           = "G928TU4.mcu"
												$dir            = @ScriptDir & "\Resources\"
												_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
											EndIf
											If FileExists(@ScriptDir & "\Resources\G928TU4.mcu") Then
												If FileExists(@ScriptDir & "\modem.bin") Then
													FileDelete(@ScriptDir & "\modem.bin")
												EndIf
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Resources..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\G928TU4.mcu", @ScriptDir & "\Resources\G928TU4.zip", $decrypt, $iAlgorithm)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\G928TU4.zip", @ScriptDir, 1)
												ProcessWaitClose($ipid)
												FileDelete(@ScriptDir & "\Resources\G928TU4.zip")
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo Download, por favor espere..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb reboot download", "", @SW_HIDE)
												ProcessWaitClose($ipid)
												Sleep(10000)
												Global $dldetect = DetectSamDownload()
												If $dldetect = 1 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run('dm flash --RADIO modem.bin', '', @SW_HIDE)
													ProcessWaitClose($ipid)
													FileDelete(@ScriptDir & "\modem.bin")
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													FileDelete(@ScriptDir & "\modem.bin")
													EnableButtons()
													ExitLoop
												EndIf
											Else
												MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											EndIf
										ElseIf $lastbit == '5' Then
											If Not FileExists(@ScriptDir & "\Resources\G928TU5.mcu") Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$sDownloaderTitle = "Descargando Resources"
												$url            = "http://mcu-tool.com/MCU-Tool Resources/G928T/G928TU5.mcu"
												$file           = "G928TU5.mcu"
												$name           = "G928TU5.mcu"
												$dir            = @ScriptDir & "\Resources\"
												_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
											EndIf
											If FileExists(@ScriptDir & "\Resources\G928TU5.mcu") Then
												If FileExists(@ScriptDir & "\modem.bin") Then
													FileDelete(@ScriptDir & "\modem.bin")
												EndIf
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Resources..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\G928TU5.mcu", @ScriptDir & "\Resources\G928TU5.zip", $decrypt, $iAlgorithm)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\G928TU5.zip", @ScriptDir, 1)
												ProcessWaitClose($ipid)
												FileDelete(@ScriptDir & "\Resources\G928TU5.zip")
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo Download, por favor espere..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb reboot download", "", @SW_HIDE)
												ProcessWaitClose($ipid)
												Sleep(10000)
												Global $dldetect = DetectSamDownload()
												If $dldetect = 1 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run('dm flash --RADIO modem.bin', '', @SW_HIDE)
													ProcessWaitClose($ipid)
													FileDelete(@ScriptDir & "\modem.bin")
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													FileDelete(@ScriptDir & "\modem.bin")
													EnableButtons()
													ExitLoop
												EndIf
											Else
												MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											EndIf
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Binario no soportado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										EndIf
									Else
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf GUICtrlRead($MethodS8) = 1 Then
									GUIDelete($BBGUI)
									_GUICtrlEdit_SetText ($Edit1, "")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Network Fix S8/S8+/Note 8" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										Sleep(1000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run('adb shell pm uninstall -k --user 0 com.sec.android.AutoPreconfig', "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run('adb reboot', "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										EnableButtons()
										ExitLoop
									EndIf
								Else
									GUIDelete($BBGUI)
									MsgBox(64, "Error", "Must Select a valid Method")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf $showme2 = True Then
								MsgBox(16, "Error", "Operacion Cencelada")
							Else
								MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
							EndIf
					EndSwitch
				WEnd
			ElseIf $ComboRead == $iArray[144] Then
				#Region ### START Koda GUI section ### Form=
				Global $Ixxx = GUICreate("IMEI Repair", 319, 277, -1, -1)
				Global $GroupIMEI = GUICtrlCreateGroup("IMEI Fix", 8, 8, 305, 257)
				Global $IMEI = GUICtrlCreateInput("", 64, 128, 185, 21, BitOR($GUI_SS_DEFAULT_INPUT,$ES_NUMBER))
				GUICtrlSetLimit($IMEI, 14)
				Global $Luhn = GUICtrlCreateInput("", 264, 128, 33, 21, BitOR($GUI_SS_DEFAULT_INPUT,$ES_READONLY))
				Global $CheckImei = GUICtrlCreateButton("Check IMEI", 24, 224, 75, 25)
				Global $Fix = GUICtrlCreateButton("Fix", 204, 224, 75, 25)
				Global $GroupIMEIModel = GUICtrlCreateGroup("Model", 40, 32, 225, 65)
				Global $ComboIMEI = GUICtrlCreateCombo("", 64, 56, 177, 25)
				GUICtrlSetData(-1, "SM-T111|SM-T111M|SM-T111NQ|SM-T113NU|SM-T116|SM-T116BU|SM-T116NU|SM-T116NY|SM-T113|SM-T280|SM-T280Q|SM-T561|SM-T562|SM-T561Y|SM-T561Y|SM-T561Y|SM-J021|SM-J100H|SM-J100ML|SM-J105B|SM-J105H|SM-J106B|SM-J106H|SM-J110H|SM-J110L|SM-J120H|SM-J200H|SM-J320H|SM-J320G|SM-G110B|SM-G110H|SM-G110M|SM-G130BT|SM-G130BU|SM-G130E|SM-G130H|SM-G130HN|SM-G130M|SM-G130U|SM-G313H|SM-G313HZ|SM-G313ML|SM-G313U|SM-G316H|SM-G316HU|SM-G316M|SM-G316ML|SM-G316MY|SM-G318H|SM-G318HZ|SM-G318ML|SM-G318MZ|SM-G355H|SM-G355HN|SM-G355HQ|SM-G355M|SM-G360H|SM-G360HU|SM-G361H|SM-G361HU|SM-G531H|GT-S7262|GT-S5280|GT-S5282|GT-I9060I|GT-I9060C|GT-I9060M")
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				Global $CheckboxIMEI1 = GUICtrlCreateCheckbox("", 32, 128, 25, 17)
				Global $InputIMEI2 = GUICtrlCreateInput("", 64, 176, 185, 21, BitOR($GUI_SS_DEFAULT_INPUT,$ES_NUMBER))
				GUICtrlSetLimit($InputIMEI2, 14)
				Global $InputLhun2 = GUICtrlCreateInput("", 264, 176, 33, 21, BitOR($GUI_SS_DEFAULT_INPUT,$ES_READONLY))
				Global $CheckboxIMEI2 = GUICtrlCreateCheckbox("", 32, 176, 25, 17)
				Global $Ixx = GUICtrlCreateLabel("IMEI 1", 24, 104, 35, 17)
				Global $ixx2 = GUICtrlCreateLabel("IMEI 2", 21, 154, 35, 17)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($Ixxx)
							EnableButtons()
							ExitLoop

						Case $CheckImei
							If _IsChecked($CheckboxIMEI2) And _IsChecked($CheckboxIMEI1) Then
									Local $quseyo = GUICtrlRead($IMEI)
									Local $uuu = StringLen($quseyo)
									Local $quseyo1 = GUICtrlRead($InputIMEI2)
									Local $uuuu= StringLen($quseyo1)
									If $uuu == '14' and $uuuu == '14' Then
										Global $show = GUICtrlRead($IMEI)
										$ujm = Luhn($show)
										GUICtrlSetData($Luhn, $ujm)
										Global $show1 = GUICtrlRead($InputIMEI2)
										$ujmm = Luhn($show1)
										GUICtrlSetData($InputLhun2, $ujmm)
									Else
										MsgBox(48, "Error", "Debe introducir solo los primeros 14 numeros del IMEI" & @CRLF & @CRLF & 'Must introduce only the first 14 nubers from IMEI')
									EndIf
							ElseIf _IsChecked($CheckboxIMEI1) Then
								Local $quseyo = GUICtrlRead($IMEI)
								Local $uuu = StringLen($quseyo)
								If $uuu == '14' Then
									Global $show = GUICtrlRead($IMEI)
									$ujm = Luhn($show)
									GUICtrlSetData($Luhn, $ujm)
								Else
									MsgBox(48, "Error", "Debe introducir solo los primeros 14 numeros del IMEI" & @CRLF & @CRLF & 'Must introduce only the first 14 numbres from IMEI')
								EndIf
							ElseIf _IsChecked($CheckboxIMEI2) Then
								Local $quseyo1 = GUICtrlRead($InputIMEI2)
								Local $uuuu= StringLen($quseyo1)
								If $uuuu == '14' Then
									Global $show1 = GUICtrlRead($InputIMEI2)
									$ujmm = Luhn($show1)
									GUICtrlSetData($InputLhun2, $ujmm)
								Else
									MsgBox(48, "Error", "Debe introducir solo los primeros 14 numeros del IMEI" & @CRLF & @CRLF & 'Must introduce only the first 14 numbers from IMEI')
								EndIf
							Else
								MsgBox(48, "Error", "Por Favor seleccione un IMEI a reparar" & @CRLF & @CRLF & 'Please select IMEI to repair')
							EndIf
						Case $Fix
							Global $showme2 = CredNoLicense("", "")
							If StringIsDigit($showme2) == 1 Or $activo == 1 Then
								If GUICtrlRead($ComboIMEI) == '' Then
									MsgBox(48, "Error", "Por Favor seleccione un modelo de la lista!" & @CRLF & @CRLF & 'Please select a model from the list')
								Else
									Global $check1 = GUICtrlRead($Luhn)
									Global $check2 = GUICtrlRead($InputLhun2)
									If $check1 <> '' And $check2 == '' Then
										GUIDelete($Ixxx)
										_GUICtrlEdit_SetText ($Edit1, "")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparacion de IMEI" & @CRLF)
										$pro = GUICtrlRead($Edit1)
										$dejaver = ReadInfoSamsung()
										If $dejaver == 1 then
											$ipid = _Android_HasRootAccess()
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											If $ipid == "False" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
											ElseIf $ipid == "True" Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run('adb shell su -c dd if=/efs/imei/imeino1 of=/sdcard/imeino1', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												$ipid = Run('adb pull /sdcard/imeino1', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando IMEI..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												If FileExists(@ScriptDir & "\imeino1") Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recuperando IMEI..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run('adb shell su -c echo ' & $quseyo &  $ujm & ' > /sdcard/imeino1', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI a Reparar: " & $quseyo &  $ujm  & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run('adb shell su -c dd if=/sdcard/imeino1 of=/efs/imei/imeino1', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Parcheando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run('adb shell su -c chmod 0711 /efs/imei', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb shell su -c chmod 0711 /efs/imei/msl_addr', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb shell su -c chmod radio.radio /efs/imei/msl_addr', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb shell su -c chmod 0711 /efs/imei/imeino1', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb shell su -c chmod radio.radio /efs/imei/imeino1', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run('adb reboot', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Esperando dispositivo..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													RunWait('adb wait-for-device', '', @SW_HIDE)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectado" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Sleep(2000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run('adb shell rm -f /sdcard/imeino1', '', @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb shell rm /sdcard/imeino1', '', @SW_HIDE)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													FileDelete(@ScriptDir & "\imeino1")
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No soportado para esta operacion." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											EndIf
										Else
											EnableButtons()
											ExitLoop
										EndIf
									ElseIf $check2 <> '' And $check1 == '' Then
										GUIDelete($Ixxx)
										_GUICtrlEdit_SetText ($Edit1, "")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparacion de IMEI" & @CRLF)
										$pro = GUICtrlRead($Edit1)
										$dejaver = ReadInfoSamsung()
										If $dejaver == 1 then
											$ipid = _Android_HasRootAccess()
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											If $ipid == "False" Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											ElseIf $ipid == "True" Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run('adb shell su -c dd if=/efs/imei/imeino2 of=/sdcard/imeino2', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												$ipid = Run('adb pull /sdcard/imeino2', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando IMEI..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												If FileExists(@ScriptDir & "\imeino2") Then
													FileDelete(@ScriptDir & "\imeino2")
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recuperando IMEI..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run('adb shell su -c echo ' & $quseyo1 &  $ujmm & ' > /sdcard/imeino2', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI a Reparar: " & $quseyo1 &  $ujmm  & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run('adb shell su -c dd if=/sdcard/imeino2 of=/efs/imei/imeino2', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Parcheando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run('adb shell su -c chmod 0711 /efs/imei', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb shell su -c chmod 0711 /efs/imei/msl_addr', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb shell su -c chmod radio.radio /efs/imei/msl_addr', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb shell su -c chmod 0711 /efs/imei/imeino2', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb shell su -c chmod radio.radio /efs/imei/imeino2', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run('adb reboot', "", @SW_HIDE)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Esperando dispositivo..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													RunWait('adb wait-for-device', '', @SW_HIDE)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectado" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Sleep(2000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run('adb shell rm -f /sdcard/imeino2', '', @SW_HIDE)
													ProcessWaitClose($ipid)
													$ipid = Run('adb shell rm /sdcard/imeino2', '', @SW_HIDE)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 no encontrado." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											EndIf
										Else
											EnableButtons()
											ExitLoop
										EndIf
									ElseIf $check1 <> '' And $check2 <> '' Then
										GUIDelete($Ixxx)
										_GUICtrlEdit_SetText ($Edit1, "")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparacion de IMEI" & @CRLF)
										$pro = GUICtrlRead($Edit1)
										$dejaver = ReadInfoSamsung()
										If $dejaver == 1 then
											$ipid = _Android_HasRootAccess()
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											If $ipid == "False" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
											ElseIf $ipid == "True" Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run('adb shell su -c dd if=/efs/imei/imeino1 of=/sdcard/imeino1', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												$ipid = Run('adb shell su -c dd if=/efs/imei/imeino2 of=/sdcard/imeino2', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												$ipid = Run('adb pull /sdcard/imeino1', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando IMEI..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												If FileExists(@ScriptDir & "\imeino1") Then
												FileDelete(@ScriptDir & "\imeino1")
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recuperando IMEI 1..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run('adb shell su -c echo ' & $quseyo &  $ujm & ' > /sdcard/imeino1', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recuperando IMEI 2..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run('adb shell su -c echo ' & $quseyo1 &  $ujmm & ' > /sdcard/imeino2', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 1 a Reparar: " & $quseyo &  $ujm  & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 a Reparar: " & $quseyo1 &  $ujmm  & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run('adb shell su -c dd if=/sdcard/imeino1 of=/efs/imei/imeino1', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												$ipid = Run('adb shell su -c dd if=/sdcard/imeino2 of=/efs/imei/imeino2', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Parcheando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run('adb shell su -c chmod 0711 /efs/imei', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												$ipid = Run('adb shell su -c chmod 0711 /efs/imei/msl_addr', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												$ipid = Run('adb shell su -c chmod radio.radio /efs/imei/msl_addr', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												$ipid = Run('adb shell su -c chmod 0711 /efs/imei/imeino1', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												$ipid = Run('adb shell su -c chmod 0711 /efs/imei/imeino2', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												 $ipid = Run('adb shell su -c chmod radio.radio /efs/imei/imeino1', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												$ipid = Run('adb shell su -c chmod radio.radio /efs/imei/imeino2', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run('adb reboot', "", @SW_HIDE)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Esperando dispositivo..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												RunWait('adb wait-for-device', '', @SW_HIDE)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectado" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(2000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run('adb shell rm -f /sdcard/imeino1', '', @SW_HIDE)
												ProcessWaitClose($ipid)
												$ipid = Run('adb shell rm -f /sdcard/imeino2', '', @SW_HIDE)
												ProcessWaitClose($ipid)
												$ipid = Run('adb shell rm /sdcard/imeino1', '', @SW_HIDE)
												ProcessWaitClose($ipid)
												$ipid = Run('adb shell rm /sdcard/imeino2', '', @SW_HIDE)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No soportado para esta operacion." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											EndIf
											EndIf
										Else
											EnableButtons()
											ExitLoop
										EndIf
									Else
										MsgBox(48, 'Error', 'Debe Chequear IMEI Primero!' & @CRLF & @CRLF & 'Must check IMEI first')
									EndIf
								EndIf
							ElseIf $showme2 = True Then
								MsgBox(16, "Error", "Operacion Cencelada")
							Else
								MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
							EndIf
					EndSwitch
				WEnd
			ElseIf $ComboRead == $iArray[145] Then
				#Region ### START Koda GUI section ### Form=
				Global $Ixxx = GUICreate("Qcomm IMEI Repair", 321, 275, -1, -1)
				Global $GroupIMEI = GUICtrlCreateGroup("IMEI Fix", 8, 0, 305, 265)
				Global $IMEI = GUICtrlCreateInput("", 64, 120, 185, 21, BitOR($GUI_SS_DEFAULT_INPUT,$ES_NUMBER))
				GUICtrlSetLimit($IMEI, 14)
				Global $Luhn = GUICtrlCreateInput("", 264, 120, 33, 21, BitOR($GUI_SS_DEFAULT_INPUT,$ES_READONLY))
				Global $CheckImei = GUICtrlCreateButton("Check IMEI", 24, 216, 75, 25)
				Global $Fix = GUICtrlCreateButton("Fix", 220, 216, 75, 25)
				Global $GroupIMEIModel = GUICtrlCreateGroup("Model", 40, 24, 225, 65)
				Global $ComboIMEI = GUICtrlCreateCombo("", 64, 48, 177, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL,$WS_VSCROLL))
				GUICtrlSetData(-1, "GENERIC QCOM NO CERT MODEL|SGH-T999|SGH-I747|SGH-N604 (SC-06D)|SCH-J021 (SCL21)|SCH-R530|SCH-I535|SCH-S960L|SCH-S986C|GT-I9301L|SHV-E330K/L/S|GT-I9505|GT-I9506|GT-I9505G|SGH-I337|SGH-M919|SCH-I545|SPH-L720|SCH-R970|GT-I9508|SCH-N045 (SC-04E)|SGH-I337M|SGH-M919V|GT-I9150|GT-I9152|GT-I9200|GT-I9205")
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				Global $CheckboxIMEI1 = GUICtrlCreateCheckbox("", 32, 120, 25, 17)
				Global $Ixx = GUICtrlCreateLabel(" IMEI 1", 24, 96, 35, 17)
				Global $Label1 = GUICtrlCreateLabel("IMEI 2", 24, 152, 35, 17)
				Global $Checkbox1 = GUICtrlCreateCheckbox("", 29, 180, 25, 17)
				Global $Input1 = GUICtrlCreateInput("", 64, 176, 185, 21, BitOR($GUI_SS_DEFAULT_INPUT,$ES_NUMBER))
				GUICtrlSetLimit($Input1, 14)
				Global $Input2 = GUICtrlCreateInput("", 264, 176, 33, 21, BitOR($GUI_SS_DEFAULT_INPUT,$ES_READONLY))
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($Ixxx)
							EnableButtons()
							ExitLoop

						Case $CheckImei
							If _IsChecked($CheckboxIMEI1) Then
								Local $quseyo = GUICtrlRead($IMEI)
								Local $uuu = StringLen($quseyo)
								If $uuu == '14' Then
									Global $show = GUICtrlRead($IMEI)
									Global $ujm = Luhn($show)
									GUICtrlSetData($Luhn, $ujm)
								Else
									MsgBox(48, "Error", "Debe introducir solo los primeros 14 numeros del IMEI" & @CRLF & @CRLF & 'Must introduce only the first 14 numbers from IMEI')
								EndIf
							EndIf
							If _IsChecked($Checkbox1) Then
								Local $quseyo1 = GUICtrlRead($Input1)
								Local $uuuu = StringLen($quseyo1)
								If $uuuu == '14' Then
									Global $ujm1 = Luhn($quseyo1)
									GUICtrlSetData($Input2, $ujm1)
								Else
									MsgBox(48, "Error", "Debe introducir solo los primeros 14 numeros del IMEI" & @CRLF & @CRLF & 'Must introduce only the first 14 numbers from IMEI')
								EndIf
							EndIf
							If Not _IsChecked($Checkbox1) And Not _IsChecked($CheckboxIMEI1) Then
								MsgBox(48, "Error", "Por Favor seleccione un IMEI a reparar" & @CRLF & @CRLF & 'Please select IMEI to repair')
							EndIf

						Case $Fix
							Global $showme2 = CredNoLicense("", "")
							If StringIsDigit($showme2) == 1 Or $activo == 1 Then
								Global $newaks = ''
								If GUICtrlRead($ComboIMEI) == '' Then
									MsgBox(48, "Error", "Por Favor seleccione un modelo de la lista!" & @CRLF & @CRLF & 'Please select a model from the list')
								Else
									Global $check1 = GUICtrlRead($Luhn)
									Global $check2 = GUICtrlRead($Input2)
									If $check1 <> '' Then
										Global $ime = GUICtrlRead($IMEI)
										Global $ii = GUICtrlRead($Luhn)
										Global $imei2 = GUICtrlRead($Input1)
										Global $luhn2 = GUICtrlRead($Input2)
										GUIDelete($Ixxx)
										_GUICtrlEdit_SetText ($Edit1, "")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " QCOM IMEI Fix NO Cert Model" & @CRLF)
										$pro = GUICtrlRead($Edit1)
										$dejaver = ReadInfoSamsung()
										If $dejaver == 1 then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Global $ejec = IsCreditNedded2("35", $key)
											Global $var = shori($ejec[1], $key)
											Global $writeimeiqc = StringSplit($var, "{")
											If Not FileExists(@ScriptDir & "\AT") Then
												FileInstall("AT", @ScriptDir & "\AT", $FC_OVERWRITE)
											EndIf
											Sleep(3000)
											$ipid = Run($writeimeiqc[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
											ProcessWaitClose($ipid)
											$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											FileDelete(@ScriptDir & "\AT")
											Global $rootcheck = _Android_HasRootAccess()
											If $rootcheck ==  "False" Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($writeimeiqc[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												$ipid = Run($writeimeiqc[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												Sleep(1000)
												StdinWrite($ipid, $writeimeiqc[4] & @LF )
												Sleep(4500)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($writeimeiqc[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												$ipid = Run($writeimeiqc[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												Sleep(1000)
												StdinWrite($ipid, "su" & @LF )
												Sleep(1000)
												StdinWrite($ipid, $writeimeiqc[4] & @LF )
												Sleep(4500)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											EndIf
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando IMEI..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											StdinWrite($ipid, $writeimeiqc[6] & @LF )
											Sleep(4500)
											$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											If StringInStr($soutput, "+MSLSECUR:1,0000000000") <> 0 Then
												Global $msl = ""
											Else
												Global $msl = " Need to Reset MSL"
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											EndIf
											StdinWrite($ipid, $writeimeiqc[7] & @LF )
											Sleep(4500)
											$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											If StringInStr($soutput, "+MSLSECUR:2,OK") <> 0 Then
												Global $msl2 = " MSL: OK"
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl2 & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											ElseIf StringInStr($soutput, "NG") <> 0 Then
												Global $msl2 = " MSL: NG"
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl2 & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											EndIf
											StdinWrite($ipid, $writeimeiqc[8] & @LF )
											Sleep(4500)
											$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											If StringInStr($soutput, "NG") <> 0 Then
												Global $ask = " ASKEED: NG"
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $ask & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											ElseIf StringInStr($soutput, "+AKSEEDNO:1,") <> 0 Then
												Global $ask = StringSplit($soutput, ",")
												Global $Rows = UBound($ask, $UBOUND_ROWS)
												For $i = 1 to $Rows - 1
													If StringInStr($ask[$i], "OK") <> 0 And StringInStr($soutput, "-") <> 0 Then
														Global $oldask = StringSplit($ask[$i], @crlf)[1]
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: " & $oldask & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														ExitLoop
													EndIf
												Next
												If StringInStr($oldask, "-") <> 0 Then
													Global $newaks = AKS($oldask)
												EndIf
											EndIf
											If $newaks <> '' Then
												StdinWrite($ipid, $writeimeiqc[9] & $newaks & @LF )
												Sleep(4500)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												If StringInStr($soutput, "+AKSEEDNO:0,OK") <> 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NEW ASKEED: "& $newaks & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($soutput, "NG") <> 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: Failed " & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error while wrinting new AKSEED" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												EndIf
												StdinWrite($ipid, $writeimeiqc[10] & $ime & $ii & @LF )
												Sleep(4500)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												If StringInStr($soutput, "+IMEITEST:2,OK") <> 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: OK" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($soutput, "NG") <> 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed " & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error while wrinting IMEI" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												EndIf
												If $check2 <> '' Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo IMEI 2..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													StdinWrite($ipid, $writeimeiqc[11] & $imei2 & $luhn2 & @LF )
													Sleep(4500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													If StringInStr($soutput, "+IMEITEST:4,OK") <> 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 WRITE: OK" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													ElseIf StringInStr($soutput, "NG") <> 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 WRITE: Failed " & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error while wrinting IMEI 2" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													EndIf
												EndIf
												StdinWrite($ipid, "exit" & @LF )
												Sleep(1000)
												StdinWrite($ipid, "exit" & @LF )
												Sleep(1000)
												ProcessClose($ipid)
												$ipid = Run($writeimeiqc[12], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error calculating AKSEED..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($writeimeiqc[12], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											EndIf
										Else
											EnableButtons()
											ExitLoop
										EndIf
									ElseIf $check1 == ''  And $check2 <> '' Then
										MsgBox(48, 'Error', 'Debe Reparar IMEI 1 para reparar IMEI 2' & @CRLF & @CRLF & 'Must Repair IMEI 1 to Repair IMEI 2')
									Else
										MsgBox(48, 'Error', 'Debe Chequear IMEI Primero!' & @CRLF & @CRLF & 'Must check imei first!')
									EndIf
								EndIf
							ElseIf $showme2 = True Then
								MsgBox(16, "Error", "Operacion Cencelada")
							Else
								MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
							EndIf
					EndSwitch
				WEnd
			ElseIf $ComboRead == $iArray[146] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Save Sec (Adb Root)" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoSamsung()
					If $dejaver == 1 then
						$ipid = _Android_HasRootAccess()
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If $ipid == "False" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
							FileDelete(@ScriptDir & "\tar.exe")
						ElseIf $ipid == "True" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Sleep(1000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Leyendo Sec..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run('adb shell su -c rm /data/local/tmp/temp_file.dat', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb shell su -c dd if=/dev/block/mmcblk0p14 of=/data/local/tmp/temp_file.dat', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb shell su -c chmod 0755 /data/local/tmp/temp_file.dat', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb pull /data/local/tmp/temp_file.dat nvrebuild1.bin', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb shell su -c rm /data/local/tmp/temp_file.dat', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb shell su -c dd if=/dev/block/mmcblk0p15 of=/data/local/tmp/temp_file.dat', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb shell su -c chmod 0755 /data/local/tmp/temp_file.dat', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb pull /data/local/tmp/temp_file.dat nvrebuild2.bin', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando SEC..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = FileMove(@ScriptDir & "\nvrebuild1.bin", @TempDir & "\nvrebuild1.bin", $FC_OVERWRITE)
							ProcessWaitClose($ipid)
							$ipid = FileMove(@ScriptDir & "\nvrebuild2.bin", @TempDir & "\nvrebuild2.bin", $FC_OVERWRITE)
							ProcessWaitClose($ipid)
							If FileExists(@TempDir & "\nvrebuild1.bin") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Procesando Datos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								FileChangeDir(@TempDir)
								ShellExecuteWait(@TempDir & '\SEC.bat', '', '', '', @SW_HIDE)
								ProcessClose("tar.exe")
								FileChangeDir(@ScriptDir)
								FileDelete(@TempDir & "\nvrebuild1.bin")
								FileDelete(@TempDir & "\nvrebuild2.bin")
								If FileExists(@TempDir & "\SEC.tar") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
									ProcessWaitClose($ipid)
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									FileMove(@TempDir & "\SEC.tar", @MyDocumentsDir & "\Backup_MCU\SECURITY\" & $soutput & "_" & @HOUR & @MIN & @MDAY & @MON & @YEAR & "_SEC_by_MCU.tar", $FC_OVERWRITE + $FC_CREATEPATH)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Backup guardado en " & @MyDocumentsDir & "\Backup_MCU\SECURITY\" & $soutput & "_" & @HOUR & @MIN & @MDAY & @MON & @YEAR & "_SEC_by_MCU.tar" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Modelo no soportado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					Else
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[147] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Save EFS (Adb Root)" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoSamsung()
					If $dejaver == 1 then
						$ipid = _Android_HasRootAccess()
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If $ipid == "False" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						ElseIf $ipid == "True" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Sleep(1000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Leyendo EFS..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run('adb shell su -c rm /data/local/tmp/efs.img', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb shell su -c cat /sys/block/mmcblk0/sda3/', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb shell su -c make_ext4fs -s -l 20M /data/local/tmp/efs.img /efs', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb shell su -c chmod 0755 /data/local/tmp/efs.img', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('adb pull /data/local/tmp/efs.img efs.img', "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = FileMove(@ScriptDir & "\efs.img", @TempDir & "\efs.img", $FC_OVERWRITE)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando EFS..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If FileExists(@TempDir & "\efs.img") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Procesando Datos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								FileChangeDir(@TempDir)
								ShellExecuteWait(@TempDir & '\EFS.bat', '', '', '', @SW_HIDE)
								ProcessClose("tar.exe")
								FileChangeDir(@ScriptDir)
								FileDelete(@TempDir & "\efs.img")
								If FileExists(@TempDir & "\EFS.tar") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
									ProcessWaitClose($ipid)
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									FileMove(@TempDir & "\EFS.tar", @MyDocumentsDir & "\Backup_MCU\EFS\" & $soutput & "_" & @HOUR & @MIN & @MDAY & @MON & @YEAR & "_EFS_by_MCU.tar", $FC_OVERWRITE + $FC_CREATEPATH)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Backup guardado en " & @MyDocumentsDir & "\Backup_MCU\EFS\" & $soutput & "_" & @HOUR & @MIN & @MDAY & @MON & @YEAR & "_EFS_by_MCU.tar" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Modelo no soportado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					Else
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[148] Then
				#Region ### START Koda GUI section ### Form=
				Global $SPRCERT = GUICreate("Exynos Cert ", 354, 181, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos ", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("ADB Metodo 1", 40, 40, 97, 17)
				Global $MEthod2 = GUICtrlCreateRadio("ADB Metodo 2", 40, 88, 113, 17)
				Global $Modem = GUICtrlCreateRadio("Metodo Modem", 208, 40, 105, 17)
				Global $ButtonStartSPRCert = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPRCERT)
							EnableButtons()
							ExitLoop
						Case $ButtonStartSPRCert
							IF GUICtrlRead($Method1) = 1 Then
								GUIDelete($SPRCERT)
								Global $newaks = ''
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("WriteCertExy", "101")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exynos Cert Write ADB M1" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("28", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertexyy = StringSplit($var, "{")
										If Not FileExists(@ScriptDir & "\EATSH") Then
											FileInstall("EATSH", @ScriptDir & "\EATSH", $FC_OVERWRITE)
										EndIf
										Sleep(3000)
										$ipid = Run($writecertexyy[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										FileDelete(@ScriptDir & "\EATSH")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											FileDelete(@ScriptDir & "\EATSH")
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "101")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $certstring = FileRead($certselect)
											$linea = _FileCountLines($certselect)
											$array1 = FileReadToArray($certselect)
											If @error Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Cert dañado o incorrecto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "101")
												refund(GUICtrlRead($Edit1))
												EnableButtons()
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Knox..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb shell getprop ro.boot.warranty_bit", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												If $soutput == "1" Then
													Global $rootcheck = _Android_HasRootAccess()
													If $rootcheck ==  "False" Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Knox Void..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Bypassing..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertexyy[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														$ipid = Run($writecertexyy[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Sleep(10000)
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Knox Void..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Bypassing..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertexyy[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														$ipid = Run($writecertexyy[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Sleep(10000)
													EndIf
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Knox Pass..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando..." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												EndIf
												RunWait("sdb wait-for-device", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Global $rootcheck = _Android_HasRootAccess()
												If $rootcheck == "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertexyy[6], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertexyy[7], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(2000)
													StdinWrite($ipid, $writecertexyy[8] & @LF )
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertexyy[9], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertexyy[7], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(2000)
													StdinWrite($ipid, "su" & @LF )
													Sleep(1000)
													StdinWrite($ipid, $writecertexyy[11] & @LF )
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												EndIf
												Sleep(1000)
												If StringInStr($soutput, 'team') <> 0 Then
													If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertexyy[12], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "101")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Global $string2 = GetImei($array1, $linea)
														If $string2 == "error 02" Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															$ipid = Run($writecertexyy[12], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "101")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															Global $string3 = StringLeft($string2, 14)
															Global $string1 = Sign($array1, $linea)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Global $ejec = IsCreditNedded2("29", $key)
															Global $var = shori($ejec[1], $key)
															Global $writecertexy = StringSplit($var, "{")
															StdinWrite($ipid, $writecertexy[1] & @LF )
															Sleep(4500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput, "+MSLSECUR:1,0000000000") <> 0 Then
																Global $msl = ""
															Else
																Global $msl = " Need to Reset MSL"
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															StdinWrite($ipid, $writecertexy[2] & @LF )
															Sleep(4500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput, "+MSLSECUR:2,OK") <> 0 Then
																Global $msl2 = " MSL: OK"
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl2 & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ElseIf StringInStr($soutput, "NG") <> 0 Then
																Global $msl2 = " MSL: NG"
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl2 & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															StdinWrite($ipid, $writecertexy[3] & @LF )
															Sleep(4500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput, "NG") <> 0 Then
																Global $ask = " ASKEED: NG"
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $ask & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ElseIf StringInStr($soutput, "+AKSEEDNO:1,") <> 0 Then
																Global $ask = StringSplit($soutput, ",")
																Global $Rows = UBound($ask, $UBOUND_ROWS)
																For $i = 1 to $Rows - 1
																	If StringInStr($ask[$i], "OK") <> 0 And StringInStr($soutput, "-") <> 0 Then
																		Global $oldask = StringSplit($ask[$i], @crlf)[1]
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: " & $oldask & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		ExitLoop
																	EndIf
																Next
																If StringInStr($oldask, "-") <> 0 Then
																	Global $newaks = AKS($oldask)
																EndIf
															EndIf
															If $newaks <> '' Then
																StdinWrite($ipid, $writecertexy[4] & $newaks & @LF )
																Sleep(4500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "+AKSEEDNO:0,OK") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NEW ASKEED: "& $newaks & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: Failed " & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error while wrinting new AKSEED" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																StdinWrite($ipid, $writecertexy[5] & @LF )
																Sleep(4500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " KEY ID: Failed" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "+IMEICERT:1,") <> 0 Then
																	Global $akeyid = StringSplit($soutput, ",")
																	Global $oldkey = $akeyid[2]
																	Global $keyadd = StringSplit($oldkey, @crlf)
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " KEY ID: " & $keyadd[1] & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "+IMEISIGN:1,") <> 0 Then
																	Global $akeyid = StringSplit($soutput, ",")
																	Global $oldkey = $akeyid[2]
																	Global $keyadd = StringSplit($oldkey, @crlf)
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " KEY ID: " & $keyadd[1] & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error while Detecting KEY ID" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																StdinWrite($ipid, $writecertexy[6] & @LF )
																Sleep(4500)
																StdinWrite($ipid, $writecertexy[7] & $string3 & @LF )
																Sleep(4500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "+IMEITEST:2,OK") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																StdinWrite($ipid, $writecertexy[8] & $string1 & @LF )
																Sleep(4500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "+IMEISIGN:2,OK") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI CERT WRITE: Pass" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI CERT WRITE: Failed" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																StdinWrite($ipid, $writecertexy[9] & @LF )
																Sleep(4500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "+IMEISIGN:0,OK") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																If StringInStr($certstring, 'IMEI2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'ImeiSign2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'PubKey2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'PubKeySign2', $STR_CASESENSE) <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Writing IMEI 2" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	Global $string4 = GetImei2($array1, $linea)
																	Global $string5 = StringLeft($string4, 14)
																	Global $string6 = Sign2($array1, $linea)
																	Global $ejec = IsCreditNedded2("30", $key)
																	Global $var = shori($ejec[1], $key)
																	Global $writecertexy2 = StringSplit($var, "{")
																	StdinWrite($ipid, $writecertexy2[1] & $string5 & @LF )
																	Sleep(4500)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	If StringInStr($soutput, "+IMEITEST:4,OK") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 WRITE: Pass" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	ElseIf StringInStr($soutput, "NG") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 WRITE: Failed" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	Else
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	EndIf
																	StdinWrite($ipid, $writecertexy2[2] & $string6 & @LF )
																	Sleep(4500)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	If StringInStr($soutput, "+IMEISIGN:2,OK") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 CERT WRITE: Pass" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	ElseIf StringInStr($soutput, "NG") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 CERT WRITE: Failed" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	Else
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	EndIf
																	StdinWrite($ipid, $writecertexy2[3] & @LF )
																	Sleep(4500)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	If StringInStr($soutput, "OK") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	ElseIf StringInStr($soutput, "NG") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	Else
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	EndIf
																EndIf
																StdinWrite($ipid, "exit" & @LF )
																Sleep(1000)
																StdinWrite($ipid, "exit" & @LF )
																Sleep(1000)
																ProcessClose($ipid)
																$ipid = Run($writecertexyy[12], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
																ProcessWaitClose($ipid)
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error calculating AKSEED..." & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ProcessClose($ipid)
																DeleteRecurrencia($imei & "101")
																refund(GUICtrlRead($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															EndIf
														EndIf
													EndIf
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Failed!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertexyy[12], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "101")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "101")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($Modem) = 1 Then
								GUIDelete($SPRCERT)
								Global $newaks = ''
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("WriteCertExy", "101")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exynos Cert Write via Modem Port" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										Global $rootcheck = _Android_HasRootAccess()
										If $rootcheck ==  "False" Then
											Global $adbsuono = "shell"
										Else
											Global $adbsuono = "shell su -c"
										EndIf
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "101")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $certstring = FileRead($certselect)
											$linea = _FileCountLines($certselect)
											$array1 = FileReadToArray($certselect)
											If @error Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Cert dañado o incorrecto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "101")
												refund(GUICtrlRead($Edit1))
												EnableButtons()
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Knox..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb shell getprop ro.boot.warranty_bit", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												If $soutput == "1" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Knox Void..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Bypassing..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("adb " & $adbsuono & " setprop ro.factory.factory_binary factory", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													$ipid = Run("adb " & $adbsuono & " setprop ctl.restart ril-daemon", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(10000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Knox Pass..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando..." )
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												EndIf
												RunWait("adb wait-for-device", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												#Region ### START Koda GUI section ### Form=
												Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
												Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
												Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
												GUICtrlSetData($Combo1, _CommListPorts(1))
												GUICtrlCreateGroup("", -99, -99, 1, 1)
												Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
												Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
												Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
												Global $Label3 = GUICtrlCreateLabel("SELECT MODEM PORT.", 312, 80, 126, 17)
												Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
												Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
												GUISetState(@SW_SHOW)
												#EndRegion ### END Koda GUI section ###

												While 1
													$nMsg = GUIGetMsg()
													Switch $nMsg
														Case $GUI_EVENT_CLOSE
															GUIDelete($FormCOM)
															DeleteRecurrencia($imei & "101")
															refund(GUICtrlRead($Edit1))
															EnableButtons()
															ExitLoop

														Case $OpenDeviceMGM
															OpenDevMenu()

														Case $ButtonrefreshComm
															GUICtrlSetData($Combo1,"")
															GUICtrlSetData($Combo1, _CommListPorts(1))

														Case $ButtonSelectCom
															Global $commselected = GUICtrlRead($Combo1)
															Global $finalcom = StringTrimLeft($commselected, 3)
															If $commselected == "" Then
																MsgBox(16, "Error", "No CommPort Selected!")
															Else
																GUIDelete($FormCOM)
																Global $ejec = IsCreditNedded2("36", $key)
																Global $var = shori($ejec[1], $key)
																Global $writecertexymod = StringSplit($var, "{")
																If @error Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 	recibiendo datos del servidor..." & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	DeleteRecurrencia($imei & "101")
																	refund(GUICtrlRead($Edit1))
																	firma()
																	AddLog()
																	logs()
																	EnableButtons()
																	ExitLoop
																Else
																	Global $err = ""
																	_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
																	If $err == "" Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Conexion... " )
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		Global $star = TimerInit()
																		Do
																			_CommSendString("AT" & @CR, 1)
																			$instrcheck = _commGetLine(@CR, 20, 200)
																			Sleep(20)
																			If $instrcheck == "" Then
																				Global $Com = 1
																			Else
																				$Com = 0
																				ExitLoop
																			EndIf
																			Sleep(100)
																		Until TimerDiff($star) > 3000
																		If $Com == 1 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Puerto COM seleccionado incorrecto!" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			DeleteRecurrencia($imei & "101")
																			refund(GUICtrlRead($Edit1))
																			firma()
																			AddLog()
																			logs()
																			EnableButtons()
																			ExitLoop
																		Else
																			While 1
																				$instr = _commGetLine(@CR, 20, 200)
																				If StringInStr($instr, "OK") <> 0 Then
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					Sleep(1000)
																					If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
																						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
																						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																						DeleteRecurrencia($imei & "101")
																						refund(GUICtrlRead($Edit1))
																						firma()
																						AddLog()
																						logs()
																						EnableButtons()
																						ExitLoop
																					Else
																						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
																						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																						Global $string2 = GetImei($array1, $linea)
																						If $string2 == "error 02" Then
																							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
																							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																							DeleteRecurrencia($imei & "101")
																							refund(GUICtrlRead($Edit1))
																							firma()
																							AddLog()
																							logs()
																							EnableButtons()
																							ExitLoop
																						Else
																							Global $string3 = StringLeft($string2, 14)
																							Global $string1 = Sign($array1, $linea)
																							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert... " & @CRLF)
																							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																							_CommSendString($writecertexymod[1] & @CR, 1)
																							Global $star = TimerInit()
																							Do
																								$instr = _commGetLine(@CR, 20, 1000)
																								If StringInStr($instr, "+MSLSECUR:1,0000000000") <> 0 Then
																									Global $msl = "Check Done Ok"
																									ExitLoop
																								Else
																									Global $msl = " Need to Reset MSL"
																								EndIf
																								Sleep(100)
																							Until TimerDiff($star) > 10000
																							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl & @CRLF)
																							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																							$instr = ''
																							_CommSendString($writecertexymod[2] & @CR, 1)
																							Global $star = TimerInit()
																							Do
																								$instr = _commGetLine(@CR, 20, 1000)
																								If StringInStr($instr, "+MSLSECUR:2,OK") <> 0 Then
																									Global $msl2 = " MSL: OK"
																									ExitLoop
																								ElseIf StringInStr($instr, "NG") <> 0 Or StringInStr($instr, "ERROR") <> 0 Then
																									Global $msl2 = " MSL: FAILED"
																									ExitLoop
																								EndIf
																								Sleep(100)
																							Until TimerDiff($star) > 10000
																							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl2 & @CRLF)
																							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																							$instr = ''
																							_CommSendString($writecertexymod[12] & @CR, 1)
																							Global $star = TimerInit()
																							Do
																								$instr = _commGetLine(@CR, 20, 1000)
																								If StringInStr($instr, "NG") <> 0 Then
																									Global $ask = " ASKEED: NG"
																									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $ask & @CRLF)
																									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																									ExitLoop
																								ElseIf StringInStr($soutput, "+AKSEEDNO:1,") <> 0 Then
																									Global $ask = StringSplit($soutput, ",")
																									Global $Rows = UBound($ask, $UBOUND_ROWS)
																									For $i = 1 to $Rows - 1
																										If StringInStr($ask[$i], "OK") <> 0 And StringInStr($soutput, "-") <> 0 Then
																											Global $oldask = StringSplit($ask[$i], @crlf)[1]
																											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: " & $oldask & @CRLF)
																											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																											ExitLoop
																										EndIf
																									Next
																									If StringInStr($oldask, "-") <> 0 Then
																										Global $newaks = AKS($oldask)
																									EndIf
																									ExitLoop
																								EndIf
																								Sleep(100)
																							Until TimerDiff($star) > 10000
																							If $newaks <> '' Then
																								Global $instr = ''
																								_CommSendString($writecertexymod[3] & $newaks & @CR, 1)
																								Global $star = TimerInit()
																								Do
																									$instr = _commGetLine(@CR, 20, 1000)
																									If StringInStr($instr, "+AKSEEDNO:0,OK") <> 0 Then
																										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NEW ASKEED: "& $instr & @CRLF)
																										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																										ExitLoop
																									ElseIf StringInStr($instr, "NG") <> 0 Then
																										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: Failed " & @CRLF)
																										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																										ExitLoop
																									EndIf
																									Sleep(100)
																								Until TimerDiff($star) > 10000
																								$instr = ''
																								_CommSendString($writecertexymod[4] & @CR, 1)
																								Global $star = TimerInit()
																								Do
																									$instr = _commGetLine(@CR, 20, 1000)
																									If StringInStr($instr, "NG") <> 0 Then
																										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " KEY ID: Failed" & @CRLF)
																										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																										ExitLoop
																									ElseIf StringInStr($instr, "+IMEICERT:1,") <> 0 Then
																										Global $akeyid = StringSplit($instr, ",")
																										Global $oldkey = $akeyid[2]
																										Global $keyadd = StringSplit($oldkey, @crlf)
																										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " KEY ID: " & $keyadd[1] & @CRLF)
																										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																										ExitLoop
																									ElseIf StringInStr($instr, "+IMEISIGN:1,") <> 0 Then
																										Global $akeyid = StringSplit($instr, ",")
																										Global $oldkey = $akeyid[2]
																										Global $keyadd = StringSplit($oldkey, @crlf)
																										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " KEY ID: " & $keyadd[1] & @CRLF)
																										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																										ExitLoop
																									EndIf
																									Sleep(100)
																								Until TimerDiff($star) > 10000
																								$instr = ''
																								_CommSendString($writecertexymod[5] & @CR, 1)
																								Sleep(5000)
																								_CommSendString($writecertexymod[6] & $string3 & @CR, 1)
																								Global $star = TimerInit()
																								Do
																									$instr = _commGetLine(@CR, 20, 1000)
																									If StringInStr($instr, "+IMEITEST:2,OK") <> 0 Then
																										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
																										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																										ExitLoop
																									ElseIf StringInStr($instr, "NG") <> 0 Then
																										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
																										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																										ExitLoop
																									EndIf
																									Sleep(100)
																								Until TimerDiff($star) > 10000
																								$instr = ''
																								_CommSendString($writecertexymod[7] & $string1 & @CR, 1)
																								Global $star = TimerInit()
																								Do
																									$instr = _commGetLine(@CR, 20, 1000)
																									If StringInStr($instr, "+IMEISIGN:2,OK") <> 0 Then
																										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 CERT WRITE: Pass" & @CRLF)
																										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																										ExitLoop
																									ElseIf StringInStr($instr, "NG") <> 0 Then
																										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 CERT WRITE: Failed" & @CRLF)
																										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																										ExitLoop
																									EndIf
																									Sleep(100)
																								Until TimerDiff($star) > 10000
																								$instr = ''
																								_CommSendString($writecertexymod[8] & @CR, 1)
																								Global $star = TimerInit()
																								Do
																									$instr = _commGetLine(@CR, 20, 1000)
																									If StringInStr($instr, "+IMEISIGN:0,OK") <> 0 Then
																										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
																										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																										ExitLoop
																									ElseIf StringInStr($instr, "NG") <> 0 Then
																										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
																										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																										ExitLoop
																									EndIf
																									Sleep(100)
																								Until TimerDiff($star) > 10000
																								If StringInStr($certstring, 'IMEI2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'ImeiSign2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'PubKey2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'PubKeySign2', $STR_CASESENSE) <> 0 Then
																									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Writing IMEI 2" & @CRLF)
																									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																									Global $string4 = GetImei2($array1, $linea)
																									Global $string5 = StringLeft($string4, 14)
																									Global $string6 = Sign2($array1, $linea)
																									_CommSendString($writecertexymod[9] & $string5 & @CR, 1)
																									Global $star = TimerInit()
																									Do
																										$instr = _commGetLine(@CR, 20, 1000)
																										If StringInStr($instr, "+IMEITEST:4,OK") <> 0 Then
																											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 WRITE: Pass" & @CRLF)
																											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																											ExitLoop
																										ElseIf StringInStr($instr, "NG") <> 0 Then
																											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 WRITE: Failed" & @CRLF)
																											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																											ExitLoop
																										EndIf
																										Sleep(100)
																									Until TimerDiff($star) > 10000
																									$instr = ''
																									_CommSendString($writecertexymod[10] & $string6 & @CR, 1)
																									Global $star = TimerInit()
																									Do
																										$instr = _commGetLine(@CR, 20, 1000)
																										If StringInStr($instr, "+IMEISIGN:2,OK") <> 0 Then
																											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 CERT WRITE: Pass" & @CRLF)
																											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																											ExitLoop
																										ElseIf StringInStr($instr, "NG") <> 0 Then
																											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 CERT WRITE: Failed" & @CRLF)
																											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																											ExitLoop
																										EndIf
																										Sleep(100)
																									Until TimerDiff($star) > 10000
																									_CommSendString($writecertexymod[11] & @CR, 1)
																									Global $star = TimerInit()
																									Do
																										$instr = _commGetLine(@CR, 20, 1000)
																										If StringInStr($instr, "OK") <> 0 Then
																											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
																											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																											ExitLoop
																										ElseIf StringInStr($instr, "NG") <> 0 Then
																											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
																											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																											ExitLoop
																										EndIf
																										Sleep(100)
																									Until TimerDiff($star) > 10000
																								EndIf
																								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado! " & @CRLF)
																								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																								Sleep(20)
																								firma()
																								AddLog()
																								logs()
																								EnableButtons()
																								_CommClosePort()
																								ExitLoop
																							Else
																								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error calculating AKSEED..." & @CRLF)
																								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																								ProcessClose($ipid)
																								DeleteRecurrencia($imei & "101")
																								refund(GUICtrlRead($Edit1))
																								firma()
																								AddLog()
																								logs()
																								EnableButtons()
																								ExitLoop
																							EndIf
																						EndIf
																					EndIf
																				ElseIf StringInStr($instr, "ERROR") <> 0 Then
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ERROR" & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequea la conexion e intenta nuevamente!" & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					Sleep(20)
																					firma()
																					AddLog()
																					logs()
																					EnableButtons()
																					ExitLoop
																				EndIf
																			WEnd
																			ExitLoop
																		EndIf
																	Else
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error abriendo puerto..." & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		firma()
																		AddLog()
																		logs()
																		EnableButtons()
																		ExitLoop
																	EndIf
																EndIf
															EndIf
													EndSwitch
												WEnd
												ExitLoop
											EndIf
											ExitLoop
										EndIf
									Else
										DeleteRecurrencia($imei & "101")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($MEthod2) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("WriteCertExy", "101")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exynos Cert Write ADB M2" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("44", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertexyyn = StringSplit($var, "{")
										Global $newaks = ''
										If Not FileExists(@ScriptDir & "\ATSH") Then
											FileInstall("ATSH", @ScriptDir & "\ATSH", $FC_OVERWRITE)
										EndIf
										Sleep(3000)
										$ipid = Run($writecertexyyn[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;1
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\ATSH")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											$ipid = Run($writecertexyyn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "101")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $certstring = FileRead($certselect)
											$linea = _FileCountLines($certselect)
											$array1 = FileReadToArray($certselect)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Sleep(1000)
											Global $rootcheck = _Android_HasRootAccess()
											If $rootcheck ==  "False" Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($writecertexyyn[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
												ProcessWaitClose($ipid)
												Sleep(2000)
												$ipid = Run($writecertexyyn[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
												Sleep(2000)
												StdinWrite($ipid, $writecertexyyn[5] & @LF ) ;5
												Sleep(6500)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($writecertexyyn[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
												ProcessWaitClose($ipid)
												Sleep(2000)
												$ipid = Run($writecertexyyn[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ; 6
												Sleep(2000)
												StdinWrite($ipid, "su" & @LF ) ; 5
												Sleep(1000)
												StdinWrite($ipid, $writecertexyyn[5] & @LF ) ; 5
												Sleep(6500)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											EndIf
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Archivos..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											If Not FileExists(@TempDir & "\ATSHK") Then
												FileInstall("ATSHK", @TempDir & "\ATSHK", $FC_OVERWRITE)
											EndIf
											If StringInStr($soutput, "Enter") == 0 Then
												FileDelete(@TempDir & "\ATSHK")
												$ipid = Run($writecertexyyn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Error!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "101")
												refund(GUICtrlRead($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											Else
												Global $array = StringSplit($soutput, ":")
												Global $Rows = UBound($array, $UBOUND_ROWS)
												For $i = 1 to $Rows - 1
													If StringInStr($array[$i], "Error") <> 0 Then
														Global $lallave = 0
														ExitLoop
													ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
														Global $lallave = StringReplace($array[$i], " ", "")
														ExitLoop
													Else
														Global $lallave = 0
													EndIf
												Next
												Global $ahorasitengolallave = _Interpreterqcomcert($lallave)
												If StringInStr($ahorasitengolallave, "Error") == 0 Then
													If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertexyyn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "101")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Global $string2 = GetImei($array1, $linea)
														If $string2 == "error 02" Then
															$ipid = Run($writecertexyyn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
															ProcessWaitClose($ipid)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "101")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															$ver = StdinWrite($ipid, $ahorasitengolallave & @LF )
															Sleep(5000)
															$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput1, 'Error') <> 0 or $soutput1 == "" then
																FileDelete(@TempDir & "\ATSHK")
																ProcessClose($ipid)
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Intente nuevamente rooteando primero su dispositivo o via Modem Port" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																DeleteRecurrencia($imei & "101")
																refund(GUICtrlRead($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															Else
																Global $string3 = StringLeft($string2, 14)
																Global $string1 = Sign($array1, $linea)
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert..." & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																StdinWrite($ipid, $writecertexyyn[7] & @LF ) ;7
																Sleep(4500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "+MSLSECUR:1,0000000000") <> 0 Then
																	Global $msl = ""
																Else
																	Global $msl = " Need to Reset MSL"
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																StdinWrite($ipid,$writecertexyyn[8] & @LF ) ;8
																Sleep(4500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "+MSLSECUR:2,OK") <> 0 Then
																		Global $msl2 = " MSL: OK"
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl2 & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																		Global $msl2 = " MSL: NG"
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl2 & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	EndIf
																StdinWrite($ipid, $writecertexyyn[9] & @LF ) ;9
																Sleep(4500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "NG") <> 0 Then
																		Global $ask = " ASKEED: NG"
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $ask & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "+AKSEEDNO:1,") <> 0 Then
																		Global $ask = StringSplit($soutput, ",")
																		Global $Rows = UBound($ask, $UBOUND_ROWS)
																		For $i = 1 to $Rows - 1
																			If StringInStr($ask[$i], "OK") <> 0 And StringInStr($soutput, "-") <> 0 Then
																				Global $oldask = StringSplit($ask[$i], @crlf)[1]
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: " & $oldask & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				ExitLoop
																			EndIf
																		Next
																		If StringInStr($oldask, "-") <> 0 Then
																			Global $newaks = AKS($oldask)
																		EndIf
																	EndIf
																If $newaks <> '' Then
																		StdinWrite($ipid, $writecertexyyn[10] & $newaks & @LF ) ;10
																		Sleep(4500)
																		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																		If StringInStr($soutput, "+AKSEEDNO:0,OK") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NEW ASKEED: "& $newaks & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		ElseIf StringInStr($soutput, "NG") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: Failed " & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		Else
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error while wrinting new AKSEED" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		EndIf
																		StdinWrite($ipid, $writecertexyyn[11] & @LF ) ;11
																		Sleep(4500)
																		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																		If StringInStr($soutput, "NG") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " KEY ID: Failed" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		ElseIf StringInStr($soutput, "+IMEICERT:1,") <> 0 Then
																			Global $akeyid = StringSplit($soutput, ",")
																			Global $oldkey = $akeyid[2]
																			Global $keyadd = StringSplit($oldkey, @crlf)
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " KEY ID: " & $keyadd[1] & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		ElseIf StringInStr($soutput, "+IMEISIGN:1,") <> 0 Then
																			Global $akeyid = StringSplit($soutput, ",")
																			Global $oldkey = $akeyid[2]
																			Global $keyadd = StringSplit($oldkey, @crlf)
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " KEY ID: " & $keyadd[1] & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		Else
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error while Detecting KEY ID" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		EndIf
																		StdinWrite($ipid, $writecertexyyn[12] & @LF ) ;12
																		Sleep(4500)
																		StdinWrite($ipid, $writecertexyyn[13] & $string3 & @LF ) ;13
																		Sleep(4500)
																		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																		If StringInStr($soutput, "+IMEITEST:2,OK") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		ElseIf StringInStr($soutput, "NG") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		Else
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		EndIf
																		StdinWrite($ipid, $writecertexyyn[14] & $string1 & @LF ) ;14
																		Sleep(4500)
																		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																		If StringInStr($soutput, "+IMEISIGN:2,OK") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI CERT WRITE: Pass" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		ElseIf StringInStr($soutput, "NG") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI CERT WRITE: Failed" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		Else
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		EndIf
																		If StringInStr($certstring, 'IMEI2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'ImeiSign2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'PubKey2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'PubKeySign2', $STR_CASESENSE) <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Writing IMEI 2" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			Global $string4 = GetImei2($array1, $linea)
																			Global $string5 = StringLeft($string4, 14)
																			Global $string6 = Sign2($array1, $linea)
																			StdinWrite($ipid, $writecertexyyn[15] & $string5 & @LF ) ;15
																			Sleep(4500)
																			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																			If StringInStr($soutput, "+IMEITEST:4,OK") <> 0 Then
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 WRITE: Pass" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			ElseIf StringInStr($soutput, "NG") <> 0 Then
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 WRITE: Failed" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			Else
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			EndIf
																			StdinWrite($ipid, $writecertexyyn[16] & $string6 & @LF ) ;16
																			Sleep(4500)
																			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																			If StringInStr($soutput, "+IMEISIGN:2,OK") <> 0 Then
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 CERT WRITE: Pass" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			ElseIf StringInStr($soutput, "NG") <> 0 Then
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 CERT WRITE: Failed" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			Else
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			EndIf
																		EndIf
																		StdinWrite($ipid, "exit" & @LF )
																		Sleep(1000)
																		StdinWrite($ipid, "exit" & @LF )
																		Sleep(1000)
																		ProcessClose($ipid)
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Proceso Terminado!" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		firma()
																		AddLog()
																		logs()
																		EnableButtons()
																		ExitLoop
																Else
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error calculating AKSEED..." & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		ProcessClose($ipid)
																		$ipid = Run($writecertexyyn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
																		ProcessWaitClose($ipid)
																		DeleteRecurrencia($imei & "101")
																		refund(GUICtrlRead($Edit1))
																		firma()
																		AddLog()
																		logs()
																		EnableButtons()
																		ExitLoop
																	EndIf
															EndIf
														EndIf
													EndIf
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Failed!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertexyyn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "101")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "101")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							Else
								GUIDelete($SPRCERT)
								MsgBox(64, "Error", "Must Select a valid Method")
								EnableButtons()
								ExitLoop
							EndIf
					EndSwitch
				WEnd
			ElseIf $ComboRead == $iArray[149] Then
				#Region ### START Koda GUI section ### Form=
				Global $SPRCERT = GUICreate("Qualcomm Cert ", 354, 181, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos ", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("ADB Metodo 1", 40, 40, 97, 17)
				Global $MEthod2 = GUICtrlCreateRadio("ADB Metodo 2", 40, 88, 113, 17)
				Global $ADBNOROOT = GUICtrlCreateRadio("ADB metodo 3", 208, 40, 105, 17)
				Global $ButtonStartSPRCert = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPRCERT)
							EnableButtons()
							ExitLoop
						Case $ButtonStartSPRCert
							IF GUICtrlRead($Method1) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("WriteCertQC", "102")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Qcomm Cert Write ADB M1" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("31", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertqc1 = StringSplit($var, "{")
										Global $newaks = ''
										If Not FileExists(@ScriptDir & "\AT") Then
											FileInstall("AT", @ScriptDir & "\AT", $FC_OVERWRITE)
										EndIf
										Sleep(3000)
										$ipid = Run($writecertqc1[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\AT")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)| mcucert (*.cert.mcu)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											$ipid = Run($writecertqc1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "102")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $texttopass = ''
											If StringInStr($certselect, "cert.mcu") <> 0 Then
												_Crypt_DecryptFile($certselect, @TempDir & "\certdecoded", $decrypt, $iAlgorithm)
												Sleep(500)
												Global $certstring = FileRead(@TempDir & "\certdecoded")
												$linea = _FileCountLines(@TempDir & "\certdecoded")
												$array1 = FileReadToArray(@TempDir & "\certdecoded")
												Global $texttopass = GetQcomm($array1, $linea)
												FileDelete(@TempDir & "\certdecoded")
											Else
												Global $certstring = FileRead($certselect)
												$linea = _FileCountLines($certselect)
												$array1 = FileReadToArray($certselect)
												Global $texttopass =  GetQcomm($array1, $linea)
											EndIf
											If $texttopass = "error 02" Or $texttopass = '' Then
												$ipid = Run($writecertqc1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Cert dañado o incorrecto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "102")
												refund(GUICtrlRead($Edit1))
												EnableButtons()
												ExitLoop
											Else
												Global $showme = GetIMEIArray($texttopass)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												Global $rootcheck = _Android_HasRootAccess()
												If $rootcheck ==  "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertqc1[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertqc1[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(2000)
													StdinWrite($ipid, $writecertqc1[5] & @LF )
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertqc1[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertqc1[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(2000)
													StdinWrite($ipid, "su" & @LF )
													Sleep(1000)
													StdinWrite($ipid, $writecertqc1[5] & @LF )
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												EndIf
												If StringInStr($soutput, 'team') <> 0 Then
													If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertqc1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "102")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Global $string2 = GetImei($array1, $linea)
														If $string2 == "error 02" Then
															$ipid = Run($writecertqc1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "102")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															Global $string3 = StringLeft($string2, 14)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															StdinWrite($ipid, $writecertqc1[7] & @LF )
															Sleep(2000)
															StdinWrite($ipid, $writecertqc1[8] & @LF )
															Sleep(2000)
															StdinWrite($ipid, $writecertqc1[7] & @LF )
															Sleep(2000)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput, "+MSLSECUR:1,0000000000") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MSL: OK" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ElseIf StringInStr($soutput, "Error") <> 0 Then
																Global $msl = " Error obteniendo MSL State!"
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Else
																Global $msl = " Need to Reset MSL!"
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															StdinWrite($ipid, $writecertqc1[9] & @LF )
															Sleep(4500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput, "NG") <> 0 Then
																Global $ask = " ASKEED: NG"
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $ask & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ElseIf StringInStr($soutput, "+AKSEEDNO:1,") <> 0 Then
																Global $ask = StringSplit($soutput, ",")
																Global $Rows = UBound($ask, $UBOUND_ROWS)
																For $i = 1 to $Rows - 1
																	If StringInStr($ask[$i], "OK") <> 0 And StringInStr($soutput, "-") <> 0 Then
																		Global $oldask = StringSplit($ask[$i], @crlf)[1]
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: " & $oldask & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		ExitLoop
																	EndIf
																Next
																If StringInStr($oldask, "-") <> 0 Then
																	Global $newaks = AKS($oldask)
																EndIf
															EndIf
															If $newaks <> '' Then
																StdinWrite($ipid, $writecertqc1[10] & $newaks & @LF )
																Sleep(4500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "+AKSEEDNO:0,OK") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NEW ASKEED: "& $newaks & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: Failed " & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error while wrinting new AKSEED" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																StdinWrite($ipid, $writecertqc1[11] & $string3 & @LF ) ;11
																Sleep(4500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "+IMEITEST:2,OK") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																StdinWrite($ipid, $writecertqc1[12] & @LF )
																Sleep(2000)
																StdinWrite($ipid, $writecertqc1[13] & @LF )
																Sleep(2000)
																StdinWrite($ipid, $writecertqc1[14] & "01" & $showme[0] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertqc1[14] & "02" & $showme[1] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertqc1[14] & "03" & $showme[2] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertqc1[14] & "04" & $showme[3] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertqc1[14] & "05" & $showme[4] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertqc1[15] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "+IMEISIGN:2,OK") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																If StringInStr($certstring, 'IMEI2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'ImeiSign2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'PubKey2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'PubKeySign2', $STR_CASESENSE) <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Writing IMEI 2" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	Global $string4 = GetImei2($array1, $linea)
																	Global $string5 = StringLeft($string4, 14)
																	Global $texttopass = GetQcomm2($array1, $linea)
																	Global $showme2 = GetIMEIArray($texttopass)
																	StdinWrite($ipid, $writecertqc1[16] & $string5 & @LF )
																	Sleep(4500)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	If StringInStr($soutput, "+IMEITEST:4,OK") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 WRITE: Pass" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	ElseIf StringInStr($soutput, "NG") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 WRITE: Failed" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	Else
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	EndIf
																	StdinWrite($ipid, $writecertqc1[17] & "01" & $showme2[0] & @LF )
																	Sleep(1500)
																	StdinWrite($ipid, $writecertqc1[17] & "02" & $showme2[1] & @LF )
																	Sleep(1500)
																	StdinWrite($ipid, $writecertqc1[17] & "03" & $showme2[2] & @LF )
																	Sleep(1500)
																	StdinWrite($ipid, $writecertqc1[17] & "04" & $showme2[3] & @LF )
																	Sleep(1500)
																	StdinWrite($ipid, $writecertqc1[17] & "05" & $showme2[4] & @LF )
																	Sleep(1500)
																	StdinWrite($ipid, $writecertqc1[18] & @LF )
																	Sleep(1500)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	If StringInStr($soutput, "+IMEISIGN:2,OK") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 CERT WRITE: Pass" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	ElseIf StringInStr($soutput, "NG") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 CERT WRITE: Failed" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	Else
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	EndIf
																EndIf
																StdinWrite($ipid, "exit" & @LF )
																Sleep(1000)
																StdinWrite($ipid, "exit" & @LF )
																Sleep(1000)
																ProcessClose($ipid)
																$ipid = Run($writecertqc1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
																ProcessWaitClose($ipid)
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Calculando AKSEED..." & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Probablemente necesite Root!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ProcessClose($ipid)
																$ipid = Run($writecertqc1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
																ProcessWaitClose($ipid)
																DeleteRecurrencia($imei & "102")
																refund(GUICtrlRead($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															EndIf
														EndIf
													EndIf
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Failed!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertqc1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "102")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "102")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIF GUICtrlRead($MEthod2) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("WriteCertQC", "102")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Qcomm Cert Write ADB M2" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("32", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertqc2 = StringSplit($var, "{")
										Global $ejec = IsCreditNedded2("33", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertqc22 = StringSplit($var, "{")
										Global $newaks = ''
										If Not FileExists(@ScriptDir & "\AT3") Then
											FileInstall("AT3", @ScriptDir & "\AT3", $FC_OVERWRITE)
										EndIf
										Sleep(3000)
										$ipid = Run($writecertqc2[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\AT3")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											$ipid = Run($writecertqc2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "102")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $certstring = FileRead($certselect)
											$linea = _FileCountLines($certselect)
											$array1 = FileReadToArray($certselect)
											Global $texttopass =  GetQcomm($array1, $linea)
											If $texttopass = "error 02" Then
												$ipid = Run($writecertqc2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Cert dañado o incorrecto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "102")
												refund(GUICtrlRead($Edit1))
												EnableButtons()
												ExitLoop
											Else
												Global $showme = GetIMEIArray($texttopass)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												Global $rootcheck = _Android_HasRootAccess()
												If $rootcheck ==  "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $absiono = "shell"
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $absiono = "shell su -c"
												EndIf
												If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertqc2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "102")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $string2 = GetImei($array1, $linea)
													If $string2 == "error 02" Then
														$ipid = Run($writecertqc2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "102")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														Global $string3 = StringLeft($string2, 14)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertqc2[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertqc2[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														Sleep(1000)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														If StringInStr($soutput, "+MSLSECUR:1,0000000000") <> 0 Then
															Global $msl = ""
														ElseIf StringInStr($soutput, "Error") <> 0 Then
															Global $msl = " Error obteniendo MSL State!"
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Else
															Global $msl = " Unkown MSL State possibly not supported!"
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														EndIf
														$ipid = Run("adb " & $absiono & " " & $writecertqc2[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertqc2[6], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														Sleep(1000)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														If StringInStr($soutput, "NG") <> 0 And StringInStr($soutput, "AKSEEDNO") <> 0 Then
															Global $ask = " ASKEED: NG"
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $ask & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														ElseIf StringInStr($soutput, "+AKSEEDNO:1,") <> 0 Then
															Global $ask = StringSplit($soutput, ",")
															Global $Rows = UBound($ask, $UBOUND_ROWS)
															For $i = 1 to $Rows - 1
																If StringInStr($ask[$i], "OK") <> 0 And StringInStr($soutput, "-") <> 0 Then
																	Global $oldask = StringSplit($ask[$i], @crlf)[1]
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: " & $oldask & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	ExitLoop
																EndIf
															Next
															If StringInStr($oldask, "-") <> 0 Then
																Global $newaks = AKS($oldask)
															EndIf
														EndIf
														If $newaks <> '' Then
															$ipid = Run("adb " & $absiono & " " &  $writecertqc2[7] & $newaks, "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															If StringInStr($soutput, "+AKSEEDNO:0,OK") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NEW ASKEED: "& $newaks & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ElseIf StringInStr($soutput, "NG") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: Failed " & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error while wrinting new AKSEED" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															$ipid = Run("adb " & $absiono & " " & $writecertqc2[8] & $string3, "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															If StringInStr($soutput, "+IMEITEST:2,OK") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ElseIf StringInStr($soutput, "NG") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															$ipid = Run("adb " & $absiono & " " & $writecertqc2[9] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertqc2[10] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertqc2[11] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertqc2[12] & "01" & $showme[0] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertqc2[12] & "02" & $showme[1] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertqc2[12] & "03" & $showme[2] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertqc2[12] & "04" & $showme[3] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertqc2[12] & "05" & $showme[4] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertqc2[13], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															If StringInStr($soutput, "+IMEISIGN:2,OK") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ElseIf StringInStr($soutput, "NG") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															If StringInStr($certstring, 'IMEI2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'ImeiSign2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'PubKey2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'PubKeySign2', $STR_CASESENSE) <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Writing IMEI 2" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Global $string4 = GetImei2($array1, $linea)
																Global $string5 = StringLeft($string4, 14)
																Global $texttopass = GetQcomm2($array1, $linea)
																Global $showme2 = GetIMEIArray($texttopass)
																$ipid = Run("adb " & $absiono & " " & $writecertqc22[1] & $string5, "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
																ProcessWaitClose($ipid)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																Sleep(1000)
																If StringInStr($soutput, "+IMEITEST:2,OK") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																$ipid = Run("adb " & $absiono & " " & $writecertqc22[2] & "01" &$showme2[0] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
																ProcessWaitClose($ipid)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																Sleep(1000)
																$ipid = Run("adb " & $absiono & " " & $writecertqc22[2] & "02" & $showme2[1] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
																ProcessWaitClose($ipid)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																Sleep(1000)
																$ipid = Run("adb " & $absiono & " " & $writecertqc22[2] & "03" & $showme2[2] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
																ProcessWaitClose($ipid)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																Sleep(1000)
																$ipid = Run("adb " & $absiono & " " & $writecertqc22[2] & "04" & $showme2[3] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
																ProcessWaitClose($ipid)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																Sleep(1000)
																$ipid = Run("adb " & $absiono & " " & $writecertqc22[2] & "05" & $showme2[4] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
																ProcessWaitClose($ipid)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																Sleep(1000)
																$ipid = Run("adb " & $absiono & " " & $writecertqc22[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
																ProcessWaitClose($ipid)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																Sleep(1000)
																If StringInStr($soutput, "+IMEISIGN:2,OK") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign 2 Ok" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign 2 Failed" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
															EndIf
															$ipid = Run($writecertqc2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Calculando AKSEED..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Probablemente necesite Root!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															$ipid = Run($writecertqc2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															DeleteRecurrencia($imei & "102")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														EndIf
													EndIf
												EndIf
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "102")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIF GUICtrlRead($ADBNOROOT) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("WriteCertQC", "102")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Qcomm Cert Write ADB M3" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("34", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertqcn = StringSplit($var, "{")
										Global $newaks = ''
										If Not FileExists(@ScriptDir & "\ATSH") Then
											FileInstall("ATSH", @ScriptDir & "\ATSH", $FC_OVERWRITE)
										EndIf
										Sleep(3000)
										$ipid = Run($writecertqcn[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\ATSH")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											$ipid = Run($writecertqcn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "102")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $certstring = FileRead($certselect)
											$linea = _FileCountLines($certselect)
											$array1 = FileReadToArray($certselect)
											Global $texttopass =  GetQcomm($array1, $linea)
											If $texttopass = "error 02" Then
												$ipid = Run($writecertqcn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Cert dañado o incorrecto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "102")
												refund(GUICtrlRead($Edit1))
												EnableButtons()
												ExitLoop
											Else
												Global $showme = GetIMEIArray($texttopass)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												Global $rootcheck = _Android_HasRootAccess()
												If $rootcheck ==  "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertqcn[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertqcn[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(2000)
													StdinWrite($ipid, $writecertqcn[5] & @LF )
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertqcn[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertqcn[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ; 6
													Sleep(2000)
													StdinWrite($ipid, "su" & @LF )
													Sleep(1000)
													StdinWrite($ipid, $writecertqcn[5] & @LF ) ; 5
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												EndIf
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Archivos..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												If Not FileExists(@TempDir & "\ATSHK") Then
													FileInstall("ATSHK", @TempDir & "\ATSHK", $FC_OVERWRITE)
												EndIf
												Sleep(1000)
												If StringInStr($soutput, "Enter") == 0 Then
													FileDelete(@TempDir & "\ATSHK")
													$ipid = Run($writecertqcn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error desencriptando llave" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "102")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													Global $array = StringSplit($soutput, ":")
													Global $Rows = UBound($array, $UBOUND_ROWS)
													For $i = 1 to $Rows - 1
														If StringInStr($array[$i], "Error") <> 0 Then
															Global $lallave = 0
															ExitLoop
														ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
															Global $lallave = StringReplace($array[$i], " ", "")
															ExitLoop
														Else
															Global $lallave = 0
														EndIf
													Next
													Global $ahorasitengolallave = _Interpreterqcomcert($lallave)
													If StringInStr($ahorasitengolallave, "Error") == 0 Then
														If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															$ipid = Run($writecertqcn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "102")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Global $string2 = GetImei($array1, $linea)
															If $string2 == "error 02" Then
																$ipid = Run($writecertqcn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
																ProcessWaitClose($ipid)
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																DeleteRecurrencia($imei & "102")
																refund(GUICtrlRead($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															Else
																$ver = StdinWrite($ipid, $ahorasitengolallave & @LF )
																Sleep(5000)
																$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput1, 'Error') <> 0 or $soutput1 == "" then
																	FileDelete(@TempDir & "\ATSHK")
																	ProcessClose($ipid)
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Intente nuevamente rooteando primero su dispositivo o via Modem Port" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	DeleteRecurrencia($imei & "102")
																	refund(GUICtrlRead($Edit1))
																	firma()
																	AddLog()
																	logs()
																	EnableButtons()
																	ExitLoop
																Else
																	Global $string3 = StringLeft($string2, 14)
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert..." & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	StdinWrite($ipid, $writecertqcn[7] & @LF )
																	Sleep(4500)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	If StringInStr($soutput, "+MSLSECUR:1,0000000000") <> 0 Then
																		Global $msl = ""
																	Else
																		Global $msl = " Need to Reset MSL"
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	EndIf
																	StdinWrite($ipid, $writecertqcn[8] & @LF )
																	Sleep(4500)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	If StringInStr($soutput, "+MSLSECUR:2,OK") <> 0 Then
																		Global $msl2 = " MSL: OK"
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl2 & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	ElseIf StringInStr($soutput, "NG") <> 0 Then
																		Global $msl2 = " MSL: NG"
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl2 & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	EndIf
																	StdinWrite($ipid, $writecertqcn[7] & @LF )
																	Sleep(4500)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	StdinWrite($ipid, $writecertqcn[9] & @LF )
																	Sleep(4500)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	If StringInStr($soutput, "NG") <> 0 Then
																		Global $ask = " ASKEED: NG"
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $ask & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	ElseIf StringInStr($soutput, "+AKSEEDNO:1,") <> 0 Then
																		Global $ask = StringSplit($soutput, ",")
																		Global $Rows = UBound($ask, $UBOUND_ROWS)
																		For $i = 1 to $Rows - 1
																			If StringInStr($ask[$i], "OK") <> 0 And StringInStr($soutput, "-") <> 0 Then
																				Global $oldask = StringSplit($ask[$i], @crlf)[1]
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: " & $oldask & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				ExitLoop
																			EndIf
																		Next
																		If StringInStr($oldask, "-") <> 0 Then
																			Global $newaks = AKS($oldask)
																		EndIf
																	EndIf
																	If $newaks <> '' Then
																		StdinWrite($ipid, $writecertqcn[10] & $newaks & @LF )
																		Sleep(4500)
																		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																		If StringInStr($soutput, "+AKSEEDNO:0,OK") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NEW ASKEED: " & $newaks & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		ElseIf StringInStr($soutput, "NG") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ASKEED: Failed " & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		Else
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error while wrinting new AKSEED" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		EndIf
																		StdinWrite($ipid, $writecertqcn[11] & $string3 & @LF )
																		Sleep(4500)
																		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																		If StringInStr($soutput, "+IMEITEST:2,OK") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		ElseIf StringInStr($soutput, "NG") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		Else
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		EndIf
																		StdinWrite($ipid, $writecertqcn[12] & @LF )
																		Sleep(4500)
																		StdinWrite($ipid, $writecertqcn[13] & @LF )
																		Sleep(4500)
																		StdinWrite($ipid, $writecertqcn[14] & "01" & $showme[0] & @LF )
																		Sleep(4500)
																		StdinWrite($ipid, $writecertqcn[14] & "02" & $showme[1] & @LF )
																		Sleep(4500)
																		StdinWrite($ipid, $writecertqcn[14] & "03" & $showme[2] & @LF )
																		Sleep(4500)
																		StdinWrite($ipid, $writecertqcn[14] & "04" & $showme[3] & @LF )
																		Sleep(4500)
																		StdinWrite($ipid, $writecertqcn[14] & "05" & $showme[4] & @LF )
																		Sleep(4500)
																		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																		StdinWrite($ipid, $writecertqcn[15] & @LF )
																		Sleep(5000)
																		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																		If StringInStr($soutput, "+IMEISIGN:2,OK") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI CERT WRITE: Pass" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		ElseIf StringInStr($soutput, "NG") <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI CERT WRITE: Failed" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		Else
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		EndIf
																		If StringInStr($certstring, 'IMEI2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'ImeiSign2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'PubKey2', $STR_CASESENSE) <> 0 And StringInStr($certstring, 'PubKeySign2', $STR_CASESENSE) <> 0 Then
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Writing IMEI 2" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			Global $string4 = GetImei2($array1, $linea)
																			Global $string5 = StringLeft($string4, 14)
																			Global $texttopass = GetQcomm2($array1, $linea)
																			Global $showme2 = GetIMEIArray($texttopass)
																			StdinWrite($ipid, $writecertqcn[16] & $string5 & @LF )
																			Sleep(4500)
																			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																			If StringInStr($soutput, "+IMEITEST:4,OK") <> 0 Then
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 WRITE: Pass" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			ElseIf StringInStr($soutput, "NG") <> 0 Then
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 WRITE: Failed" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			Else
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			EndIf
																			StdinWrite($ipid, $writecertqcn[17] & "01" & $showme2[0] & @LF )
																			Sleep(2000)
																			StdinWrite($ipid, $writecertqcn[17] & "02" & $showme2[1] & @LF )
																			Sleep(2000)
																			StdinWrite($ipid, $writecertqcn[17] & "03" & $showme2[2] & @LF )
																			Sleep(2000)
																			StdinWrite($ipid, $writecertqcn[17] & "04" & $showme2[3] & @LF )
																			Sleep(2000)
																			StdinWrite($ipid, $writecertqcn[17] & "05" & $showme2[4] & @LF )
																			Sleep(2000)
																			StdinWrite($ipid, $writecertqcn[18] & @LF )
																			Sleep(2000)
																			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																			If StringInStr($soutput, "+IMEISIGN:2,OK") <> 0 Then
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 CERT WRITE: Pass" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			ElseIf StringInStr($soutput, "NG") <> 0 Then
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2 CERT WRITE: Failed" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			Else
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			EndIf
																		EndIf
																		StdinWrite($ipid, "exit" & @LF )
																		Sleep(1000)
																		StdinWrite($ipid, "exit" & @LF )
																		Sleep(1000)
																		ProcessClose($ipid)
																		$ipid = Run($writecertqcn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
																		ProcessWaitClose($ipid)
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		firma()
																		AddLog()
																		logs()
																		EnableButtons()
																		ExitLoop
																	Else
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Calculando AKSEED..." & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Probablemente necesite Root!" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		DeleteRecurrencia($imei & "102")
																		refund(GUICtrlRead($Edit1))
																		firma()
																		AddLog()
																		logs()
																		EnableButtons()
																		ExitLoop
																	EndIf
																EndIf
															EndIf
														EndIf
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Failed!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertqcn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														$ipid = Run("adb reboot", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "102")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													EndIf
												EndIf
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "102")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							Else
								GUIDelete($SPRCERT)
								MsgBox(64, "Error", "Must Select a valid Method")
								EnableButtons()
								ExitLoop
							EndIf
					EndSwitch
				WEnd

			ElseIf $ComboRead == $iArray[150] Then
				#Region ### START Koda GUI section ### Form=
				Global $SPRCERT = GUICreate("Verizon Cert ", 354, 181, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos ", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("ADB Metodo 1", 40, 40, 97, 17)
				Global $MEthod2 = GUICtrlCreateRadio("ADB Metodo 2", 40, 88, 113, 17)
				Global $vzwn4 = GUICtrlCreateRadio("Exploit Metodo 1", 208, 40, 105, 17)
				Global $Noroot = GUICtrlCreateRadio("Exploit Metodo 2", 207, 84, 97, 17)
				Global $ButtonStartSPRCert = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPRCERT)
							EnableButtons()
							ExitLoop
						Case $ButtonStartSPRCert
							If GUICtrlRead($Method1) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("WriteCertVZW", "103")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Verizon Cert Write ADB M1" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("38", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertvzw = StringSplit($var, "{")
										If Not FileExists(@ScriptDir & "\AT") Then
											FileInstall("AT", @ScriptDir & "\AT", $FC_OVERWRITE)
										EndIf
										Sleep(3000)
										$ipid = Run($writecertvzw[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\AT")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											$ipid = Run($writecertvzw[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "103")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $certstring = FileRead($certselect)
											$linea = _FileCountLines($certselect)
											$array1 = FileReadToArray($certselect)
											Global $texttopass =  GetQcomm($array1, $linea)
											If $texttopass = "error 02" Then
												$ipid = Run($writecertvzw[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Cert dañado o incorrecto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "103")
												refund(GUICtrlRead($Edit1))
												EnableButtons()
												ExitLoop
											Else
												Global $showme = GetIMEIArray($texttopass)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												Global $rootcheck = _Android_HasRootAccess()
												If $rootcheck == "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertvzw[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertvzw[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(2000)
													StdinWrite($ipid, $writecertvzw[5] & @LF )
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertvzw[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertvzw[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;6
													Sleep(2000)
													StdinWrite($ipid, "su" & @LF )
													Sleep(1000)
													StdinWrite($ipid, $writecertvzw[5] & @LF );5
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												EndIf
												If StringInStr($soutput, 'team') <> 0 Then
													If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertvzw[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "103")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Global $string2 = GetImei($array1, $linea)
														If $string2 == "error 02" Then
															$ipid = Run($writecertvzw[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
															ProcessWaitClose($ipid)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "103")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															Global $string3 = StringLeft($string2, 14)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															StdinWrite($ipid, $writecertvzw[7] & @LF )
															Sleep(1500)
															StdinWrite($ipid, $writecertvzw[8] & @LF )
															Sleep(1500)
															StdinWrite($ipid, $writecertvzw[9] & @LF )
															Sleep(1500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput, "OK") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MEID AUTH: Pass" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MEID AUTH: ERROR" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															StdinWrite($ipid, $writecertvzw[10] & $string3 & @LF )
															Sleep(1500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput, "OK") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ElseIf StringInStr($soutput, "NG") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															StdinWrite($ipid, $writecertvzw[11] & "01" & $showme[0] & @LF )
															Sleep(1500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															StdinWrite($ipid, $writecertvzw[11] & "02" & $showme[1] & @LF )
															Sleep(1500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															StdinWrite($ipid, $writecertvzw[11] & "03" & $showme[2] & @LF )
															Sleep(1500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															StdinWrite($ipid, $writecertvzw[11] & "04" & $showme[3] & @LF )
															Sleep(1500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															StdinWrite($ipid, $writecertvzw[11] & "05" & $showme[4] & @LF )
															Sleep(1500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput, "OK") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI SIGN: OK" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI SIGN: ERROR" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															StdinWrite($ipid, $writecertvzw[12] & @LF )
															Sleep(1500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput, "OK") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ElseIf StringInStr($soutput, "NG") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															StdinWrite($ipid, $writecertvzw[13] & @LF )
															Sleep(1500)
															StdinWrite($ipid, $writecertvzw[13] & @LF )
															Sleep(1500)
															StdinWrite($ipid, $writecertvzw[14] & @LF )
															Sleep(1500)
															StdinWrite($ipid, "exit" & @LF )
															Sleep(1000)
															StdinWrite($ipid, "exit" & @LF )
															Sleep(1000)
															ProcessClose($ipid)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														EndIf
													EndIf
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Failed!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertvzw[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
													ProcessWaitClose($ipid)
													$ipid = Run("adb reboot", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "103")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "103")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($MEthod2) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("WriteCertVZW", "103")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Verizon Cert Write ADB M2" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("45", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertvzwat4 = StringSplit($var, "{")
										Global $newaks = ''
										If Not FileExists(@ScriptDir & "\AT4") Then
											FileInstall("AT4", @ScriptDir & "\AT4", $FC_OVERWRITE)
										EndIf
										Sleep(3000)
										$ipid = Run($writecertvzwat4[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;1
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\AT4")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											$ipid = Run($writecertvzwat4[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "103")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $certstring = FileRead($certselect)
											$linea = _FileCountLines($certselect)
											$array1 = FileReadToArray($certselect)
											Global $texttopass =  GetQcomm($array1, $linea)
											If $texttopass = "error 02" Then
												$ipid = Run($writecertvzwat4[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Cert dañado o incorrecto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "103")
												refund(GUICtrlRead($Edit1))
												EnableButtons()
												ExitLoop
											Else
												Global $showme = GetIMEIArray($texttopass)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												Global $rootcheck = _Android_HasRootAccess()
												If $rootcheck ==  "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $absiono = "shell"
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $absiono = "shell su -c"
												EndIf
												If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertvzwat4[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "103")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $string2 = GetImei($array1, $linea)
													If $string2 == "error 02" Then
														$ipid = Run($writecertvzwat4[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "103")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														Global $string3 = StringLeft($string2, 14)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertvzwat4[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
														ProcessWaitClose($ipid)
														Sleep(1000)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														If StringInStr($soutput, "OK") <> 0 Then
															Global $msl = ""
														ElseIf StringInStr($soutput, "ERROR") <> 0 Then
															Global $msl = " Error obteniendo autotizacion!"
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Else
															Global $msl = " Unkown Error!"
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														EndIf
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;5
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[6], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;6
														ProcessWaitClose($ipid)
														Sleep(1000)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														$ipid = Run("adb " & $absiono & " " &  $writecertvzwat4[7], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;7
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[8] & $string3, "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;8
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														If StringInStr($soutput, "OK") <> 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														ElseIf StringInStr($soutput, "NG") <> 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														EndIf
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[9] & "01" & $showme[0] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;9
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[9] & "02" & $showme[1] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[9] & "03" & $showme[2] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[9] & "04" & $showme[3] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[9] & "05" & $showme[4] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;9
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[10], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;10
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														If StringInStr($soutput, "OK") <> 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														ElseIf StringInStr($soutput, "NG") <> 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														EndIf
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[11], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;11
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[11], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[12], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;12
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run($writecertvzwat4[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													EndIf
												EndIf
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "103")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($vzwn4) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("WriteCertVZW", "103")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Verizon Cert Write Exploit M1" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("45", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertvzwat4 = StringSplit($var, "{")
										Global $newaks = ''
										If Not FileExists(@ScriptDir & "\AT3") Then
											FileInstall("AT3", @ScriptDir & "\AT3", $FC_OVERWRITE)
										EndIf
										Sleep(3000)
										$ipid = Run($writecertvzwat4[13], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\AT3")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											$ipid = Run($writecertvzwat4[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "103")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $certstring = FileRead($certselect)
											$linea = _FileCountLines($certselect)
											$array1 = FileReadToArray($certselect)
											Global $texttopass =  GetQcomm($array1, $linea)
											If $texttopass = "error 02" Then
												$ipid = Run($writecertvzwat4[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Cert dañado o incorrecto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "103")
												refund(GUICtrlRead($Edit1))
												EnableButtons()
												ExitLoop
											Else
												Global $showme = GetIMEIArray($texttopass)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												Global $rootcheck = _Android_HasRootAccess()
												If $rootcheck ==  "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $absiono = "shell"
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $absiono = "shell su -c"
												EndIf
												If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertvzwat4[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "103")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $string2 = GetImei($array1, $linea)
													If $string2 == "error 02" Then
														$ipid = Run($writecertvzwat4[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "103")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														Global $string3 = StringLeft($string2, 14)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertvzwat4[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
														ProcessWaitClose($ipid)
														Sleep(1000)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														If StringInStr($soutput, "OK") <> 0 Then
															Global $msl = ""
														ElseIf StringInStr($soutput, "ERROR") <> 0 Then
															Global $msl = " Error obteniendo autotizacion!"
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Else
															Global $msl = " Unkown Error!"
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $msl & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														EndIf
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;5
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[6], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;6
														ProcessWaitClose($ipid)
														Sleep(1000)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														$ipid = Run("adb " & $absiono & " " &  $writecertvzwat4[7], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;7
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[8] & $string3, "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;8
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														If StringInStr($soutput, "OK") <> 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														ElseIf StringInStr($soutput, "NG") <> 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														EndIf
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[9] & "01" & $showme[0] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;9
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[9] & "02" & $showme[1] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[9] & "03" & $showme[2] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[9] & "04" & $showme[3] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[9] & "05" & $showme[4] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;9
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[10], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;10
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														If StringInStr($soutput, "OK") <> 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														ElseIf StringInStr($soutput, "NG") <> 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														EndIf
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[11], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;11
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[11], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertvzwat4[12], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;12
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run($writecertvzwat4[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													EndIf
												EndIf
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "103")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($Noroot) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("WriteCertVZW", "103")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Verizon Cert Write Exploit M2" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("46", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertvzwn = StringSplit($var, "{")
										If Not FileExists(@ScriptDir & "\ATSH") Then
											FileInstall("ATSH", @ScriptDir & "\ATSH", $FC_OVERWRITE)
										EndIf
										Sleep(3000)
										$ipid = Run($writecertvzwn[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;1
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\ATSH")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											$ipid = Run($writecertvzwn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "103")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $certstring = FileRead($certselect)
											$linea = _FileCountLines($certselect)
											$array1 = FileReadToArray($certselect)
											Global $texttopass =  GetQcomm($array1, $linea)
											If $texttopass = "error 02" Then
												$ipid = Run($writecertvzwn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Cert dañado o incorrecto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "103")
												refund(GUICtrlRead($Edit1))
												EnableButtons()
												ExitLoop
											Else
												Global $showme = GetIMEIArray($texttopass)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												Global $rootcheck = _Android_HasRootAccess()
												If $rootcheck ==  "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertvzwn[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertvzwn[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(2000)
													StdinWrite($ipid, $writecertvzwn[5] & @LF )
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertvzwn[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertvzwn[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(2000)
													StdinWrite($ipid, "su" & @LF )
													Sleep(1000)
													StdinWrite($ipid, $writecertvzwn[5] & @LF )
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												EndIf
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Archivos..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												If Not FileExists(@TempDir & "\ATSHK") Then
													FileInstall("ATSHK", @TempDir & "\ATSHK", $FC_OVERWRITE)
												EndIf
												If StringInStr($soutput, "Enter") == 0 Then
													FileDelete(@TempDir & "\ATSHK")
													$ipid = Run($writecertvzwn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Error!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "103")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													Global $array = StringSplit($soutput, ":")
													Global $Rows = UBound($array, $UBOUND_ROWS)
													For $i = 1 to $Rows - 1
														If StringInStr($array[$i], "Error") <> 0 Then
															Global $lallave = 0
															ExitLoop
														ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
															Global $lallave = StringReplace($array[$i], " ", "")
															ExitLoop
														Else
															Global $lallave = 0
														EndIf
													Next
													Global $ahorasitengolallave = _Interpreterqcomcert($lallave)
													If StringInStr($ahorasitengolallave, "Error") == 0 Then
														If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															$ipid = Run($writecertvzwn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
															ProcessWaitClose($ipid)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "103")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Global $string2 = GetImei($array1, $linea)
															If $string2 == "error 02" Then
																$ipid = Run($writecertvzwn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
																ProcessWaitClose($ipid)
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																DeleteRecurrencia($imei & "103")
																refund(GUICtrlRead($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															Else
																$ver = StdinWrite($ipid, $ahorasitengolallave & @LF )
																Sleep(5000)
																$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput1, 'Error') <> 0 or $soutput1 == "" then
																	FileDelete(@TempDir & "\ATSHK")
																	ProcessClose($ipid)
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Intente nuevamente rooteando primero su dispositivo o via Modem Port" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	DeleteRecurrencia($imei & "103")
																	refund(GUICtrlRead($Edit1))
																	firma()
																	AddLog()
																	logs()
																	EnableButtons()
																	ExitLoop
																Else
																	Global $string3 = StringLeft($string2, 14)
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert..." & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	StdinWrite($ipid, $writecertvzwn[7] & @LF ) ;7
																	Sleep(4000)
																	StdinWrite($ipid, $writecertvzwn[8] & @LF ) ;8
																	Sleep(4000)
																	StdinWrite($ipid, $writecertvzwn[9] & @LF ) ;9
																	Sleep(4000)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	If StringInStr($soutput, "OK") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MEID AUTH: Pass" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	Else
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MEID AUTH: ERROR" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	EndIf
																	StdinWrite($ipid, $writecertvzwn[10] & $string3 & @LF ) ;10
																	Sleep(4000)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	If StringInStr($soutput, "OK") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	ElseIf StringInStr($soutput, "NG") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	Else
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	EndIf
																	StdinWrite($ipid, $writecertvzwn[11] & "01" & $showme[0] & @LF ) ;11
																	Sleep(4000)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	StdinWrite($ipid, $writecertvzwn[11] & "02" & $showme[1] & @LF )
																	Sleep(4000)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	StdinWrite($ipid, $writecertvzwn[11] & "03" & $showme[2] & @LF )
																	Sleep(4000)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	StdinWrite($ipid, $writecertvzwn[11] & "04" & $showme[3] & @LF )
																	Sleep(4000)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	StdinWrite($ipid, $writecertvzwn[11] & "05" & $showme[4] & @LF ) ;11
																	Sleep(4000)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	If StringInStr($soutput, "OK") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI SIGN: OK" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	Else
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI SIGN: ERROR" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	EndIf
																	StdinWrite($ipid, $writecertvzwn[12] & @LF ) ;12
																	Sleep(4000)
																	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																	If StringInStr($soutput, "OK") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	ElseIf StringInStr($soutput, "NG") <> 0 Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	EndIf
																	StdinWrite($ipid, $writecertvzwn[13] & @LF ) ;13
																	Sleep(4000)
																	StdinWrite($ipid, $writecertvzwn[13] & @LF )
																	Sleep(4000)
																	StdinWrite($ipid, $writecertvzwn[14] & @LF ) ;14
																	Sleep(4000)
																	StdinWrite($ipid, "exit" & @LF )
																	Sleep(1000)
																	StdinWrite($ipid, "exit" & @LF )
																	Sleep(1000)
																	ProcessClose($ipid)
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	firma()
																	AddLog()
																	logs()
																	EnableButtons()
																	ExitLoop
																EndIf
															EndIf
														EndIf
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Failed!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertvzwn[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
														ProcessWaitClose($ipid)
														$ipid = Run("adb reboot", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "103")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													EndIf
												EndIf
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "103")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							Else
								GUIDelete($SPRCERT)
								MsgBox(64, "Error", "Must Select a valid Method")
								EnableButtons()
								ExitLoop
							EndIf
					EndSwitch
				WEnd
			ElseIf $ComboRead == $iArray[151] Then
				#Region ### START Koda GUI section ### Form=
				Global $SPRCERT = GUICreate("Sprint Cert ", 354, 181, -1, -1)
				Global $Methods = GUICtrlCreateGroup("Metodos ", 24, 16, 305, 121)
				Global $Method1 = GUICtrlCreateRadio("MCU Metodo 1", 40, 40, 97, 17)
				Global $MEthod2 = GUICtrlCreateRadio("MCU Metodo 2", 40, 88, 113, 17)
				Global $Method6_0 = GUICtrlCreateRadio("Exploit Metodo 1", 208, 40, 105, 17)
				Global $Radio1 = GUICtrlCreateRadio("Exploit Metodo 2", 207, 84, 97, 17)
				Global $ButtonStartSPRCert = GUICtrlCreateButton("Start", 136, 144, 75, 25)
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPRCERT)
							EnableButtons()
							ExitLoop
						Case $ButtonStartSPRCert
							IF GUICtrlRead($Method1) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("WriteCertSPR", "104")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MC-U Sprint Cert Write M1" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("39", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertspr1 = StringSplit($var, "{")
										Global $oldask = ''
										If Not FileExists(@ScriptDir & "\AT") Then
											FileInstall("AT", @ScriptDir & "\AT", $FC_OVERWRITE)
										EndIf
										Sleep(3000)
										$ipid = Run($writecertspr1[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\AT")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											$ipid = Run($writecertspr1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "104")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $certstring = FileRead($certselect)
											$linea = _FileCountLines($certselect)
											$array1 = FileReadToArray($certselect)
											Global $texttopass =  GetQcomm($array1, $linea)
											If $texttopass = "error 02" Then
												$ipid = Run($writecertspr1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Cert dañado o incorrecto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "104")
												refund(GUICtrlRead($Edit1))
												EnableButtons()
												ExitLoop
											Else
												Global $showme = GetIMEIArray($texttopass)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												Global $rootcheck = _Android_HasRootAccess()
												If $rootcheck ==  "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertspr1[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertspr1[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(2000)
													StdinWrite($ipid, $writecertspr1[5] & @LF )
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertspr1[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertspr1[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(2000)
													StdinWrite($ipid, "su" & @LF )
													Sleep(1000)
													StdinWrite($ipid, $writecertspr1[5] & @LF )
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												EndIf
												If StringInStr($soutput, 'team') <> 0 Then
													If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertspr1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "104")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Global $string2 = GetImei($array1, $linea)
														If $string2 == "error 02" Then
															$ipid = Run($writecertspr1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "104")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															Global $string3 = StringLeft($string2, 14)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															StdinWrite($ipid, $writecertspr1[7] & @LF )
															Sleep(2000)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando peticion SPC para obtener autorizacion..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															StdinWrite($ipid, $writecertspr1[8] & @LF )
															Sleep(4500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput, "+MEIDAUTH:1") <> 0 Then
																Global $ask = StringSplit($soutput, ",")
																Global $Rows = UBound($ask, $UBOUND_ROWS)
																For $i = 1 to $Rows - 1
																	If StringInStr($ask[$i], "OK") <> 0 Then
																		Global $oldask = StringSplit($ask[$i], @crlf)[1]
																		ExitLoop
																	EndIf
																Next
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " SPC AUTH: " & $oldask & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " SPC AUTH: ERROR" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															If $oldask <> '' Then
																StdinWrite($ipid, $writecertspr1[9] & $oldask & @LF)
																Sleep(1500)
																StdinWrite($ipid, $writecertspr1[10] & $string3 & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "OK") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																StdinWrite($ipid, $writecertspr1[11] & "01" & $showme[0] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[11] & "02" & $showme[1] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[11] & "03" & $showme[2] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[11] & "04" & $showme[3] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[11] & "05" & $showme[4] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[12] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "OK") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																StdinWrite($ipid, $writecertspr1[13] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[13] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[14] & @LF )
																Sleep(1500)
																StdinWrite($ipid, "exit" & @LF )
																Sleep(1000)
																StdinWrite($ipid, "exit" & @LF )
																Sleep(1000)
																ProcessClose($ipid)
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error obteniendo SPC..." & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Probablemente necesite Root!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ProcessClose($ipid)
																$ipid = Run($writecertspr1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
																ProcessWaitClose($ipid)
																DeleteRecurrencia($imei & "104")
																refund(GUICtrlRead($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															EndIf
														EndIf
													EndIf
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Failed!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertspr1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "104")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "104")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($MEthod2) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("WriteCertSPR", "104")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MC-U Sprint Cert Write M2" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("43", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertspr2 = StringSplit($var, "{")
										Global $oldask = ''
										If Not FileExists(@ScriptDir & "\AT3") Then
											FileInstall("AT3", @ScriptDir & "\AT3", $FC_OVERWRITE)
										EndIf
										Sleep(3000)
										$ipid = Run($writecertspr2[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\AT3")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											$ipid = Run($writecertspr2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "104")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $certstring = FileRead($certselect)
											$linea = _FileCountLines($certselect)
											$array1 = FileReadToArray($certselect)
											Global $texttopass =  GetQcomm($array1, $linea)
											If $texttopass = "error 02" Then
												$ipid = Run($writecertspr2[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Cert dañado o incorrecto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "104")
												refund(GUICtrlRead($Edit1))
												EnableButtons()
												ExitLoop
											Else
												Global $showme = GetIMEIArray($texttopass)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												Global $rootcheck = _Android_HasRootAccess()
												If $rootcheck ==  "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $absiono = "shell"
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $absiono = "shell su -c"
												EndIf
												If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertspr2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "104")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $string2 = GetImei($array1, $linea)
													If $string2 == "error 02" Then
														$ipid = Run($writecertspr2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "104")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														Global $string3 = StringLeft($string2, 14)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertspr2[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertspr2[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertspr2[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														If StringInStr($soutput, "+MEIDAUTH:1") <> 0 Then
															Global $ask = StringSplit($soutput, ",")
															Global $Rows = UBound($ask, $UBOUND_ROWS)
															For $i = 1 to $Rows - 1
																If StringInStr($ask[$i], "OK") <> 0 Then
																	Global $oldask = StringSplit($ask[$i], @crlf)[1]
																	ExitLoop
																EndIf
															Next
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " SPC AUTH: " & $oldask & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " SPC AUTH: ERROR" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														EndIf
														If $oldask <> '' Then
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[6], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															$ipid = Run("adb " & $absiono & " " &  $writecertspr2[7] & $oldask, "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[8] & $string3, "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															If StringInStr($soutput, "OK") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ElseIf StringInStr($soutput, "NG") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[9] & "01" & $showme[0] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[9] & "02" & $showme[1] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[9] & "03" & $showme[2] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[9] & "04" & $showme[3] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[9] & "05" & $showme[4] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[10], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;10
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															If StringInStr($soutput, "OK") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ElseIf StringInStr($soutput, "NG") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[11] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[11] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[12], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Autorizando SPC..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Probablemente necesite Root!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															$ipid = Run($writecertspr2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															DeleteRecurrencia($imei & "104")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														EndIf
													EndIf
												EndIf
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "104")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($Method6_0) = 1 Then
								GUIDelete($SPRCERT)
								_GUICtrlEdit_SetText ($Edit1, "")
								Global $showme2 = CredNoLicense("WriteCertSPR", "104")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Sprint Cert Write Exploit M1" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("39", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertspr1 = StringSplit($var, "{")
										Global $oldask = ''
										If Not FileExists(@ScriptDir & "\AT") Then
											FileInstall("AT", @ScriptDir & "\AT", $FC_OVERWRITE)
										EndIf
										Sleep(3000)
										$ipid = Run($writecertspr1[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\AT")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											$ipid = Run($writecertspr1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "104")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $certstring = FileRead($certselect)
											$linea = _FileCountLines($certselect)
											$array1 = FileReadToArray($certselect)
											Global $texttopass =  GetQcomm($array1, $linea)
											If $texttopass = "error 02" Then
												$ipid = Run($writecertspr1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Cert dañado o incorrecto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "104")
												refund(GUICtrlRead($Edit1))
												EnableButtons()
												ExitLoop
											Else
												Global $showme = GetIMEIArray($texttopass)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												Global $rootcheck = _Android_HasRootAccess()
												If $rootcheck ==  "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertspr1[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertspr1[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(2000)
													StdinWrite($ipid, $writecertspr1[15] & @LF )
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertspr1[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													Sleep(2000)
													$ipid = Run($writecertspr1[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(2000)
													StdinWrite($ipid, "su" & @LF )
													Sleep(1000)
													StdinWrite($ipid, $writecertspr1[15] & @LF ) ;5
													Sleep(6500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												EndIf
												If StringInStr($soutput, 'team') <> 0 Then
													If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertspr1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "104")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Global $string2 = GetImei($array1, $linea)
														If $string2 == "error 02" Then
															$ipid = Run($writecertspr1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "104")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															Global $string3 = StringLeft($string2, 14)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															StdinWrite($ipid, $writecertspr1[7] & @LF )
															Sleep(2000)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando peticion SPC para obtener autorizacion..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															StdinWrite($ipid, $writecertspr1[8] & @LF )
															Sleep(4500)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput, "+MEIDAUTH:1") <> 0 Then
																Global $ask = StringSplit($soutput, ",")
																Global $Rows = UBound($ask, $UBOUND_ROWS)
																For $i = 1 to $Rows - 1
																	If StringInStr($ask[$i], "OK") <> 0 Then
																		Global $oldask = StringSplit($ask[$i], @crlf)[1]
																		ExitLoop
																	EndIf
																Next
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " SPC AUTH: " & $oldask & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " SPC AUTH: ERROR" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															If $oldask <> '' Then
																StdinWrite($ipid, $writecertspr1[9] & $oldask & @LF)
																Sleep(1500)
																StdinWrite($ipid, $writecertspr1[10] & $string3 & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "OK") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																StdinWrite($ipid, $writecertspr1[11] & "01" & $showme[0] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[11] & "02" & $showme[1] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[11] & "03" & $showme[2] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[11] & "04" & $showme[3] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[11] & "05" & $showme[4] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[12] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																If StringInStr($soutput, "OK") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ElseIf StringInStr($soutput, "NG") <> 0 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																StdinWrite($ipid, $writecertspr1[13] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[13] & @LF )
																Sleep(1500)
																$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
																StdinWrite($ipid, $writecertspr1[14] & @LF )
																Sleep(1500)
																StdinWrite($ipid, "exit" & @LF )
																Sleep(1000)
																StdinWrite($ipid, "exit" & @LF )
																Sleep(1000)
																ProcessClose($ipid)
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error obteniendo SPC..." & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Probablemente necesite Root!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																ProcessClose($ipid)
																$ipid = Run($writecertspr1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
																ProcessWaitClose($ipid)
																DeleteRecurrencia($imei & "104")
																refund(GUICtrlRead($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															EndIf
														EndIf
													EndIf
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Failed!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertspr1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "104")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
												EndIf
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "104")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							ElseIf GUICtrlRead($Radio1) = 1 Then
								GUIDelete($SPRCERT)
								Global $showme2 = CredNoLicense("WriteCertSPR", "104")
								If StringIsDigit($showme2) == 1 Or $activo == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Sprint Cert Write Exploit M2" & @CRLF)
									$pro = GUICtrlRead($Edit1)
									$dejaver = ReadInfoSamsung()
									If $dejaver == 1 then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $ejec = IsCreditNedded2("43", $key)
										Global $var = shori($ejec[1], $key)
										Global $writecertspr2 = StringSplit($var, "{")
										Global $oldask = ''
										If Not FileExists(@ScriptDir & "\AT4") Then
											FileInstall("AT4", @ScriptDir & "\AT4", $FC_OVERWRITE)
										EndIf
										Sleep(3000)
										$ipid = Run($writecertspr2[13], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\AT4")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Cert..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Global $certselect = FileOpenDialog("Select Cert", @MyDocumentsDir & "\", "cert (*.cert)", $FD_FILEMUSTEXIST)
										If @error Then
											MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
											$ipid = Run($writecertspr2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar el CERT a escribir" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "104")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop
										Else
											Global $certstring = FileRead($certselect)
											$linea = _FileCountLines($certselect)
											$array1 = FileReadToArray($certselect)
											Global $texttopass =  GetQcomm($array1, $linea)
											If $texttopass = "error 02" Then
												$ipid = Run($writecertspr2[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Cert dañado o incorrecto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "104")
												refund(GUICtrlRead($Edit1))
												EnableButtons()
												ExitLoop
											Else
												Global $showme = GetIMEIArray($texttopass)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												Global $rootcheck = _Android_HasRootAccess()
												If $rootcheck ==  "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $absiono = "shell"
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ejecutando comandos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $absiono = "shell su -c"
												EndIf
												If StringInStr($certstring, 'IMEI', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'ImeiSign', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKey', $STR_CASESENSE) == 0 Or StringInStr($certstring, 'PubKeySign', $STR_CASESENSE) == 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 01!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($writecertspr2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "104")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $string2 = GetImei($array1, $linea)
													If $string2 == "error 02" Then
														$ipid = Run($writecertspr2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert corrupto 02!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "104")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Else
														Global $string3 = StringLeft($string2, 14)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escribiendo Cert..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($writecertspr2[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertspr2[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														Sleep(1000)
														$ipid = Run("adb " & $absiono & " " & $writecertspr2[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
														If StringInStr($soutput, "+MEIDAUTH:1") <> 0 Then
															Global $ask = StringSplit($soutput, ",")
															Global $Rows = UBound($ask, $UBOUND_ROWS)
															For $i = 1 to $Rows - 1
																If StringInStr($ask[$i], "OK") <> 0 Then
																	Global $oldask = StringSplit($ask[$i], @crlf)[1]
																	ExitLoop
																EndIf
															Next
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " SPC AUTH: " & $oldask & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " SPC AUTH: ERROR" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														EndIf
														If $oldask <> '' Then
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[6], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															$ipid = Run("adb " & $absiono & " " &  $writecertspr2[7] & $oldask, "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[8] & $string3, "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															If StringInStr($soutput, "OK") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Pass" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ElseIf StringInStr($soutput, "NG") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI WRITE: Failed" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[9] & "01" & $showme[0] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[9] & "02" & $showme[1] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[9] & "03" & $showme[2] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[9] & "04" & $showme[3] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[9] & "05" & $showme[4] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[10], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;10
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															If StringInStr($soutput, "OK") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Ok" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															ElseIf StringInStr($soutput, "NG") <> 0 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cert Sign Failed" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unknown Error" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															EndIf
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[11] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[11] , "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															$ipid = Run("adb " & $absiono & " " & $writecertspr2[12], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															Sleep(1000)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Autorizando SPC..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Probablemente necesite Root!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															$ipid = Run($writecertspr2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
															ProcessWaitClose($ipid)
															DeleteRecurrencia($imei & "104")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														EndIf
													EndIf
												EndIf
											EndIf
										EndIf
									Else
										DeleteRecurrencia($imei & "104")
										refund(GUICtrlRead($Edit1))
										EnableButtons()
										ExitLoop
									EndIf
								ElseIf $showme2 = True Then
									MsgBox(16, "Error", "Operacion Cencelada")
									EnableButtons()
									ExitLoop
								Else
									MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
									EnableButtons()
									ExitLoop
								EndIf
							Else
								GUIDelete($SPRCERT)
								MsgBox(64, "Error", "Must Select a valid Method")
								EnableButtons()
								ExitLoop
							EndIf
					EndSwitch
				WEnd
			ElseIf $ComboRead == $iArray[194] Then
				Global $BANDSELECTED = ''
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung Change/Force Bands" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					#Region ### START Koda GUI section ### Form=
					Global $FormNetwork = GUICreate("Network Selection", 274, 138, -1, -1)
					Global $GroupNetwrok = GUICtrlCreateGroup("Select Bands", 16, 8, 241, 113)
					Global $ComboBands = GUICtrlCreateCombo("", 32, 40, 209, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
					GUICtrlSetData(-1, "GSM/WCDMA (WCDMA preferred)|GSM Only|WCDMA|GSM/WCDMA (Auto Mode)|CDMA and EvDo (Auto Mode)|CDMA Only|EvDo Only|LTE/CDMA and EvDo|LTE/GSM/WCDMA|LTE/CDMA/EvDo/GSM/WCDMA|LTE Only|LTE/WCDMA")
					Global $ButtonBands = GUICtrlCreateButton("Start", 96, 80, 75, 25)
					GUICtrlCreateGroup("", -99, -99, 1, 1)
					GUISetState(@SW_SHOW)
					#EndRegion ### END Koda GUI section ###
					While 1
						$nMsg = GUIGetMsg()
						Switch $nMsg
							Case $GUI_EVENT_CLOSE
								GUIDelete($FormNetwork)
								EnableButtons()
								ExitLoop

							Case $ButtonBands
								Global $BANDSELECTED = GUICtrlRead($ComboBands)
								GUIDelete($FormNetwork)
								ExitLoop

							EndSwitch
						WEnd
					Global $net = SetBands($BANDSELECTED)
					If $BANDSELECTED <> '' and $net <> False Then
						$dejaver = ReadInfoprocess()
						If $dejaver == 1 then
							Global $ejec = IsCreditNedded2("65", $key)
							Global $var = shori($ejec[1], $key)
							Global $motobands = StringSplit($var, "{")
							Global $rootcheck = _Android_HasRootAccess()
							If $rootcheck == True Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Root detectado..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb root", "", @SW_HIDE, $stderr_child + $stdout_child)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando como root..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Sleep(1000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb wait-for-device", "", @SW_HIDE, $stderr_child + $stdout_child)
								ProcessWaitClose($ipid)
								Sleep(1000)
								BootComplete()
							EndIf
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando bandas presentes..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $finandarray = DetectPresentsBands()
							if $finandarray <> False Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo permisos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run($motobands[1], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run($motobands[2], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(3000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Estableciendo " & $BANDSELECTED & "..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run($motobands[3], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								For $i = 1 To UBound($finandarray, $UBOUND_ROWS) - 1
									$ipid = Run($motobands[4] & ' ' & $finandarray[$i] & ' ' & $net, "", @SW_HIDE, $stderr_child + $stdout_child)
									ProcessWaitClose($ipid)
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								Next
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run($motobands[5], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run($motobands[6], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run($motobands[7], "", @SW_HIDE)
								ProcessWaitClose($ipid)
								If StringInStr($soutput, "Error while accessing settings provider") <> 0 and $rootcheck == False Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Intente como Root!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								ElseIf StringInStr($soutput, "Error while accessing settings provider") <> 0 and $rootcheck == True Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Modelo no soportado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Bandas no encontradas..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								EnableButtons()
							EndIf
						Else
							EnableButtons()
						EndIf
					Else
						MsgBox(16, "MC-U Tool", " Debe seleccionar un metodo valido!" & @CRLF & @CRLF & " Must Select a valid method")
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[200] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("ReadQCN", "100")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					SetProcLanDefinitive("readqcnsammain" & $indicator)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						Global $modelsamqcn = SamModCheck()
						Global $imeisam = SamGetSerial()
						Global $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.qcn")
						For $i = 0 To 1000
							Global $sFileName = FileFindNextFile($hSearch)
							If @error Then ExitLoop
							FileDelete(@ScriptDir & "\Backup\" & $sFileName)
						Next
						Global $sammiflag = ReadQCNSamsung($modelsamqcn, $imeisam)
						If $sammiflag == 0 Then
							Local $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.qcn")
							Global $sFileName = FileFindNextFile($hSearch)
							FileMove(@ScriptDir & "\Backup\" & $sFileName, @MyDocumentsDir & "\Backup_MCU\QCN\" & $sFileName, $FC_OVERWRITE + $FC_CREATEPATH)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @MyDocumentsDir & "\Backup_MCU\QCN\" & $sFileName & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "100")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "100")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			ElseIf $ComboRead == $iArray[201] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("ReadQCN", "100")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					SetProcLanDefinitive("writeqcnsammain" & $indicator)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						Global $filedialog = FileOpenDialog("Select QCN", @MyDocumentsDir, " qcn (*.qcn)", $FD_FILEMUSTEXIST)
						If @error Then
							MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "100")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
						Else
							FileChangeDir(@ScriptDir)
							Global $samlagrestore = WriteQCNSAM($filedialog)
							If $samlagrestore == 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[5] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "100")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					Else
						DeleteRecurrencia($imei & "100")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			EndIf

		Case $ButtonLgScreenBypass
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("lgscreen", "84")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG Screen Lock Bypass" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				If $key == False Then
					DeleteRecurrencia($imei & "84")
					refund(GUICtrlRead($Edit1))
					WrongKeyNoCred()
				ElseIf $key == 0 Then
					DeleteRecurrencia($imei & "84")
					refund(GUICtrlRead($Edit1))
					Error0002NoCred()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					#Region ### START Koda GUI section ### Form=
					Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
					Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
					Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
					GUICtrlSetData($Combo1, _CommListPorts(1))
					GUICtrlCreateGroup("", -99, -99, 1, 1)
					Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
					Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
					Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
					Global $Label3 = GUICtrlCreateLabel("SELECT PORT.", 312, 80, 126, 17)
					Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
					Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
					GUISetState(@SW_SHOW)
					#EndRegion ### END Koda GUI section ###

					While 1
						$nMsg = GUIGetMsg()
						Switch $nMsg
							Case $GUI_EVENT_CLOSE
								GUIDelete($FormCOM)
								DeleteRecurrencia($imei & "84")
								refund(GUICtrlRead($Edit1))
								EnableButtons()
								ExitLoop

							Case $OpenDeviceMGM
								OpenDevMenu()

							Case $ButtonrefreshComm
								GUICtrlSetData($Combo1,"")
								GUICtrlSetData($Combo1, _CommListPorts(1))

							Case $ButtonSelectCom
								Global $instr = ''
								Global $commselected = GUICtrlRead($Combo1)
								Global $finalcom = StringTrimLeft($commselected, 3)
								If $commselected == "" Then
									MsgBox(16, "Error", "No CommPort Selected!")
								Else
									GUIDelete($FormCOM)
									Global $ejec = IsCreditNedded2("7", $key)
									Global $var = shori($ejec[1], $key)
									Global $LGarr = StringSplit($var, "{")
									If @error Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error obteniento datos del servidor" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										DeleteRecurrencia($imei & "84")
										refund(GUICtrlRead($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										GUIDelete($FormCOM)
										Global $err = ""
										Global $Com = ""
										_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
										If $err == "" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Conexion... " )
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Global $star = TimerInit()
											Do
												_CommSendString("AT" & @CR, 1)
												$instrcheck = _commGetLine(@CR, 20, 200)
												Sleep(20)
												If $instrcheck == "" Then
													$Com = 1
												Else
													$Com = 0
													ExitLoop
												EndIf
												Sleep(100)
											Until TimerDiff($star) > 3000
											If $Com == 0 Then
												While 1
													$instr = _commGetLine(@CR, 20, 200)
													Sleep(200)
													$instr = _commGetLine(@CR, 20, 200)
													If StringInStr($instr, "OK") <> 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando proceso via Modem Port" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_CommSendString($LGarr[1] & @CR, 1)
														Sleep(3000)
														Global $star = TimerInit()
														Do
															$instr = _commGetLine(@CR, 20, 400)
															if StringInStr($instr, "OFF") <> 0 Then
																Global $response = 1
																ExitLoop
															Else
																Global $response = 0
															EndIf
														Until TimerDiff($star) > 3000
														If $response == 1 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Else
															_CommSendString($LGarr[2] & @CR, 1)
															Sleep(3000)
															Global $star = TimerInit()
															Do
																$instr = _commGetLine(@CR, 20, 400)
																if StringInStr($instr, "OFF") <> 0 Then
																	Global $response1 = 1
																	ExitLoop
																Else
																	Global $response1 = 0
																EndIf
															Until TimerDiff($star) > 3000
															If $response1 == 1 Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																DeleteRecurrencia($imei & "84")
																refund(GUICtrlRead($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop
															Else
																_CommSendString($LGarr[3] & @CR, 1)
																Sleep(3000)
																Global $star = TimerInit()
																Do
																	$instr = _commGetLine(@CR, 20, 400)
																	if StringInStr($instr, "OFF") <> 0 Then
																		Global $response2 = 1
																		ExitLoop
																	Else
																		Global $response2 = 0
																	EndIf
																Until TimerDiff($star) > 3000
																If $response2 == 1 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	firma()
																	AddLog()
																	logs()
																	EnableButtons()
																	ExitLoop
																Else
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	DeleteRecurrencia($imei & "84")
																	refund(GUICtrlRead($Edit1))
																	firma()
																	AddLog()
																	logs()
																	EnableButtons()
																	ExitLoop
																EndIf
															EndIf
														EndIf
													Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error de comunicacion con el puerto!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "84")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													EndIf
												WEnd
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando operacion via Serial Port... " & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Global $numberofbytes = 16
												Global $struct = DllStructCreate("byte[" & $numberofbytes & "]")
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando datos... " & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DllStructSetData($struct, 1, 32, 1)
												DllStructSetData($struct, 1, 0, 2)
												DllStructSetData($struct, 1, 49, 3)
												DllStructSetData($struct, 1, 0, 4)
												DllStructSetData($struct, 1, 0, 5)
												DllStructSetData($struct, 1, 0, 6)
												DllStructSetData($struct, 1, 0, 7)
												DllStructSetData($struct, 1, 0, 8)
												DllStructSetData($struct, 1, 0, 9)
												DllStructSetData($struct, 1, 16, 10)
												DllStructSetData($struct, 1, 0, 11)
												DllStructSetData($struct, 1, 0, 12)
												DllStructSetData($struct, 1, 0, 13)
												DllStructSetData($struct, 1, 180, 14)
												DllStructSetData($struct, 1, 127, 15)
												DllStructSetData($struct, 1, 126, 16)
												_CommSendByteArray(DllStructGetPtr($struct), $numberofbytes, 1)
												If @error Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido! " & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "84")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado! " & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											EndIf
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error abriendo puerto..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "84")
											refund(GUICtrlRead($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										EndIf
									EndIf
								EndIf
						EndSwitch
					WEnd
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $antirelock
			 DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Xiaomi Antirelock" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			 $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Corrigiendo..." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb shell am set-debug-app -w --persistent com.xiaomi.finddevice", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell settings get --user 0 global wait_for_debugger", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			 Else
				EnableButtons()
			 EndIf

		case $rebootsystem
			 DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reinicio del Sistema" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			 Global $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando...." & @CRLF)
				 $ipid = Run("adb reboot", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			 Else
				EnableButtons()
			 EndIf

		Case $rebootfastboot
			 DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ADB reboot fastboot" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			 $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando...." & @CRLF)
				 $ipid = Run("adb reboot fastboot", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			 Else
				EnableButtons()
			 EndIf

        Case $ftm2edl
			 DisableButtons()
			 _GUICtrlEdit_SetText($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " FTM reboot EDL" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			 $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo....." & @CRLF)
				 $ipid = RunWait("adb.exe wait-for-device", "", @SW_HIDE)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo Detectado: OK" & @CRLF)
				 $ipid = Run("adb reboot edl", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			Else
				EnableButtons()
			 EndIf

        Case $rebootedl
			 DisableButtons()
			_GUICtrlEdit_SetText($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ADB reboot EDL" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			 $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando...." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb reboot edl", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			 Else
				EnableButtons()
			 EndIf

		Case $rebootdownload
			 DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ADB reboot download" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			 $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando...." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb reboot download", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			Else
				EnableButtons()
			EndIf
		Case $lenguage
			 DisableButtons()
			 If Not FileExists(@ScriptDir & "\morelocale.apk") Then
			   FileInstall("morelocale.apk", @ScriptDir & "\morelocale.apk", 1)
			 EndIf
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Habilitar Idiomas" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			 $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 Sleep (1000)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Se instalara la app MoreLocale en su dispositivo y se le concederan permisos, por favor espere..." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb install morelocale.apk", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando APK... " & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb shell pm grant jp.co.c_lis.ccl.morelocale android.permission.CHANGE_CONFIGURATION", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo permisos... " & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 Sleep (1000)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 FileDelete(@ScriptDir & "\morelocale.apk")
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			Else
				EnableButtons()
			EndIf

		Case $factoryresetadb
			 DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Factory reset via ADB" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Resteando...." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = command("adb shell recovery --wipe_data")
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			Else
				EnableButtons()
			EndIf

		Case $factoryresetfastboot
			 DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Factory reset via fastboot" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			$soutput = FastbootDetect()
			If $soutput == 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				EnableButtons()
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
				Sleep(1000)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reseteando..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = Run("fastboot -w", "", @SW_HIDE)
				ProcessWaitClose($ipid)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
				$ipid = Run("fastboot reboot", "", @SW_HIDE)
				ProcessWaitClose($ipid)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado" & @CRLF)
				firma()
				AddLog()
				logs()
				EnableButtons()
			EndIf

		Case $wipesystem

		$respuesta = MsgBox(48 + 4, "Advertencia", " Este proceso es irreversible deseas continuar?" & @CRLF & @CRLF & 'This Process is irreversible, Do you wish to continue?')
			Switch $respuesta
				Case 6
					 DisableButtons()
					 _GUICtrlEdit_SetText ($Edit1, "")
                     _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Wipe System" & @CRLF)
					 $pro = GUICtrlRead($Edit1)
                    _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$soutput = FastbootDetect()
					If $soutput == 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Borrando Sistema..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = RunWait("fastboot erase system", "", @SW_HIDE)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Case 7
					EnableButtons()
			EndSwitch

		Case $wipeoem
			$respuesta = MsgBox(48 + 4, "Advertencia", " Este proceso es irreversible deseas continuar?" & @CRLF & @CRLF & 'This Process is irreversible, Do you wish to continue?')
			Switch $respuesta
				Case 6
					DisableButtons()
					 _GUICtrlEdit_SetText ($Edit1, "")
                     _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Wipe OEM" & @CRLF)
					 $pro = GUICtrlRead($Edit1)
                     _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$soutput = FastbootDetect()
					If $soutput == 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Borrando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = RunWait("fastboot erase oem", "", @SW_HIDE)
						Sleep (3000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf

				Case 7
					EnableButtons()
			EndSwitch
		Case $wipepersist
			$respuesta = MsgBox(48 + 4, "Advertencia", " Este proceso es irreversible deseas continuar?" & @CRLF & @CRLF & 'This Process is irreversible, Do you wish to continue?')
			Switch $respuesta
				Case 6
					DisableButtons()
					 _GUICtrlEdit_SetText ($Edit1, "")
                     _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Wipe Persist" & @CRLF)
					 $pro = GUICtrlRead($Edit1)
                     _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$soutput = FastbootDetect()
					If $soutput == 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Borrando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						 $ipid = RunWait("fastboot erase persist", "", @SW_HIDE)
						 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
						 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						 firma()
						 AddLog()
						 logs()
						 EnableButtons()
					EndIf

				Case 7
					EnableButtons()
			EndSwitch
		Case $stopsamupdate1
			 DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Stop Updates Sprint Generic" & @CRLF)
			 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			 $pro = GUICtrlRead($Edit1)
			 $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desinstalando paquetes de Updates..." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.coremobility.app.vnotes", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.LocalFota", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.samsung.sdm", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.samsung.syncmlservice", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.sec.android.fotaclient", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.sec.android.fwupgrade", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.sprint.dsa", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.sprint.w.installer", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.sprint.zone", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.ws.dm", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.wssyncmldm", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			Else
				EnableButtons()
			EndIf

		Case $stopsamsungupdate2
			DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Stop Updates Samsung" & @CRLF)
			  $pro = GUICtrlRead($Edit1)
			 $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desinstalando paquetes de Updates..." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.samsung.sprint.chameleon;pm uninstall com.samsung.sprint.chameleon;pm disable -k --user -0 com.samsung.sprint.chameleon;pm disable com.samsung.sprint.chameleon;pm hide -k --user -0 com.samsung.sprint.chameleon;pm hide com.samsung.sprint.chameleon", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.samsung.android.securitylogagent;pm uninstall com.samsung.android.securitylogagent;pm disable -k --user -0 com.samsung.android.securitylogagent;pm disable com.samsung.android.securitylogagent;pm hide -k --user -0 com.samsung.android.securitylogagent!;pm hide com.samsung.android.securitylogagent", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.samsung.sdm;pm uninstall com.samsung.sdm;pm disable -k --user -0 com.samsung.sdm;pm disable com.samsung.sdm;pm hide -k --user -0 com.samsung.sdm;pm hide com.samsung.sdm", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sprint.voicemail;pm uninstall com.sprint.voicemail;pm disable -k --user -0 com.sprint.voicemail;pm disable com.sprint.voicemail;pm hide -k --user -0 com.sprint.voicemail;pm hide com.sprint.voicemail", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 samsung.sprint.setupwizard;pm uninstall samsung.sprint.setupwizard;pm disable -k --user -0 samsung.sprint.setupwizard;pm disable samsung.sprint.setupwizard;pm hide -k --user -0 samsung.sprint.setupwizard;pm hide samsung.sprint.setupwizard", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por favor espere..." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sprint.psdg.sw;pm uninstall com.sprint.psdg.sw;pm disable -k --user -0 com.sprint.psdg.sw;pm disable com.sprint.psdg.sw;pm hide -k --user -0 com.sprint.psdg.sw;pm hide com.sprint.psdg.sw", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sec.sprint.wfc;pm uninstall com.sec.sprint.wfc;pm disable -k --user -0 com.sec.sprint.wfc;pm disable com.sec.sprint.wfc;pm hide -k --user -0 com.sec.sprint.wfc;pm hide com.sec.sprint.wfc", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sprint.international.message;pm uninstall com.sprint.international.message;pm disable -k --user -0 com.sprint.international.message;pm disable com.sprint.international.message;pm hide -k --user -0 com.sprint.international.message;pm hide com.sprint.international.message", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sprint.ms.smf.services;pm uninstall com.sprint.ms.smf.services;pm disable -k --user -0 com.sprint.ms.smf.services;pm disable com.sprint.ms.smf.services;pm hide -k --user -0 com.sprint.ms.smf.services;pm hide com.sprint.ms.smf.services", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sprint.dsa;pm uninstall com.sprint.dsa;pm disable -k --user -0 com.sprint.dsa;pm disable com.sprint.dsa;pm hide -k --user -0 com.sprint.dsa;pm hide com.sprint.dsa", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sprint.fng;pm uninstall com.sprint.fng;pm disable -k --user -0 com.sprint.fng;pm disable com.sprint.fng;pm hide -k --user -0 com.sprint.fng;pm hide com.sprint.fng", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sprint.ce.updater;pm uninstall com.sprint.ce.updater;pm disable -k --user -0 com.sprint.ce.updater;pm disable com.sprint.ce.updater;pm hide -k --user -0 com.sprint.ce.updater;pm hide com.sprint.ce.updater", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.wssyncmldm;pm uninstall com.wssyncmldm;pm disable -k --user -0 com.wssyncmldm;pm disable com.wssyncmldm;pm hide -k --user -0 com.wssyncmldm;pm hide com.wssyncmldm", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sprint.w.installer;pm uninstall com.sprint.w.installer;pm disable -k --user -0 com.sprint.w.installer;pm disable com.sprint.w.installer;pm hide -k --user -0 com.sprint.w.installer;pm hide com.sprint.w.installer", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sprint.zone;pm uninstall com.sprint.zone;pm disable -k --user -0 com.sprint.zone;pm disable com.sprint.zone;pm hide -k --user -0 com.sprint.zone;pm hide com.sprint.zone", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sprint.w.prefact;pm uninstall com.sprint.w.prefact;pm disable -k --user -0 com.sprint.w.prefact;pm disable com.sprint.w.prefact;pm hide -k --user -0 com.sprint.w.prefact;pm hide com.sprint.w.prefact", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sec.sprextension.phoneinfo;pm uninstall com.sec.sprextension.phoneinfo;pm disable -k --user -0 com.sec.sprextension.phoneinfo;pm disable com.sec.sprextension.phoneinfo;pm hide -k --user -0 com.sec.sprextension.phoneinfo;pm hide com.sec.sprextension.phoneinfo", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.coremobility.app.vnotes;pm uninstall com.coremobility.app.vnotes;pm disable -k --user -0 com.coremobility.app.vnotes;pm disable com.coremobility.app.vnotes;pm hide -k --user -0 com.coremobility.app.vnotes;pm hide com.coremobility.app.vnotes", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.LocalFota;pm uninstall com.LocalFota;pm disable -k --user -0 com.LocalFota;pm disable com.LocalFota;pm hide -k --user -0 com.LocalFota;pm hide com.LocalFota", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sec.android.fotaclient;pm uninstall com.sec.android.fotaclient;pm disable -k --user -0 com.sec.android.fotaclient;pm disable com.sec.android.fotaclient;pm hide -k --user -0 com.sec.android.fotaclient;pm hide com.sec.android.fotaclient", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.sec.android.fwupgrade;pm uninstall com.sec.android.fwupgrade;pm disable -k --user -0 com.sec.android.fwupgrade;pm disable com.sec.android.fwupgrade;pm hide -k --user -0 com.sec.android.fwupgrade;pm hide com.sec.android.fwupgrade", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.coremobility.app.vnotes;pm uninstall com.coremobility.app.vnotes;pm disable -k --user -0 com.coremobility.app.vnotes;pm disable com.coremobility.app.vnotes;pm hide -k --user -0 com.coremobility.app.vnotes;pm hide com.coremobility.app.vnotes", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.ws.dm;pm uninstall com.ws.dm;pm disable -k --user -0 com.ws.dm;pm disable com.ws.dm;pm hide -k --user -0 com.ws.dm;pm hide com.ws.dm", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user -0 com.wssyncmldm;pm uninstall com.wssyncmldm;pm disable -k --user -0 com.wssyncmldm;pm disable com.wssyncmldm;pm hide -k --user -0 com.wssyncmldm;pm hide com.wssyncmldm", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			Else
				EnableButtons()
			EndIf


		Case $stoplgupdate
			DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Stop Updates LG Universal" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desinstalando paquetes de Updates..." & @CRLF)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.ampsvc.android", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.android.LGSetupWizard", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.google.android.setupwizard", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.lge.lgdmsclient", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.lge.lgfota.permission", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.LogiaGroup.LogiaDeck", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.sprint.ce.updater", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.sprint.w.installer", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.sprint.w.prefact", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por favor espere..." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.tmobile.pr.adapt", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.wildtangent.android", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.birdstep.android.cm", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.itsoninc.android.itsonservice", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.itsoninc.android.uid", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.lge.activation", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.lge.provider.chameleon", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.sprint.dsa", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.sprint.psdg.sw", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.coremobility.app.vnotes", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.sprint.zone", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.lge.concierge", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.lge.killswitchagent", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.lge.sprintlocationservice", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.lge.updatecenter", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.mobolize.cachefront.preload", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.sprint.voicemail", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.wsandroid.suite.lge", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.handmark.metro.launcher", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.metro.simlock", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.metropcs.service.vvm", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.mobileposse.client", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.nuance.nmc.sihome.metropcs", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell pm uninstall -k --user 0 com.privacystar.android.metro", "", @SW_HIDE, $stderr_child + $stdout_child)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado ")
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			Else
				EnableButtons()
			EndIf

		Case $pinadb
			DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Remover PIN via ADB" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			 $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 Sleep (1000)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Trabajando...." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb shell rm data/system/password.key", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell su rm data/system/password.key", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando...." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 Run("adb reboot", "", @SW_HIDE)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!")
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			Else
				EnableButtons()
			EndIf

		Case $removepattern
			DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Remover Patron via ADB" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			 $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Trabajando..." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb shell rm data/system/gesture.key", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell su rm data/system/gesture.key", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 Run("adb reboot", "", @SW_HIDE)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!")
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			Else
				EnableButtons()
			EndIf
		Case $rootx210
			DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " X210MA V10K/L Root" & @CRLF)
			  $pro = GUICtrlRead($Edit1)
			 $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 If Not FileExists(@ScriptDir & "\Resources\Rooted-X210.mcu") Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$sDownloaderTitle = "Descargando Resources"
					$url            = "http://mcu-tool.com/MCU-Tool Resources/Recursos/Rooted-X210.mcu"
					$file           = "Rooted-X210.mcu"
					$name           = "Rooted-X210.mcu"
					$dir            = @ScriptDir & "\Resources\"
					_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
				 EndIf
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Archivos..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				If FileExists(@ScriptDir & "\Resources\Rooted-X210.mcu") Then
					$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\Rooted-X210.mcu", @ScriptDir & "\Resources\Rooted-X210.zip", $decrypt, $iAlgorithm)
					ProcessWaitClose($ipid)
					$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\Rooted-X210.zip", @ScriptDir, 1)
					ProcessWaitClose($ipid)
					FileDelete(@ScriptDir & "\Resources\Rooted-X210.zip")
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en Fastboot..." & @CRLF)
					 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 Run("adb reboot bootloader", "", @SW_HIDE)
					 Sleep (8000)
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando bootloader..." & @CRLF)
					 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 $ipid = Run("fastboot oem unlock", "", @SW_HIDE)
					 ProcessWaitClose($ipid)
					 Sleep(3000)
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Rooteando..." & @CRLF)
					 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 $ipid = Run("fastboot flash boot Rooted_boot.img", "", @SW_HIDE)
					 ProcessWaitClose($ipid)
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 $ipid = Run("fastboot reboot", "", @SW_HIDE)
					 ProcessWaitClose($ipid)
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
					 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 MsgBox(64, "MCU Tool", "Reinicie su dispositivo nuevamente e instale magisk apk manualmente" & @CRLF & @CRLF & "Reboot your device and install magisk apk manually")
					 FileDelete(@ScriptDir & "\Rooted_boot.img")
					 firma()
					 AddLog()
					 logs()
					 EnableButtons()
				Else
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 firma()
					 AddLog()
					 logs()
					 EnableButtons()
				EndIf
			 Else
				EnableButtons()
			EndIf


		Case $rebootfastb
			 DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reboot Fastboot" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			 $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
				$ipid = Run("adb reboot bootloader", "", @SW_HIDE)
				ProcessWaitClose($ipid)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				firma()
				AddLog()
				logs()
				EnableButtons()
			Else
				EnableButtons()
			EndIf


		Case $Z835Codes
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("Z835", "110")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ZTE Z835 Read Codes DB" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					$imeizte = IxxxProcess(GUICtrlRead($Edit1))
					If $activo == 1 Then
						Global $dime = True
					Else
						$precio = 1
					EndIf
					If $dime == "True" Then
						Global $precio = 2
						Global $continuidad = MsgBox(32 + 4, "MCU-Tool", "Esta operacion requiere " &  $precio & " credito/s desea continuar? Si ya realizo este procedimiento al mismo dispositivo no se le cargara nuevamente." & @CRLF & @CRLF & "This operation take " &  $precio & " credit/s, do you wish to continue? If you did this process to this device before wont get charged again.")
						Switch $continuidad
							Case 6
								$precio = 2
							Case 7
								$precio = "NO"
						EndSwitch
						If $precio = "NO" Then
							_GUICtrlEdit_SetText ($Edit1, "")
							EnableButtons()
						Else
							Global $seguire = TendreCreditos($precio)
							If $seguire == "False" Then
								MsgBox(16, "MC-U Tool", "No tiene suficiente credito, recargue su cuenta! De todas formas chequearemos si el codigo esta presente!" & @CRLF & @CRLF & "Not enough credit, need to charge account! Anyway will check if credit is present")
								$precio = "YES"
							Else
								If Recheck($imeizte) <> $username & $pro Or Recheck($imeizte) == "False" Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descontando Creditos... " )
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Global $creditosenstock = CreditExistent($username)
									Global $credremain = $creditosenstock - $precio
									CreditAdjust($username, $credremain)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "OK" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Recurrencia($imeizte, $pro)
								EndIf
							EndIf
						EndIf
					EndIf
					If $precio <> "NO" And $precio <> "YES" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If $key == False Then
							DeleteRecurrencia($imei & "110")
							refund(GUICtrlRead($Edit1))
							WrongKey($imeizte)
						ElseIf $key == 0 Then
							DeleteRecurrencia($imei & "110")
							refund(GUICtrlRead($Edit1))
							Error0002($imeizte)
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Leyendo Codigos..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $code = ReadCodesZ835($imeizte, $key)
							If $code <> 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unlock Code: " & $code & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Codigo no Encontrado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								refund(GUICtrlRead($Edit1))
								DeleteRecurrencia($imeizte)
								DeleteRecurrencia($imei & "110")
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					ElseIf $precio == "YES" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If $key == False Then
							WrongKey($imeizte)
						ElseIf $key == 0 Then
							Error0002($imeizte)
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Consultando DB..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $code = ReadCodesZ835($imeizte, $key)
							If $code <> 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Codigo Presente en la Base de Datos!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Codigo no Encontrado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								refund(GUICtrlRead($Edit1))
								DeleteRecurrencia($imeizte)
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					EndIf
				Else
					DeleteRecurrencia($imei & "110")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $ZTEcodes
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("ZCodes", "111")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ZTE MX Read Codes DB" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					Global $imeizte = IxxxProcess(GUICtrlRead($Edit1))
					If $activo == 1 Then
						Global $dime = True
					Else
						$precio = 1
					EndIf
					If $dime == "True" Then
						Global $precio = 2
						Global $continuidad = MsgBox(32 + 4, "MCU-Tool", "Esta operacion requiere " &  $precio & " credito/s desea continuar? Si ya realizo este procedimiento al mismo dispositivo no se le cargara nuevamente." & @CRLF & @CRLF & "This operation take " &  $precio & " credit/s, do you wish to continue? If you did this process to this device before wont get charged again.")
						Switch $continuidad
							Case 6
								$precio = 2
							Case 7
								$precio = "NO"
						EndSwitch
						If $precio = "NO" Then
							_GUICtrlEdit_SetText ($Edit1, "")
							EnableButtons()
						Else
							Global $seguire = TendreCreditos($precio)
							If $seguire == "False" Then
								MsgBox(16, "MC-U Tool", "No tiene suficiente credito, recargue su cuenta! De todas formas chequearemos si el codigo esta presente!" & @CRLF & @CRLF & "Not enough credit, need to charge account! Anyway will check if credit is present")
								$precio = "YES"
							Else
								If Recheck($imeizte) <> $username & $pro Or Recheck($imeizte) == "False" Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descontando Creditos... " )
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Global $creditosenstock = CreditExistent($username)
									Global $credremain = $creditosenstock - $precio
									CreditAdjust($username, $credremain)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "OK" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Recurrencia($imeizte, $pro)
								EndIf
							EndIf
						EndIf
					EndIf
					If $precio <> "NO" And $precio <> "YES" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If $key == False Then
							DeleteRecurrencia($imei & "111")
							refund(GUICtrlRead($Edit1))
							WrongKey($imeizte)
						ElseIf $key == 0 Then
							DeleteRecurrencia($imei & "111")
							refund(GUICtrlRead($Edit1))
							Error0002($imeizte)
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Leyendo Codigos..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $code = ReadCodesZTEMX($imeizte, $key)
							If $code <> 0 Then
								Global $parameters = StringSplit($code, ",")
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Data Base Model: " & $parameters[2] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Unlock Code: " & $parameters[1] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Codigo no Encontrado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								refund(GUICtrlRead($Edit1))
								DeleteRecurrencia($imei & "111")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					ElseIf $precio == "YES" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If $key == False Then
							WrongKey($imeizte)
						ElseIf $key == 0 Then
							Error0002($imeizte)
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Consultando DB..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $code = ReadCodesZTEMX($imeizte, $key)
							If $code <> 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Codigo Presente en la Base de Datos!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Codigo no Encontrado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								refund(GUICtrlRead($Edit1))
								DeleteRecurrencia($imeizte)
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					EndIf
				Else
					DeleteRecurrencia($imei & "111")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $rebootrecovery
			DisableButtons()
			_GUICtrlEdit_SetText ($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ADB Reboot Recovery" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
				$ipid = Run("adb reboot recovery", "", @SW_HIDE)
				ProcessWaitClose($ipid)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Listo!" & @CRLF)
				firma()
				AddLog()
				logs()
				EnableButtons()
			Else
				EnableButtons()
			EndIf

	    Case $start
			 IF GUICtrlRead($samsungfrpadb) = 1 Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("samsungfrpadb", "71")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung FRP via ADB" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Traspasando...")
						$ipid = Run("adb shell content insert --uri content://settings/secure --bind name:s:user_setup_complete --bind value:s:1", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run("adb shell am start -n com.google.android.gsf.login/", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run("adb shell am start -n com.google.android.gsf.login.LoginActivity", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okay" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						DeleteRecurrencia($imei & "71")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			EndIf
             If GUICtrlRead($frpmtkadb) = 1 Then
				 DisableButtons()
				 _GUICtrlEdit_SetText ($Edit1, "")
			     _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MTK FRP via ADB" & @CRLF)
				 $pro = GUICtrlRead($Edit1)
			     $dejaver = ReadInfoprocess()
				 If $dejaver == 1 then
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Traspasando..." & @CRLF)
					 $ipid = Run("adb shell content insert --uri content://settings/secure --bind name:s:user_setup_complete --bind value:s:1", "", @SW_HIDE)
					 ProcessWaitClose($ipid)
					 $ipid = Run("adb shell am start -n com.google.android.gsf.login/", "", @SW_HIDE)
					 ProcessWaitClose($ipid)
					 $ipid = Run("adb shell am start -n com.google.android.gsf.login.LoginActivity", "", @SW_HIDE)
					 ProcessWaitClose($ipid)
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					 MsgBox(64, '', 'Haga un hard reset desde los ajustes para terminar el proceso' & @CRLF & @CRLF & 'Make a hard reset to finish process')
					 firma()
					 AddLog()
					 logs()
					 EnableButtons()
				Else
					EnableButtons()
				EndIf
			EndIf
             If GUICtrlRead($lenovofrp) = 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Lenovo FRP via Fastboot  " & @CRLF)
				$pro = GUICtrlRead($Edit1)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
				$soutput = FastbootDetect()
				If $soutput == 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
					Sleep(1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo FRP..." & @CRLF)
					$ipid = RunWait("fastboot erase config", "", @SW_HIDE)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Riniciando..." & @CRLF)
					$ipid = Run("fastboot reboot", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			 EndIf
			 If GUICtrlRead($deepfrp) = 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Deep FRP via Fastboot" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
				$soutput = FastbootDetect()
				If $soutput == 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
					Sleep(1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo FRP..." & @CRLF)
					$ipid = Run("fastboot erase config", "", @SW_HIDE)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Riniciando..." & @CRLF)
					$ipid = Run("fastboot reboot", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					Sleep (1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			 EndIf
			 If GUICtrlRead($htcfrp) = 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " HTC FRP via Fastboot" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
				$soutput = FastbootDetect()
				If $soutput == 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
					Sleep(1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo FRP..." & @CRLF)
					$ipid = RunWait("fastboot erase config", "", @SW_HIDE)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					$ipid = Run("fastboot reboot", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			 EndIf
			 If GUICtrlRead($micromaxfrp) = 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Micromax/Yuphoria FRP via Fastboot" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
				$soutput = FastbootDetect()
				If $soutput == 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
					Sleep(1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo FRP..." & @CRLF)
					$ipid = RunWait("Fastboot -i 0x2a96 erase config", "", @SW_HIDE)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Riniciando..." & @CRLF)
					$ipid = Run("Fastboot -i 0x2a96 reboot", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			 EndIf
			 IF GUICtrlRead($lgfrpadb) = 1 Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("lgfrpadb", "72")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG FRP via ADB" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Traspasando...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("adb shell content insert --uri content://settings/secure --bind name:s:user_setup_complete --bind value:s:1", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("adb reboot", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okay" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						DeleteRecurrencia($imei & "72")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			 EndIf
			 IF GUICtrlRead($Motofrp) = 1 Then
				If Not FileExists(@ScriptDir & "\busybox1.bat") Then
			       FileInstall("busybox1.bat", @ScriptDir & "\busybox1.bat", 1)
				EndIf
				If Not FileExists(@ScriptDir & "\busybox2.bat") Then
					FileInstall("busybox2.bat", @ScriptDir & "\busybox2.bat", 1)
				EndIf
				If Not FileExists(@ScriptDir & "\busybox3.bat") Then
			       FileInstall("busybox3.bat", @ScriptDir & "\busybox3.bat", 1)
				EndIf
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("Motofrp", "73")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Motorola FRP Reset" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$ipid = Ping("127.0.0.1")
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$soutput = FastbootDetect()
					If $soutput == 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "73")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FastbootReadInfo()
						$ipid = Run("fastboot oem config bootmode factory", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("fastboot reboot", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(30000)
						$checkcode = Ping('192.168.137.1')
						ProcessWaitClose($checkcode)
						While $checkcode == '0'
							$checkcode = Ping('192.168.137.1')
							ProcessWaitClose($checkcode)
							Sleep(1000)
						WEnd
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep (1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando archivos y reiniciando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid =  Run("busybox1.bat", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Ping("ping 127.0.0.1")
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 1 completado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(500)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Esperando dispositivo...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(10000)
						$checkcode = Ping('192.168.137.1')
						ProcessWaitClose($checkcode)
						While $checkcode == '0'
							$checkcode = Ping('192.168.137.1')
							ProcessWaitClose($checkcode)
							Sleep(1000)
						WEnd
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(3000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando archivos..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid =  Run("busybox2.bat", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Ping("ping 127.0.0.1")
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 2 completado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(10000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Esperando dispositivo...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$checkcode = Ping('192.168.137.1')
						ProcessWaitClose($checkcode)
						While $checkcode == '0'
							$checkcode = Ping('192.168.137.1')
							ProcessWaitClose($checkcode)
							Sleep(1000)
						WEnd
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(500)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando archivos y reiniciando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid =  Run("busybox3.bat", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Ping("ping 127.0.0.1")
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Paso 3 completado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Tiempo de espera... 60")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						For $i = 1 to 60
							Global $number = 60 - $i
							Sleep(1000)
							If $number >= 9 Then
								Global $churre = StringTrimRight(GUICtrlRead($Edit1), 2)
							Else
								Global $churre = StringTrimRight(GUICtrlRead($Edit1), 1)
							EndIf
							_GUICtrlEdit_SetText($Edit1, $churre & $number)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Next
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando ADB..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid =  Run("adb kill-server", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid =  Run("adb start-server", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Conectando, acepte depuracion...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Global $Connect2 = 0
						Global $Connect = 0
						Global $star = TimerInit()
						Do
							$ipid = Run("adb devices", "", @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
							Sleep(100)
							Global $Checkiout = StringRight($soutput, 6)
							If $Checkiout == "device" Then
								$Connect = 1
								ExitLoop
							EndIf
							Sleep(100)
						Until TimerDiff($star) > 30000
						If $Connect == 0 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $adbcon = 1
							While 1
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Intentando habilitar ADB..." & $adbcon & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$adbcon += 1
								$ipid =  Run("busybox1.bat", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Ping("ping 127.0.0.1")
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Esperando dispositivo...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Sleep(10000)
								$checkcode = Ping('192.168.137.1')
								ProcessWaitClose($checkcode)
								While $checkcode == '0'
									$checkcode = Ping('192.168.137.1')
									ProcessWaitClose($checkcode)
									Sleep(1000)
								WEnd
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid =  Run("busybox2.bat", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Ping("ping 127.0.0.1")
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Esperando dispositivo...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Sleep(10000)
								$checkcode = Ping('192.168.137.1')
								ProcessWaitClose($checkcode)
								While $checkcode == '0'
									$checkcode = Ping('192.168.137.1')
									ProcessWaitClose($checkcode)
									Sleep(1000)
								WEnd
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando archivos y reiniciando...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid =  Run("busybox3.bat", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Ping("ping 127.0.0.1")
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reinicaindo ADB Server..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid =  Run("adb kill-server", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid =  Run("adb start-server", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Tiempo de espera... 30")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								For $i = 1 to 30
									Global $number = 30 - $i
									Sleep(1000)
									If $number >= 9 Then
										Global $churre = StringTrimRight(GUICtrlRead($Edit1), 2)
									Else
										Global $churre = StringTrimRight(GUICtrlRead($Edit1), 1)
									EndIf
									_GUICtrlEdit_SetText($Edit1, $churre & $number)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Next
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Conectando, acepte depuracion...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Global $star = TimerInit()
								Do
									$ipid = Run("adb devices", "", @SW_HIDE, $stderr_child + $stdout_child)
									ProcessWaitClose($ipid)
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									Sleep(100)
									Global $Checkiout = StringRight($soutput, 6)
									If $Checkiout == "device" Then
										Global $Connect2 = 1
										ExitLoop
									EndIf
									Sleep(100)
								Until TimerDiff($star) > 30000
								If $Connect2 == 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Else
									ExitLoop
								EndIf
								If $adbcon > 3 Then
									ExitLoop
								EndIf
							WEnd
						EndIf
						If $Connect2 == 0 And $Connect == 0 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb kill-server", "", @SW_HIDE)
							ProcessWaitClose($ipid)
							Ping('127.0.0.1')
							FileDelete(@ScriptDir & "\busybox1.bat")
							FileDelete(@ScriptDir & "\busybox2.bat")
							FileDelete(@ScriptDir & "\busybox3.bat")
							firma()
							AddLog()
							logs()
							DeleteRecurrencia($imei & "73")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Sleep (500)
							$ipid = Run('adb shell ps^|FIND /I "android.process.acore"', '', @SW_HIDE)
							Sleep(1000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reseteando FRP..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Sleep(3000)
							$ipid = Run("adb shell settings put secure user_setup_complete 1", "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run("adb shell sync", "", @SW_HIDE)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en Modo Fastboot..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb reboot bootloader", "", @SW_HIDE)
							ProcessWaitClose($ipid)
							$ipid = Run('fastboot oem config bootmode ""', "", @SW_HIDE)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando sistema..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("fastboot reboot", "", @SW_HIDE)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb kill-server", "", @SW_HIDE)
							ProcessWaitClose($ipid)
							Ping('127.0.0.1')
							FileDelete(@ScriptDir & "\busybox1.bat")
							FileDelete(@ScriptDir & "\busybox2.bat")
							FileDelete(@ScriptDir & "\busybox3.bat")
							firma()
							AddLog()
							logs()
							DeleteRecurrencia($imei & "73")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
						EndIf

					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			EndIf
			 If GUICtrlRead($spdfrpfastboot) = 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " SPD FRP via Fastboot" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando dispositivo en modo Fastboot...")
				$soutput = FastbootDetect()
				If $soutput == 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
					Sleep(1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo FRP..." & @CRLF)
					$ipid = RunWait("fastboot erase persist", "", @SW_HIDE)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Riniciando..." & @CRLF)
					$ipid = Run("fastboot reboot", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					Sleep (1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			EndIf
			 If GUICtrlRead($alcatelfrp) = 1 Then
				If Not FileExists(@ScriptDir & "\frpalc.bat") Then
					FileInstall("frpalc.bat", @ScriptDir & "\frpalc.bat", 1)
                 EndIf
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("alcatelfrp", "74")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ALCATEL FRP via ADB" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					MsgBox(64, 'Informacion', 'Active ADB desde el Recovery cuando este listo presione Aceptar para continuar' & @CRLF & @CRLF & 'Activate ADB through recovery and click OK to continue')
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desactivando Administrador de Inicio..." & @CRLF)
						$ipid = Run("adb shell pm clear com.sec.android.app.SecSetupWizard", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run("adb shell pm clear com.google.android.setupwizard", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						Sleep(1000)
						$ipid = Run("frpalc.bat", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						Sleep (1000)
						$ipid = Run("adb shell content insert --uri content://settings/secure --bind name:s:user_setup_complete --bind value:s:1", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run("adb shell content insert --uri content://settings/secure --bind name:s:user_setup_complete --bind value:s:1", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run("adb shell content insert --uri content://settings/secure --bind name:s:user_setup_complete --bind value:s:1", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
						$ipid = Run("adb shell reboot", "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						MsgBox(64, '', 'Haga un hard reset desde los ajustes para terminar el proceso' & @CRLF & @CRLF & 'Make a hard reset to finish process')
						FileDelete(@ScriptDir & "\frpalc.bat")
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						DeleteRecurrencia($imei & "74")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			 EndIf
			 If GUICtrlRead($RadioLGFRP) = 1 Then
				DisableButtons()
				#Region ### START Koda GUI section ### Form=
				Global $FormLGFrp = GUICreate("LG FRP", 276, 139, -1, -1)
				Global $GroupModel = GUICtrlCreateGroup("Models", 16, 8, 241, 81)
				Global $ComboModelLGFrp = GUICtrlCreateCombo("", 24, 40, 217, 25)
				GUICtrlSetData($ComboModelLGFrp, "H818N|H818P|H810|H815|H819|LS991|VS986|LS996|F560L|F510S|US995|H950A|F560K|LS770|H631|MS631|H340|H343|H525|H525n|H522|H735|H735DS|H735l")
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				Global $ButtonSelect = GUICtrlCreateButton("Select", 96, 104, 75, 25)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###

				While 1
					global $nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($FormLGFrp)
							EnableButtons()
							ExitLoop

						Case $ButtonSelect
							Global $mod = GUICtrlRead($ComboModelLGFrp)
							GUIDelete($FormLGFrp)
							_GUICtrlEdit_SetText ($Edit1, "")
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG " & $mod & " FRP via Download  Mode" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$pro = GUICtrlRead($Edit1)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando dispositivo en modo Download..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $star = TimerInit()
							Do
								$CHECKIN = checklg()
								Sleep(100)
								if StringInStr($CHECKIN, "COM") == 0 Then
									Global $Connect = 0
								Else
									$Connect = 1
									ExitLoop
								EndIf
								Sleep(100)
							Until TimerDiff($star) > 5000
							if $Connect == 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo no detectado, proceso fallido..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
								deletefrplg()
								ExitLoop
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo detectado en el puerto: " & $CHECKIN & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Sleep(1000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Obteniendo Recursos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								If $mod == 'H818N' Or $mod == 'H818P' Or $mod == 'H810' Or $mod == 'H815' Or $mod == 'H819' Or $mod == 'LS991' Or $mod == 'VS986' Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Corriendo bypass LG G4 variant..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If Not FileExists(@ScriptDir & "\LGoneClick.zip") Then
										FileInstall("LGoneClick.zip", @ScriptDir & "\LGoneClick.zip", 1)
									EndIf
									If Not FileExists(@ScriptDir & "\vb") Then
										FileInstall("vb", @ScriptDir & "\vb", 1)
									EndIf
									If Not FileExists(@ScriptDir & "\leave") Then
										FileInstall("leave", @ScriptDir & "\leave", 1)
									EndIf
									$ipid = _Zip_Unzip(@ScriptDir & "\LGoneClick.zip", "Send_Command.exe", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\LGoneClick.zip")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por Favor espere..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("Send_Command.exe \\.\" & $CHECKIN & " < vb", "", @SW_HIDE, $stderr_child + $stdout_child)
									Global $star = TimerInit()
									Do
										 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										 If StringInStr($soutput, "Author : blog.lvu.kr") <> 0 Then
											ExitLoop
										 EndIf
										 Sleep(100)
									Until TimerDiff($star) > 10000
									ProcessClose($ipid)
									If StringInStr($soutput, "Author : blog.lvu.kr") <> 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										commandwait("Send_Command.exe \\.\" & $CHECKIN & " < leave")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado! Si el dispositivo no reinicia, hagalo manualmente." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										deletefrplg()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										deletefrplg()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
								EndIf
								If $mod == 'LS996' Or $mod == 'F560L' Or $mod == 'F510S' Or $mod == 'US995' Or $mod == 'H950A' Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Corriendo bypass LG Flex 2 variant... " & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If Not FileExists(@ScriptDir & "\LGoneClick.zip") Then
										FileInstall("LGoneClick.zip", @ScriptDir & "\LGoneClick.zip", 1)
									EndIf
									If Not FileExists(@ScriptDir & "\te") Then
										FileInstall("te", @ScriptDir & "\te", 1)
									EndIf
									If Not FileExists(@ScriptDir & "\leave") Then
										FileInstall("leave", @ScriptDir & "\leave", 1)
									EndIf
									$ipid = _Zip_Unzip(@ScriptDir & "\LGoneClick.zip", "Send_Command.exe", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\LGoneClick.zip")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por Favor espere..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("Send_Command.exe \\.\" & $CHECKIN & " < te", "", @SW_HIDE, $stderr_child + $stdout_child)
									Global $star = TimerInit()
									Do
										 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										 If StringInStr($soutput, "Author : blog.lvu.kr") <> 0 Then
											ExitLoop
										 EndIf
										 Sleep(100)
									Until TimerDiff($star) > 10000
									ProcessClose($ipid)
									If StringInStr($soutput, "Author : blog.lvu.kr") <> 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										commandwait("Send_Command.exe \\.\" & $CHECKIN & " < leave")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										deletefrplg()
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										deletefrplg()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Fail" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
								EndIf
								If $mod == 'F560K' Or $mod == 'LS770' Or $mod == 'H631' Or $mod == 'MS631' Or $mod == 'H340' Or $mod == "H343" Or $mod == "H525" Or $mod == "H525n" Or $mod == "H522" Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Corriendo bypass LG... " & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If Not FileExists(@ScriptDir & "\LGoneClick.zip") Then
										FileInstall("LGoneClick.zip", @ScriptDir & "\LGoneClick.zip", 1)
									EndIf
									If Not FileExists(@ScriptDir & "\ne") Then
										FileInstall("ne", @ScriptDir & "\ne", 1)
									EndIf
									If Not FileExists(@ScriptDir & "\leave") Then
										FileInstall("leave", @ScriptDir & "\leave", 1)
									EndIf
									$ipid = _Zip_Unzip(@ScriptDir & "\LGoneClick.zip", "Send_Command.exe", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\LGoneClick.zip")
									$ipid = Run("Send_Command.exe \\.\" & $CHECKIN & " < ne", "", @SW_HIDE, $stderr_child + $stdout_child)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por Favor espere..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Global $star = TimerInit()
									Do
										 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										 If StringInStr($soutput, "Author : blog.lvu.kr") <> 0 Then
											ExitLoop
										 EndIf
										 Sleep(100)
									Until TimerDiff($star) > 10000
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									ProcessClose($ipid)
									If StringInStr($soutput, "Author : blog.lvu.kr") <> 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										commandwait("Send_Command.exe \\.\" & $CHECKIN & " < leave")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										deletefrplg()
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										deletefrplg()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
								EndIf
								If $mod == 'H735' Or $mod == 'H735DS' Or $mod == 'H735l' Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Corriendo bypass LG G4S... " & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If Not FileExists(@ScriptDir & "\LGoneClick.zip") Then
										FileInstall("LGoneClick.zip", @ScriptDir & "\LGoneClick.zip", 1)
									EndIf
									If Not FileExists(@ScriptDir & "\nz") Then
										FileInstall("nz", @ScriptDir & "\nz", 1)
									EndIf
									If Not FileExists(@ScriptDir & "\leave") Then
										FileInstall("leave", @ScriptDir & "\leave", 1)
									EndIf
									$ipid = _Zip_Unzip(@ScriptDir & "\LGoneClick.zip", "Send_Command.exe", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\LGoneClick.zip")
									$ipid = Run("Send_Command.exe \\.\" & $CHECKIN & " < nz", "", @SW_HIDE, $stderr_child + $stdout_child)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por Favor espere..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Global $star = TimerInit()
									Do
										 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										 If StringInStr($soutput, "Author : blog.lvu.kr") <> 0 Then
											ExitLoop
										 EndIf
										 Sleep(100)
									Until TimerDiff($star) > 10000
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									ProcessClose($ipid)
									If StringInStr($soutput, "Author : blog.lvu.kr") <> 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										commandwait("Send_Command.exe \\.\" & $CHECKIN & " < leave")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										deletefrplg()
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										deletefrplg()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Modelo Incorrecto!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									logs()
									EnableButtons()
									ExitLoop
								EndIf
							EndIf
					EndSwitch
				WEnd
			 EndIf
			 If GUICtrlRead($RadioFRPBypass) = 1 Then
				SetProcLanDefinitive("samfrpopenbrowser" & $indicator)
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("frpopenbrowser", "128")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadINfoAT()
					If $dejaver == 1 then
						If Not FileExists(@TempDir & "\frp.zip") Then
							FileInstall("frp.zip", @TempDir & "\frp.zip", $FC_OVERWRITE)
						EndIf
						$ipid = _Zip_UnzipAll(@TempDir & "\frp.zip", @TempDir, 1)
						ProcessWaitClose($ipid)
						FileDelete(@TempDir & "\frp.zip")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2])
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(500)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4])
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = ShellExecute('FRPBypass.cmd', "", @TempDir, "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[5] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[6] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[7] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DirRemove(@TempDir & "\bin", $DIR_REMOVE)
						DirRemove(@TempDir & "\drivers", $DIR_REMOVE)
						FileDelete(@TempDir & "\FRPBypass.cmd")
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[10] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "128")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			 EndIf

		Case $n9560
			 DisableButtons()
			If Not FileExists(@ScriptDir & "\Unlock.bat") Then
				FileInstall("Unlock.bat", @ScriptDir & "\Unlock.bat", 1)
			EndIf
			_GUICtrlEdit_SetText ($Edit1, "")
		    _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ZTE N9560 Unlock" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				Sleep(1000)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Modelo..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
				ProcessWaitClose($ipid)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If $soutput == "N9560" Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Modelo Soportado: OK" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep (1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Compilación..."  & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb shell getprop ro.build.display.id", "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If $soutput == "HailSabih@gmail.com Tel: +967 777719960" Or $soutput == "N9560V1.0.0B03" Or $soutput == "N9560V1.0.0B04" Or $soutput == "N9560V1.0.0B05" Or $soutput == "N9560V1.0.0B07" Or $soutput == "N9560V1.0.0B08" Or $soutput == "N9560V1.0.0B09" Or $soutput == "N9560V1.0.0B10" Or $soutput == "N9560V1.0.0B11" Or $soutput == "N9560V1.0.0B12"  Or $soutput == "N9560V1.0.0B13" Or $soutput == "N9560V1.0.0B14" Or $soutput == "N9560V1.0.0B15" Or $soutput == "N9560V1.0.0B16" Or $soutput == "N9560V1.0.0B17" Or $soutput == "N9560V1.0.0B18" Or $soutput == "N9560V1.0.0B19" Or $soutput == "N9560V1.0.0B20" Or $soutput == "N9560V1.0.0B21" Or $soutput == "N9560V1.0.0B22" Then
						Sleep (1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Root..."  & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("adb remount", "", @SW_HIDE, $stderr_child + $stdout_child)
						ProcessWaitClose($ipid)
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						if $soutput == "remount succeeded" Then
							Sleep (1000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..."  & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = RunWait("Unlock.bat", "", @SW_HIDE)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!"  & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
							FileDelete(@ScriptDir & "\Unlock.bat")
						Else
							MsgBox(16, "Advertencia", "NO ROOT!! POR FAVOR ROOTEE PRIMERO" & @CRLF & @CRLF & 'NO ROOT!! PLEASE ROOT PHONE FIRST')
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido."  & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						MsgBox(16, "Advertencia", "COMPILACION NO SOPORTADA" & @CRLF & @CRLF & 'VERSION NOT SUPPORTED')
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido."  & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					MsgBox(16, "Advertencia", "MODELO NO SOPORTADO" & @CRLF & @CRLF & 'MODEL NOT SUPPORTED')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido."  & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					 AddLog()
					 logs()
					 EnableButtons()
				EndIf
			Else
				EnableButtons()
			EndIf


		Case $modelcheck
			DisableButtons()
			_GUICtrlEdit_SetText($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Xiaomi Model Checker" & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			$pro = GUICtrlRead($Edit1)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			$soutput = FastbootDetect()
			If $soutput == 0 Then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 EnableButtons()
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				XiaomiFastbootInfo()
				firma()
				AddLog()
				logs()
				EnableButtons()
			 EndIf

		case $codigoxmodelo
			$sText = "ferrari = Xiaomi Mi 4i" & @CRLF & _
                     "gemini = Xiaomi Mi 5" & @CRLF & _
                     "gucci = Redmi Note Prime (4G Dual-SIM)" & @CRLF & _
					 "hennessy = Redmi Note 3 MTK" & @CRLF & _
                     "hydrogen = Xiaomi Mi Max 16/32GB" & @CRLF & _
					 "helium = Xiaomi Mi Max 64G/128G" & @CRLF & _
					 "ido_xhdpi = Redmi 3/Prime" & @CRLF & _
                     "kenzo = Redmi Note 3 Qualcomm/Pro" & @CRLF & _
					 "kate = Redmi Note 3 Special Edition" & @CRLF & _
                     "nikel = Redmi Note 4/MTK" & @CRLF & _
                     "land = Redmi 3S/Prime/3X" & @CRLF & _
                     "latte = Xiaomi Mi Pad 2" & @CRLF & _
					 "leo = Xiaomi Mi Note Pro" & @CRLF & _
                     "libra = Xiaomi Mi 4c" & @CRLF & _
                     "mione_plus = Xiaomi Mi 1/1S" & @CRLF & _
                     "mocha = Xiaomi Mi Pad 1" & @CRLF & _
					 "pisces = Mi3 TD" & @CRLF & _
                     "virgo = Xiaomi Mi Note" & @CRLF & _
                     "wt88047 = Redmi 2" & @CRLF & _
                     "wt88047_pro = Xiaomi Mi 2A" & @CRLF & _
                     "taurus = Xiaomi Mi 2A" & @CRLF & _
                     "capricorn = Xiaomi Mi 5s" & @CRLF & _
					 "omega = Redmi Pro" & @CRLF & _
					 "mido = Redmi Note 4" & @CRLF & _
                     "natrium = Xiaomi Mi 5s Plus"
                    #Region ### START Koda GUI section ### Form=
                     $hGUI = GUICreate("Codigos por Modelos", 304, 349, 432, 198)
                     $hEdit = GUICtrlCreateEdit($sText & @CRLF, 10, 10, 280, 320, BitOR($ES_AUTOVSCROLL,$ES_AUTOHSCROLL,$ES_READONLY,$ES_WANTRETURN,$WS_VSCROLL))
                     GUISetState(@SW_SHOW)
                    #EndRegion ### END Koda GUI section ###

While 1
	$nMsg = GUIGetMsg()
	Switch $nMsg
		Case $GUI_EVENT_CLOSE
			GUIDelete($hGUI)
			ExitLoop

	EndSwitch
WEnd

		Case $miaccount
			DisableButtons()
			_GUICtrlEdit_SetText ($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Mi Account via ADB" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				Sleep(1000)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo Cuenta..." & @CRLF)
				$ipid = Run("adb shell pm uninstall -k --user 0 com.xiaomi.finddevice", "", @SW_HIDE)
				ProcessWaitClose($ipid)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				firma()
				AddLog()
				logs()
				EnableButtons()
			Else
				EnableButtons()
			EndIf

		Case $ftmedl
			DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " FTM reboot EDL" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			 $dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo...")
				 $ipid = RunWait("adb.exe wait-for-device", "", @SW_HIDE)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
				 $ipid = Run("adb reboot edl", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				firma()
				AddLog()
				logs()
				EnableButtons()
			Else
				EnableButtons()
			EndIf

        Case $fastboot2edl
			DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Fastboot 2 EDL" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
			 $soutput = _RunWaitGet(@ComSpec & ' /k ' & 'fastboot devices',1,"", @SW_HIDE)
			 If StringInStr($soutput, 'fastboot') <> 0 Then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
				 $ipid = RunWait("fastboot oem edl", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 Sleep(1000)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
			 Else
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 EnableButtons()
			 EndIf

		Case $n9137root
			DisableButtons()
			Global $ipid = ''
			Global $soutput = ''
			_GUICtrlEdit_SetText($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " N9137 Root" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				Sleep(1000)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Modelo..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
				ProcessWaitClose($ipid)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If $soutput == "N9137" Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Modelo Soportado: OK" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep (1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo EDL..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb reboot edl", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					Sleep(3000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Puerto QCOMM!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					#Region ### START Koda GUI section ### Form=
					Global $ComPortsSelector = GUICreate("Com Ports Selection", 544, 130, -1, -1)
					Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
					Global $inputcomport = GUICtrlCreateCombo("", 32, 40, 233, 25)
					GUICtrlSetData($inputcomport, _CommListPorts(1))
					GUICtrlCreateGroup("", -99, -99, 1, 1)
					Global $continuar = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
					Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
					Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
					Global $Label3 = GUICtrlCreateLabel("SELECT 9008 PORT.", 312, 80, 126, 17)
					Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
					Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
					GUISetState(@SW_SHOW)
					#EndRegion ### END Koda GUI section ###

					While 1
						$nMsg = GUIGetMsg()
						Switch $nMsg
							Case $GUI_EVENT_CLOSE
								 GUIDelete($ComPortsSelector)
								 EnableButtons()
								 ExitLoop

							Case $ButtonrefreshComm
								GUICtrlSetData($inputcomport,"")
								GUICtrlSetData($inputcomport, _CommListPorts(1))

							Case $OpenDeviceMGM
								OpenDevMenu()

							Case $continuar
								 $comfromuser = GUICtrlRead($inputcomport)
								 GUIDelete($ComPortsSelector)
								 If Not FileExists(@ScriptDir & "\Resources\N9137.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$sDownloaderTitle = "Descargando Resources"
									$url            = "http://mcu-tool.com/MCU-Tool Resources/N9137/N9137.mcu"
									$file           = "N9137.mcu"
									$name           = "N9137.mcu"
									$dir            = @ScriptDir & "\Resources\"
									_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
								 EndIf
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Archivos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								If FileExists(@ScriptDir & "\Resources\N9137.mcu") Then
									 $ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\N9137.mcu", @ScriptDir & "\Resources\N9137.zip", $decrypt, $iAlgorithm)
									ProcessWaitClose($ipid)
									$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\N9137.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\Resources\N9137.zip")
									 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando Cargador....."  & @CRLF)
									 $ipid = Run("emmcdl.exe -p " & $comfromuser & " -f N9137.mbn -x rawprogram1.xml", "",@SW_HIDE, $stderr_child + $stdout_child)
									 ProcessWaitClose($ipid)
									 If CheckSuccess() == "Did not receive Sahara hello packet from device" Then
										 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Failed to write hello response back to device"  & @CRLF)
										 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										 Sleep(1000)
										 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!"  & @CRLF)
										 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										 FileDelete(@ScriptDir & "\check.txt")
										 FileDelete(@ScriptDir & "\N9137.mbn")
										 FileDelete(@ScriptDir & "\rawprogram1.xml")
										 FileDelete(@ScriptDir & "\unlock.bin")
										 FileDelete(@ScriptDir & "\recovery.img")
										 FileDelete(@ScriptDir & "\A+R.img")
										 firma()
										 AddLog()
										 logs()
										 EnableButtons()
										 ExitLoop
									 Else
										 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Rooteando..."  & @CRLF)
										 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										 Sleep(3000)
										 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado, reinicie su dispositivo manualmente!"  & @CRLF)
										 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										 FileDelete(@ScriptDir & "\check.txt")
										 FileDelete(@ScriptDir & "\N9137.mbn")
										 FileDelete(@ScriptDir & "\rawprogram1.xml")
										 FileDelete(@ScriptDir & "\unlock.bin")
										 FileDelete(@ScriptDir & "\recovery.img")
										 FileDelete(@ScriptDir & "\A+R.img")
										 firma()
										 AddLog()
										 logs()
										 EnableButtons()
										 ExitLoop
									EndIf
								Else
									MsgBox(16, "MCU Tool", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resoources!')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!"  & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									 firma()
									 AddLog()
									 logs()
									 EnableButtons()
									ExitLoop
								EndIf
						EndSwitch
					WEnd
				Else
					MsgBox(16, "Advertencia", "Modelo NO soportado" & @CRLF & @CRLF & 'Model not supported')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!"  & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			Else
				EnableButtons()
			EndIf

		Case $n9137unlock
			DisableButtons()
			_GUICtrlEdit_SetText ($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " N9137 Unlock" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				If Not FileExists(@ScriptDir & "\Resources\UnlockN9137.zip") Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$sDownloaderTitle = "Descargando Resources"
					$url            = "http://mcu-tool.com/MCU-Tool Resources/N9137/UnlockN9137.zip"
					$file           = "UnlockN9137.zip"
					$name           = "UnlockN9137.zip"
					$dir            = @ScriptDir & "\Resources\"
					_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
				EndIf
				If FileExists(@ScriptDir & "\Resources\UnlockN9137.zip") Then
					$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\UnlockN9137.zip", @ScriptDir, 1)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Trabajando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = command("adb reboot recovery")
					ProcessWaitClose($ipid)
					MsgBox(64, 'MCU Tool', 'Espere que el dispositivo Bootee completamente y presione Aceptar para continuar' & @CRLF & @CRLF & 'Wait for device to boot completely and click OK to continue')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando archivos al dispositivo..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					RunWait("adb wait-for-device", "", @SW_HIDE)
					Sleep(1000)
					$ipid = command("adb push unlockn9137 /system")
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando, paso 1..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = command("adb shell system/xbin/./start_kusud.sh")
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando, paso 2..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(8000)
					RunWait("adb wait-for-device", "", @SW_HIDE)
					$ipid = command("adb shell system/xbin/./start_kusud.sh")
					ProcessWaitClose($ipid)
					Sleep(8000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando, paso 3..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					RunWait("adb wait-for-device", "", @SW_HIDE)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Abriendo Menu oculto..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = command("adb shell am start -a android.intent.action.MAIN -n com.zte.emode/.NetworkS")
					ProcessWaitClose($ipid)
					MsgBox(64, 'MCU Tool', 'En el Menu de desbloqueo del telefeno seleccione 2 veces UNLOCK en la opcion SIM LOCK, y deshabilite las otras dos opciones y presione Aceptar para continuar' & @CRLF & @CRLF & 'In Unlock menu that  will show in your device screen select twice UNLOCK in SIM UNLOCK option, and deactivate other two options, then click OK to continue')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					RunWait("adb wait-for-device", "", @SW_HIDE)
					$ipid = command("adb reboot recovery")
					ProcessWaitClose($ipid)
					MsgBox(64, 'MCU Tool', 'Espere que el dispositivo Bootee completamente y presione Aceptar para continuar' & @CRLF & @CRLF & 'Wait for device  to boot completely and then click OK to continue')
					$ipid = command("adb remount")    ;revisar
					ProcessWaitClose($ipid)
					RunWait("adb wait-for-device", "", @SW_HIDE)
					Sleep(1000)
					$ipid = command("adb push rsb data/local/tmp/")
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell dd of=/dev/block/bootdevice/by-name/recovery if=/data/local/tmp/rsb", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb remount", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					RunWait("adb wait-for-device", "", @SW_HIDE)
					Sleep(1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb shell rm /system/bin/su", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell rm /system/xbin/su", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell rm /system/xbin/ku.sud", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell rm /system/xbin/daemonsu", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell rm /system/xbin/daemonsu_old", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell rm /system/xbin/krdem", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell rm /system/xbin/procrank", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell rm /system/xbin/start_kusud.sh", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell rm /system/xbin/sugote", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell rm /system/xbin/sugote-mksh", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell rm /system/xbin/supolicy ", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell rm -R /system/priv-app/King", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell rm -R /data/local/tmp/*", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb remount", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = RunWait("adb wait-for-device", "", @SW_HIDE)
					Sleep(1000)
					$ipid = Run("adb shell svc power reboot", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					Sleep(1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 DirRemove(@ScriptDir  & "\unlockn9137", $DIR_REMOVE)
					 FileDelete(@ScriptDir  & "\rsb")
					 firma()
					 AddLog()
					 logs()
					 EnableButtons()
				Else
					MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			Else
				EnableButtons()
			EndIf

		Case $adbedl
			DisableButtons()
			_GUICtrlEdit_SetText ($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ADB reboot EDL" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
				$ipid = Run("adb reboot edl", "", @SW_HIDE)
				ProcessWaitClose($ipid)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				firma()
				AddLog()
				logs()
				EnableButtons()
			Else
				EnableButtons()
			EndIf

		Case $dojob
			global $sComboRead = ""
			global $comfromuser = ""
			Global $sComboRead = GUICtrlRead($SelectModel)
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("dojob", "75")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $sComboRead & " FRP reset EDL" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$pro = GUICtrlRead($Edit1)
				If _IsChecked($Checkboxzteedlfrp) Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando dispositivo en modo EDL... ")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$comfromuser = checkqcomm()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione el puerto EDL... ")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					#Region ### START Koda GUI section ### Form=
					Global $ComPortsSelector = GUICreate("Com Ports Selection", 544, 130, -1, -1)
					Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
					Global $inputcomport = GUICtrlCreateCombo("", 32, 40, 233, 25)
					GUICtrlSetData($inputcomport, _CommListPorts(1))
					GUICtrlCreateGroup("", -99, -99, 1, 1)
					Global $continuar = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
					Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
					Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
					Global $Label3 = GUICtrlCreateLabel("SELECT 9008 PORT.", 312, 80, 126, 17)
					Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
					Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
					GUISetState(@SW_SHOW)
					#EndRegion ### END Koda GUI section ###

					While 1
						$nMsg = GUIGetMsg()
						Switch $nMsg

							Case $GUI_EVENT_CLOSE
								GUIDelete($ComPortsSelector)
								EnableButtons()
								ExitLoop

							Case $ButtonrefreshComm
								GUICtrlSetData($inputcomport,"")
								GUICtrlSetData($inputcomport, _CommListPorts(1))

							Case $OpenDeviceMGM
								OpenDevMenu()

							Case $continuar
								$comfromuser = GUICtrlRead($inputcomport)
								GUIDelete($ComPortsSelector)
								ExitLoop

						EndSwitch

					WEnd
				EndIf
				If $comfromuser <> '' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $comfromuser & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					If Not FileExists(@ScriptDir & "\ZTEFRP.zip") Then
						FileInstall("ZTEFRP.zip", @ScriptDir & "\ZTEFRP.zip", 1)
					EndIf
					$ipid = _Zip_Unzip(@ScriptDir & "\ZTEFRP.zip",  $sComboRead & ".mbn", @ScriptDir)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando Cargador...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("emmcdl.exe -p " & $comfromuser & " -f " & $sComboRead & ".mbn -e config", "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					$checkzte = CheckSuccess()
					If $checkzte == "Did not receive Sahara hello packet from device" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Fallido!"  & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!"  & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FileDelete(@ScriptDir & "\check.txt")
						FileDelete(@ScriptDir & "\ZTEFRP.zip")
						FileDelete(@ScriptDir & "\" & $sComboRead & ".mbn")
						firma()
						AddLog()
						logs()
						DeleteRecurrencia($imei & "75")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
						ExitLoop
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey"  & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reseteando FRP..." )
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey"  & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FileDelete(@ScriptDir & "\check.txt")
						FileDelete(@ScriptDir & "\ZTEFRP.zip")
						FileDelete(@ScriptDir & "\" & $sComboRead & ".mbn")
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ningun puerto detectado o seleccionado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					DeleteRecurrencia($imei & "75")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $z981root
			DisableButtons()
			_GUICtrlEdit_SetText ($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Z981 Root" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en EDL" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = Run("adb reboot edl", "", @SW_HIDE)
				ProcessWaitClose($ipid)
				Sleep(3000)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Puerto QCOMM!" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				#Region ### START Koda GUI section ### Form=
				Global $ComPortsSelector = GUICreate("Com Ports Selection", 544, 130, -1, -1)
				Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
				Global $inputcomport = GUICtrlCreateCombo("", 32, 40, 233, 25)
				GUICtrlSetData($inputcomport, _CommListPorts(1))
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				Global $continuar = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
				Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
				Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
				Global $Label3 = GUICtrlCreateLabel("SELECT 9008 PORT.", 312, 80, 126, 17)
				Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
				Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###

				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($ComPortsSelector)
							EnableButtons()
							ExitLoop

						Case $OpenDeviceMGM
							OpenDevMenu()

						Case $ButtonrefreshComm
							GUICtrlSetData($inputcomport,"")
							GUICtrlSetData($inputcomport, _CommListPorts(1))

						Case $continuar
							$comfromuser = GUICtrlRead($inputcomport)
							GUIDelete($ComPortsSelector)
							If StringInStr($comfromuser, "COM") <> 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Conectando a Puerto: " & $comfromuser & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								If Not FileExists(@ScriptDir & "\Resources\Z981Root.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$sDownloaderTitle = "Descargando Resources"
									$url            = "http://mcu-tool.com/MCU-Tool Resources/Recursos/Z981Root.mcu"
									$file           = "Z981Root.mcu"
									$name           = "Z981Root.mcu"
									$dir            = @ScriptDir & "\Resources\"
									_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
								 EndIf
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Archivos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								If FileExists(@ScriptDir & "\Resources\Z981Root.mcu") Then
									$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\Z981Root.mcu", @ScriptDir & "\Resources\Z981Root.zip", $decrypt, $iAlgorithm)
									ProcessWaitClose($ipid)
									$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\Z981Root.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\Resources\Z981Root.zip")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando Cargador..."  & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("emmcdl.exe -p " & $comfromuser & " -f Z981.mbn -x r.xml", "", @SW_HIDE, $stderr_child + $stdout_child)
									ProcessWaitClose($ipid)
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									If StringInStr( $soutput, "Did not receive Sahara hello packet from device") <> 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Failed to write hello response back to device"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Sleep(1000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										FileDelete(@ScriptDir & "\Z981.mbn")
										FileDelete(@ScriptDir & "\TWRP.img")
										FileDelete(@ScriptDir & "\r.xml")
										FileDelete(@ScriptDir & "\Magisk-v16.6.zip")
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										MsgBox(64, "", " Mantenga presionado vol+ y power hasta que entre en modo recovery. Cuando este en recovery haga un Format Data y vuelva a reiniciar en recovery, una vez dentro del recovery ponga el dispositivo en sideload y Presione ENTER para continuar" & @CRLF & @CRLF & 'Keep pressing vol+ and Pow untill device go to recovery mode, make a format data and reboot to recovery again, put device in adb sideload and click ENTER to continue')
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando root..."  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Sleep(3000)
										$ipid = Run("adb sideload Magisk-v16.6.zip", "",@SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Si no encuentra Magisk, instale la aplicacion manualmente."  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										FileDelete(@ScriptDir & "\Z981.mbn")
										FileDelete(@ScriptDir & "\TWRP.img")
										FileDelete(@ScriptDir & "\r.xml")
										FileDelete(@ScriptDir & "\Magisk-v16.6.zip")
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									EndIf
								Else
									 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									 firma()
									 AddLog()
									 logs()
									 EnableButtons()
									 ExitLoop
								EndIf
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
								ExitLoop
							EndIf

					EndSwitch
					WEnd
			Else
				EnableButtons()
			EndIf

		Case $z982unlock
			Global $precio = ''
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("Z982", "112")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Z982 Unlock" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					$imei = IxxxProcess(GUICtrlRead($Edit1))
					Global $dime = IsCreditNedded2("18", $key)
					If $activo == 1 Then
						Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "18")
					EndIf
					If $confirm <> "NO" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If $key == False Then
							DeleteRecurrencia($imei & "112")
							refund(GUICtrlRead($Edit1))
							WrongKey($imei)
						ElseIf $key == 0 Then
							DeleteRecurrencia($imei & "112")
							refund(GUICtrlRead($Edit1))
							Error0002($imei)
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Sleep(1000)
							If Not FileExists(@ScriptDir & "\Resources\Z982.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$sDownloaderTitle = "Descargando Resources"
								$url            = "http://mcu-tool.com/MCU-Tool Resources/Z982/Z982.mcu"
								$file           = "Z982.mcu"
								$name           = "Z982.mcu"
								$dir            = @ScriptDir & "\Resources\"
								_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
							EndIf
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Archivos..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If FileExists(@ScriptDir & "\Resources\Z982.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Modelo...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
								ProcessWaitClose($ipid)
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								If $soutput == "Z982" Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Sleep (1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Compilación...")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb shell getprop ro.build.display.id", "", @SW_HIDE, $stderr_child + $stdout_child)
									ProcessWaitClose($ipid)
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									If $soutput == "Z982_MPCSV1.0.0B01" Or $soutput == "Z982_MPCSV1.0.0B02" Or $soutput == "Z982_MPCSV1.0.0B03" Or $soutput == "Z982_MPCSV1.0.0B04" Or $soutput == "Z982_MPCSV1.0.0B05" Or $soutput == "Z982_MPCSV1.0.0B06" Or $soutput == "Z982_MPCSV1.0.0B07" Or $soutput == "Z982_MPCSV1.0.0B08" Or $soutput == "Z982_MPCSV1.0.0B09" Or $soutput == "Z982_MPCSV1.0.0B10"  Or $soutput == "Z982_MPCSV1.0.0B11" Or $soutput == "Z982_MPCSV1.0.0B12" Or $soutput == "Z982_MPCSV1.0.0B13" Or $soutput == "Z982_MPCSV1.0.0B14" Or $soutput == "Z982_MPCSV1.0.0B15" Or $soutput == "Z982_MPCSV1.0.0B16" Or $soutput == "Z982_MPCSV1.0.0B17" Or $soutput == "Z982_MPCSV1.0.0B18" Or $soutput == "Z982_MPCSV1.0.0B19" Or $soutput == "Z982_MPCSV1.0.0B20" Or $soutput == "Z982_MPCSV1.0.0B21" Or $soutput == "Z982_MPCSV1.0.0B22" Or $soutput == "Z982_MPCSV1.0.0B23" Or $soutput == "Z982_MPCSV1.0.0B24" Or $soutput == "Z982_MPCSV1.0.0B25" Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Sleep (1000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando ADB...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb kill-server", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										$ipid = Run("adb start-server", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										$ipid = RunWait("adb wait-for-device", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Sleep(1000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo EDL"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Sleep(1000)
										$ipid = Run("adb reboot edl", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										Sleep(3000)
										#Region ### START Koda GUI section ### Form=
										Global $ComPortsSelector = GUICreate("Com Ports Selection", 544, 130, -1, -1)
										Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
										Global $inputcomport = GUICtrlCreateCombo("", 32, 40, 233, 25)
										GUICtrlSetData($inputcomport, _CommListPorts(1))
										GUICtrlCreateGroup("", -99, -99, 1, 1)
										Global $continuar = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
										Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
										Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
										Global $Label3 = GUICtrlCreateLabel("SELECT 9008 PORT.", 312, 80, 126, 17)
										Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
										Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
										GUISetState(@SW_SHOW)
										#EndRegion ### END Koda GUI section ###

										While 1
											$nMsg = GUIGetMsg()
											Switch $nMsg
												Case $GUI_EVENT_CLOSE
													GUIDelete($ComPortsSelector)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cancelado por usuario" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													refund(GUICtrlRead($Edit1))
													DeleteRecurrencia($imei & "18")
													DeleteRecurrencia($imei & "112")
													EnableButtons()
													ExitLoop

												Case $OpenDeviceMGM
													OpenDevMenu()

												Case $ButtonrefreshComm
													GUICtrlSetData($inputcomport,"")
													GUICtrlSetData($inputcomport, _CommListPorts(1))

												Case $continuar
													 $comfromuser = GUICtrlRead($inputcomport)
													 GUIDelete($ComPortsSelector)
													 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Recursos..." & @CRLF)
													 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													 $ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\Z982.mcu", @ScriptDir & "\Resources\Z982.zip", $decrypt, $iAlgorithm)
													 ProcessWaitClose($ipid)
													 $ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\Z982.zip", @ScriptDir, 1)
													 ProcessWaitClose($ipid)
													 FileDelete(@ScriptDir & "\Resources\Z982.zip")
													 Sleep(1000)
													 Global $var = shori($dime[1], $key)
													 Global $unlockz982 = StringSplit($var, "{")
													 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
													 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													 $ipid = Run($unlockz982[1] & $comfromuser & " " & $unlockz982[2], "",@SW_HIDE, $stderr_child + $stdout_child)
													 ProcessWaitClose($ipid)
													 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													 If StringInStr( $soutput, "Did not receive Sahara hello packet from device") <> 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Failed to write hello response back to device"  & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Sleep(1000)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido"  & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														refund(GUICtrlRead($Edit1))
														DeleteRecurrencia($imei & "18")
														DeleteRecurrencia($imei & "112")
														firma()
														AddLog()
														logs()
														EnableButtons()
														FileDelete(@ScriptDir & "\fastboot.bin")
														FileDelete(@ScriptDir & "\gpt_backup0.bin")
														FileDelete(@ScriptDir & "\gpt_main0.bin")
														FileDelete(@ScriptDir & "\ztecfg.bin")
														FileDelete(@ScriptDir & "\Z982.xml")
														FileDelete(@ScriptDir & "\Z982.mbn")
														FileDelete(@ScriptDir & "\NON-HLOS.bin")
														ExitLoop
													 Else
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														FileDelete(@ScriptDir & "\fastboot.bin")
														FileDelete(@ScriptDir & "\gpt_backup0.bin")
														FileDelete(@ScriptDir & "\gpt_main0.bin")
														FileDelete(@ScriptDir & "\ztecfg.bin")
														FileDelete(@ScriptDir & "\Z982.mbn")
														FileDelete(@ScriptDir & "\Z982.xml")
														FileDelete(@ScriptDir & "\NON-HLOS.bin")
														Sleep(1000)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reinicie el dispositivo manualmente" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													EndIf
											 EndSwitch
										WEnd
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Soportada" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										refund(GUICtrlRead($Edit1))
										DeleteRecurrencia($imei & "18")
										DeleteRecurrencia($imei & "112")
										firma()
										AddLog()
										logs()
										EnableButtons()
									EndIf
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Soportado" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido."  & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									refund(GUICtrlRead($Edit1))
									DeleteRecurrencia($imei & "18")
									DeleteRecurrencia($imei & "112")
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							Else
								MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								refund(GUICtrlRead($Edit1))
								DeleteRecurrencia($imei & "18")
								DeleteRecurrencia($imei & "112")
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					Else
						_GUICtrlEdit_SetText ($Edit1, "")
						DeleteRecurrencia($imei & "112")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				Else
					DeleteRecurrencia($imei & "112")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf

        Case $qcommdiag
			DisableButtons()
			_GUICtrlEdit_SetText($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Qcomm Diag Enable" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				Sleep(500)
				$ipid = _Android_HasRootAccess()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				If $ipid == "False" Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				ElseIf $ipid == "True" Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Habilitando paquetes necesarios..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb shell su -c setprop sys.usb.config acm,diag,mtp,adb", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell su -c setprop sys.usb.config diag,adb", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			Else
				EnableButtons()
			EndIf

		Case $n9560root
			DisableButtons()
			_GUICtrlEdit_SetText($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " N9560 Root" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				Sleep(1000)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Modelo..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
				ProcessWaitClose($ipid)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If $soutput <> "N9560" Then
					MsgBox(16, "Advertencia", "Modelo NO soportado" & @CRLF & @CRLF & 'Model NOT Supported')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido."  & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				ElseIf $soutput == "N9560" Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Modelo Soportado: OK" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep (1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo EDL..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb reboot edl", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					Sleep(3000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Puerto QCOMM!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					#Region ### START Koda GUI section ### Form=
					Global $ComPortsSelector = GUICreate("Com Ports Selection", 544, 130, -1, -1)
					Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
					Global $inputcomport = GUICtrlCreateCombo("", 32, 40, 233, 25)
					GUICtrlSetData($inputcomport, _CommListPorts(1))
					GUICtrlCreateGroup("", -99, -99, 1, 1)
					Global $continuar = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
					Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
					Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
					Global $Label3 = GUICtrlCreateLabel("SELECT 9008 PORT.", 312, 80, 126, 17)
					Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
					Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
					GUISetState(@SW_SHOW)
					#EndRegion ### END Koda GUI section ###

					While 1
						$nMsg = GUIGetMsg()
						Switch $nMsg
							Case $GUI_EVENT_CLOSE
								 GUIDelete($ComPortsSelector)
								 EnableButtons()
								 ExitLoop

							Case $OpenDeviceMGM
								OpenDevMenu()

							Case $ButtonrefreshComm
								GUICtrlSetData($inputcomport,"")
								GUICtrlSetData($inputcomport, _CommListPorts(1))

							Case $continuar
								If Not FileExists(@ScriptDir & "\N9560.mbn") Then
									FileInstall("N9560.mbn", @ScriptDir & "\N9560.mbn", 1)
								 EndIf
								If Not FileExists(@ScriptDir & "\N9560.xml") Then
									FileInstall("N9560.xml", @ScriptDir & "\N9560.xml", 1)
								EndIf
								If Not FileExists(@ScriptDir & "\carrier.img") Then
									FileInstall("carrier.img", @ScriptDir & "\carrier.img", 1)
								EndIf
								$comfromuser = GUICtrlRead($inputcomport)
								GUIDelete($ComPortsSelector)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando Cargador....."  & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("emmcdl.exe -p " & $comfromuser & " -f N9560.mbn -x N9560.xml", "",@SW_HIDE)
								ProcessWaitClose($ipid)
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								If StringInStr( $soutput, "Did not receive Sahara hello packet from device") <> 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Failed to write hello response back to device"  & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido"  & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
									ExitLoop
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Rooteando..."  & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Sleep(3000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado, reinicie su dispositivo manualmente!"  & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									FileDelete(@ScriptDir & "\check.txt")
									FileDelete(@ScriptDir & "\N9560.mbn")
									FileDelete(@ScriptDir & "\N9560.xml")
									FileDelete(@ScriptDir & "\carrier.img")
									firma()
									AddLog()
									logs()
									EnableButtons()
									ExitLoop
								EndIf

						EndSwitch
					WEnd
				EndIf
			Else
				EnableButtons()
			EndIf

		Case $frpremovehuawei
			DisableButtons()
			global $sComboRead = ""
			$sComboRead = GUICtrlRead($huaweylist)
			_GUICtrlEdit_SetText($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Huawei " & $sComboRead & " FRP Reset via ADB" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Traspasando..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = Run("shell content insert --uri content://settings/secure --bind name:s:user_setup_complete --bind value:s:1", "", @SW_HIDE)
				ProcessWaitClose($ipid)
				$ipid = Run("shell am start -n com.sec.android.app.launcher/com.android.launcher2.Launcher", "", @SW_HIDE)
				ProcessWaitClose($ipid)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				firma()
				AddLog()
				logs()
				EnableButtons()
			Else
				EnableButtons()
			EndIf

		Case $mtpadb
			DisableButtons()
			 If Not FileExists(@ScriptDir & "\devsetup64.exe") Then
				FileInstall("devsetup64.exe", @ScriptDir & "\devsetup64.exe", 1)
			 EndIf
			_GUICtrlEdit_SetText ($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Huawei ADB Enable MTP Mode" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Habilitando..." & @CRLF)
			$ipid = command("devsetup64.exe /install/debug")
			ProcessWaitClose($ipid)
			Sleep(60000)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
			FileDelete(@ScriptDir & "\devsetup64.exe")
			FileDelete(@ScriptDir & "\Install.log")
			firma()
			AddLog()
		    logs()
			EnableButtons()

		Case $removerexynos
			$sComboRead = GUICtrlRead($ComboExynos)
			If $sComboRead = "Auto ADB" Then
				_GUICtrlEdit_SetText($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Seleccione un modelo de la lista!" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Proceso Fallido!" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				firma()
				EnableButtons()
			Else
				DisableButtons()
				SamsungFrpAdb($sComboRead)
			EndIf

        Case $ButtonQcomm
			DisableButtons()
			$sComboRead = GUICtrlRead($ComboQcomm)
			If StringInStr("SM-A310FD|SM-A310MD|SM-A310Y|SM-A510FD|SM-A510L|SM-A510MD|SM-A510Y|SM-A710F|SM-A710K|SM-A710M|SM-A710S|SM-A800F|SM-A800IZ|SM-A800YZ|SM-G150NK|SM-G150NS|SM-G389F|SM-G550F|SM-G550T|SM-G550T2|SM-G570M|SM-G610F|SM-G610FZ|SM-G610L|SM-G610S|SM-G800F|SM-G800M|SM-G850F|SM-G850K|SM-G850M|SM-G850Y|SM-G903FD|SM-G903W|SM-G920AZ|SM-G920F|SM-G920FZ|SM-G920K|SM-G920S|SM-G920T1|SM-G9250|SM-G9250F|SM-G925I|SM-G925L|SM-G925T|SM-G925W8|SM-G9287C|SM-G928F|SM-G928I|SM-G928L|SM-G928N0|SM-G928T|SM-G930F|SM-G930K|SM-G930S|SM-G935F|SM-G935K|SM-G935S|SM-J120A|SM-J120F|SM-J120G|SM-J120P|SM-J120ZN|SM-J200F|SM-J200GU|SM-J200Y|SM-J320AZ|SM-J321AZ|SM-J700H|SM-J700T|SM-J710F|SM-J710FN|SM-J710GN|SM-J710MN|SM-N910H|SM-N910L|SM-N910U|SM-N916L|SM-N920C|SM-N920F|SM-N920I|SM-N920L|SM-N920T|SM-N930F|SM-N930K|SM-N930S", $sComboRead) <> 0 Then
				_GUICtrlEdit_SetText($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung " & $sComboRead & " FRP Reset via Download Mode" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				If Not FileExists(@ScriptDir & "\Resources\specialex.mcu") Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$sDownloaderTitle = "Descargando Resources"
					$url            = "http://mcu-tool.com/MCU-Tool Resources/Recursos/specialex.mcu"
					$file           = "specialex.mcu"
					$name           = "specialex.mcu"
					$dir            = @ScriptDir & "\Resources\"
					_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
				 EndIf
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Archivos..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				If FileExists(@ScriptDir & "\Resources\specialex.mcu") Then
					$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\specialex.mcu", @ScriptDir & "\Resources\specialex.zip", $decrypt, $iAlgorithm)
					ProcessWaitClose($ipid)
					$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\specialex.zip", @ScriptDir, 1)
					ProcessWaitClose($ipid)
					FileDelete(@ScriptDir & "\Resources\specialex.zip")
					MsgBox(64, 'Informacion', 'Ponga el dispositivo en modo download y conectelo a la PC, Presione OK cuando este listo para Continuar' & @CRLF & @CRLF & 'Put device in download mode and connect it PC, click OK when ready to continue')
					Global $dldetect = DetectSamDownload()
					If $dldetect = 1 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run('dm flash --USERDATA ex.img', '', @SW_HIDE)
						ProcessWaitClose($ipid)
						$variable = CheckSuccessDownload()
						If $variable == '' Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							FileDelete(@ScriptDir & "\check.txt")
							FileDelete(@ScriptDir & "\ex.img")
							firma()
							AddLog()
							logs()
							EnableButtons()
						ElseIf $variable <> '' Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Sleep(500)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Si el dispositivo se queda en Blocked by FRP reincie en doewnload y repita el proceso en el modo Smart Switch." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							FileDelete(@ScriptDir & "\check.txt")
							FileDelete(@ScriptDir & "\ex.img")
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						FileDelete(@ScriptDir & "\check.txt")
						FileDelete(@ScriptDir & "\ex.img")
						EnableButtons()
					EndIf
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Archivos no encontrados." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			ElseIf $sComboRead = "Old Security" Or $sComboRead = "Antigua seguridad" Then
				_GUICtrlEdit_SetText($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Seleccione un modelo de la lista!" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Proceso Fallido!" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				firma()
				EnableButtons()
			Else
				_GUICtrlEdit_SetText($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Samsung " & $sComboRead & " FRP Reset via Download Mode" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				If Not FileExists(@ScriptDir & "\Resources\specialqc.mcu") Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$sDownloaderTitle = "Descargando Resources"
					$url            = "http://mcu-tool.com/MCU-Tool Resources/Recursos/specialqc.mcu"
					$file           = "specialqc.mcu"
					$name           = "specialqc.mcu"
					$dir            = @ScriptDir & "\Resources\"
					_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
				 EndIf
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Archivos..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				If FileExists(@ScriptDir & "\Resources\specialqc.mcu") Then
					$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\specialqc.mcu", @ScriptDir & "\Resources\specialqc.zip", $decrypt, $iAlgorithm)
					ProcessWaitClose($ipid)
					$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\specialqc.zip", @ScriptDir, 1)
					ProcessWaitClose($ipid)
					FileDelete(@ScriptDir & "\Resources\specialqc.zip")
					MsgBox(64, 'Informacion', 'Ponga el dispositivo en modo download y conectelo a la PC, Presione OK cuando este listo para Continuar' & @CRLF & @CRLF & 'Put device in download mode and connect it to PC, click OK when ready to continue')
					Global $dldetect = DetectSamDownload()
					If $dldetect = 1 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo..." & @CRLF)
						$ipid = Run('dm flash --USERDATA qc.img', '', @SW_HIDE)
						ProcessWaitClose($ipid)
						$variable = CheckSuccessDownload()
						If $variable == '' Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							FileDelete(@ScriptDir & "\check.txt")
							FileDelete(@ScriptDir & "\qc.img")
							firma()
							AddLog()
							logs()
							EnableButtons()
						ElseIf $variable <> '' Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Sleep(500)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Si el dispositivo se queda en Blocked by FRP reincie en doewnload y repita el proceso en el modo Smart Switch." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							FileDelete(@ScriptDir & "\check.txt")
							FileDelete(@ScriptDir & "\qc.img")
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						FileDelete(@ScriptDir & "\check.txt")
						FileDelete(@ScriptDir & "\qc.img")
						EnableButtons()
					EndIf
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			EndIf
		Case $unlocksamsung
			DisableButtons()
			global $sComboRead = ""
			$sComboRead = GUICtrlRead($unlocksam)
			If $sComboRead == $iArray[153] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("J327Unlock", "105")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " J327T/T1 Unlock" & @CRLF)
					Global $precio = ''
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoSamsung()
					If $dejaver == 1 then
						$imei = IxxxProcess(GUICtrlRead($Edit1))
						Global $dime = IsCreditNedded2("14", $key)
						Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "14")
						If $confirm <> "NO" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor...")
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If $key == False Then
								DeleteRecurrencia($imei & "105")
								refund(GUICtrlRead($Edit1))
								WrongKey($imei)
							ElseIf $key == 0 Then
								DeleteRecurrencia($imei & "105")
								refund(GUICtrlRead($Edit1))
								Error0002($imei)
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Modelo... " )
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
								ProcessWaitClose($ipid)
								Global $model = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								If StringInStr($model, "J327T") <> 0 then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb shell getenforce", "", @SW_HIDE, $stderr_child + $stdout_child)
									ProcessWaitClose($ipid)
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									if StringInStr($soutput, "Permissive") == 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Combination Firmware required!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										DeleteRecurrencia($imei & "105")
										refund(GUICtrlRead($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando debug level... ")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb shell getprop ro.boot.debug_level", "", @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										if StringInStr($soutput, "0x4948") == 0 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando High" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Global $ejec = IsCreditNedded2("10", $key)
											Global $var = shori($ejec[1], $key)
											Global $RebootDeb = StringSplit($var, "{")
											$ipid = Run($RebootDeb[1], "", @SW_HIDE)
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											RunWait("adb wait-for-device", "", @SW_HIDE)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											BootComplete()
										EndIf
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando procedimiento..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If Not FileExists(@ScriptDir & "\J327") Then
											FileInstall("J327", @ScriptDir & "\J327", $FC_OVERWRITE)
										EndIf
										Global $var = shori($dime[1], $key)
										Global $Unlock = StringSplit($var, "{")
										$ipid = Run($Unlock[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\J327")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo Permisos..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run($Unlock[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run($Unlock[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										Sleep(2000)
										$ver = StdinWrite($ipid, $Unlock[4] & @LF)
										Sleep(2000)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										If StringInStr($soutput, "Enter") <> 0 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											StdinWrite($ipid, "" & @LF)
											Sleep(6500)
											$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											If StringInStr($soutput, "Write : OK") == 0 Then
												StdinWrite($ipid, "" & @LF)
												Global $star = TimerInit()
												Do
													$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													If StringInStr($soutput1, "Write : OK") <> 0 Then
														Global $unlockok = 1
														ExitLoop
													ElseIf StringInStr($soutput1, "Not Support") <> 0 Then
														$unlockok = 0
														ExitLoop
													Else
														$unlockok = 0
													EndIf
														Sleep(100)
												Until TimerDiff($star) > 30000
												ProcessClose($ipid)
											Else
												Global $unlockok = 1
											EndIf
											If $unlockok == 1 then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb reboot", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												firma()
												AddLog()
												logs()
												EnableButtons()
											Else
												$ipid = Run("adb reboot", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "105")
												refund(GUICtrlRead($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
											EndIf
										Else
											$ipid = Run($Unlock[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 400!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											refund(GUICtrlRead($Edit1))
											DeleteRecurrencia($imei & "14")
											firma()
											AddLog()
											logs()
											EnableButtons()
										EndIf
									EndIf
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Soportado" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DeleteRecurrencia($imei & "105")
									refund(GUICtrlRead($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							EndIf
						Else
							_GUICtrlEdit_SetText ($Edit1, "")
							DeleteRecurrencia($imei & "105")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "105")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			EndIf
			If $sComboRead == $iArray[155] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " J260T/T1 & J737T/T1 Unlock" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoSamsung()
					If $dejaver == 1 then
						Global $sCheck = SamModCheck()
						If StringInStr($sCheck, "J260T") <> 0 Then
							$ipid = Run("adb shell getprop ro.bootloader", "", @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
							$bit = StringRight($soutput, 5)
							$lastbit = StringLeft($bit, 1)
							If $lastbit == '2' Then
								If Not FileExists(@ScriptDir & "\Resources\J260T.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$sDownloaderTitle = "Descargando Resources"
									$url            = "http://mcu-tool.com/MCU-Tool Resources/J260T/J260T.mcu"
									$file           = "J260T.mcu"
									$name           = "J260T.mcu"
									$dir            = @ScriptDir & "\Resources\"
									_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
								EndIf
								If FileExists(@ScriptDir & "\Resources\J260T.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Resources..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\J260T.mcu", @ScriptDir & "\Resources\J260T.zip", $decrypt, $iAlgorithm)
									ProcessWaitClose($ipid)
									$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\J260T.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\Resources\J260T.zip")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\EngBoot.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\EngBoot.zip")
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J260T1.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J260T1.zip")
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo Download, por favor espere..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb reboot download", "", @SW_HIDE)
									ProcessWaitClose($ipid)
									Sleep(10000)
									DetectSamDownload()
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flasheando EngBoot..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run('dm flash --BOOT boot.img', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									MsgBox(64, 'MCU Tool', 'Espere a que el dispositivo Bootee completamente y haga un hard reset, luego coloque en Download y presione Aceptar para continuar' & @CRLF & @CRLF & 'Wait for device to boot completely and perform a hard reset, then put device in download mode and click OK to continue')
									Sleep(5000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 1..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run('dm flash --CM cm.bin --RADIO modem.bin --ODM odm.img --PARAM param.bin --BOOTLOADER sboot.bin', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									MsgBox(64, 'Informacion', 'Reinicie el dispositivo en modo Recovery y haga un Hard Reset, luego espere a que botee completamente y cuando se encuentre en el administrador de inicio vuelva a reiniciar en modo Download y presione Aceptar para continuar')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando Archivos..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									FileDelete(@ScriptDir & "\boot.img")
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\odm.img")
									FileDelete(@ScriptDir & "\param.bin")
									FileDelete(@ScriptDir & "\sboot.bin")
									FileDelete(@ScriptDir & "\modem.bin")
									If Not FileExists(@ScriptDir & "\efsj260.img") Then
										FileInstall("efsj260.img", @ScriptDir & "\efsj260.img", 1)
									EndIf
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 2..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --EFS efsj260.img', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\efsj260.img")
									MsgBox(64, 'Informacion', 'Espere a que el dispositivo bootee completamente y haga un Hard Reset desde el Recovery, luego vuelva a reiniciar en modo Download y presione Aceptar para terminar' & @CRLF & @CRLF & 'Wait for device to boot completely and then make a harrd reset from recovery, then reboot again in Download mode and click OK to finish')
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 3..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J260T2.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J260T2.zip")
									DetectSamDownload()
									$ipid = Run('dm flash --CM cm.bin --RADIO modem.bin --ODM odm.img --PARAM param.bin --BOOTLOADER sboot.bin', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\odm.img")
									FileDelete(@ScriptDir & "\param.bin")
									FileDelete(@ScriptDir & "\sboot.bin")
									FileDelete(@ScriptDir & "\modem.bin")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							ElseIf $lastbit == '3' Then
								If Not FileExists(@ScriptDir & "\Resources\J260TU3.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$sDownloaderTitle = "Descargando Resources"
									$url            = "http://mcu-tool.com/MCU-Tool Resources/J260T/J260TU3.mcu"
									$file           = "J260TU3.mcu"
									$name           = "J260TU3.mcu"
									$dir            = @ScriptDir & "\Resources\"
									_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
								EndIf
								If FileExists(@ScriptDir & "\Resources\J260TU3.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Resources..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\J260TU3.mcu", @ScriptDir & "\Resources\J260TU3.zip", $decrypt, $iAlgorithm)
									ProcessWaitClose($ipid)
									$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\J260TU3.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\Resources\J260TU3.zip")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J260T1U3.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J260T1U3.zip")
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo Download, por favor espere..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb reboot download", "", @SW_HIDE)
									ProcessWaitClose($ipid)
									Sleep(10000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 1..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --BOOT boot.img --CM cm.bin --ODM odm.img --PARAM param.bin --BOOTLOADER sboot.bin', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									MsgBox(64, 'Informacion', 'Reinicie el dispositivo en modo Recovery y haga un Hard Reset, luego espere a que botee completamente y cuando se encuentre en el administrador de inicio vuelva a reiniciar en modo Download y presione Aceptar para continuar' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click ok to continue')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando Archivos..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									FileDelete(@ScriptDir & "\boot.img")
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\odm.img")
									FileDelete(@ScriptDir & "\param.bin")
									FileDelete(@ScriptDir & "\sboot.bin")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 2..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --EFS efs.img', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\efs.img")
									MsgBox(64, 'Informacion', 'Espere a que el dispositivo bootee completamente y haga un Hard Reset desde el Recovery, luego vuelva a reiniciar en modo Download y presione Aceptar para continuar' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click ok to continue')
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 3..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --EFS efs2.img', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\efs2.img")
									MsgBox(64, 'Informacion', 'Espere a que botee completamente el dispositivo y cuando se encuentre en el administrador de inicio vuelva a reiniciar en modo Download y presione Aceptar para continuar' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click ok to continue')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 4..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J260T2U3.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J260T2U3.zip")
									DetectSamDownload()
									$ipid = Run('dm flash --BOOT boot.img --CM cm.bin --RADIO modem.bin --ODM odm.img --BOOTLOADER sboot.bin', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\odm.img")
									FileDelete(@ScriptDir & "\boot.img")
									FileDelete(@ScriptDir & "\sboot.bin")
									FileDelete(@ScriptDir & "\modem.bin")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							ElseIf $lastbit == '4' Then
								If Not FileExists(@ScriptDir & "\Resources\J260TU4.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$sDownloaderTitle = "Descargando Resources"
									$url            = "http://mcu-tool.com/MCU-Tool Resources/J260T/J260TU4.mcu"
									$file           = "J260TU4.mcu"
									$name           = "J260TU4.mcu"
									$dir            = @ScriptDir & "\Resources\"
									_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
								EndIf
								If FileExists(@ScriptDir & "\Resources\J260TU4.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Resources..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\J260TU4.mcu", @ScriptDir & "\Resources\J260TU4.zip", $decrypt, $iAlgorithm)
									ProcessWaitClose($ipid)
									$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\J260TU4.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\Resources\J260TU4.zip")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J260T1U4.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J260T1U4.zip")
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo Download, por favor espere..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb reboot download", "", @SW_HIDE)
									ProcessWaitClose($ipid)
									Sleep(10000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 1..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --BOOT boot.img --CM cm.bin --ODM odm.img --PARAM param.bin --BOOTLOADER sboot.bin', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									MsgBox(64, 'Informacion', 'Reinicie el dispositivo en modo Recovery y haga un Hard Reset, luego espere a que botee completamente y cuando se encuentre en el administrador de inicio vuelva a reiniciar en modo Download y presione Aceptar para continuar' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click ok to continue')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando Archivos..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									FileDelete(@ScriptDir & "\boot.img")
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\odm.img")
									FileDelete(@ScriptDir & "\param.bin")
									FileDelete(@ScriptDir & "\sboot.bin")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 2..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --EFS efs.img', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\efs.img")
									MsgBox(64, 'Informacion', 'Espere a que el dispositivo bootee completamente y haga un Hard Reset desde el Recovery, luego vuelva a reiniciar en modo Download y presione Aceptar para continuar' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click ok to continue')
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 3..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J260T3U4.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J260T3U4.zip")
									DetectSamDownload()
									$ipid = Run('dm flash --BOOTLOADER sboot.bin --CM cm.bin --PARAM param.bin --BOOT boot.img --ODM odm.img --CACHE cache.img --OMR omr.img', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\odm.img")
									FileDelete(@ScriptDir & "\omr.img")
									FileDelete(@ScriptDir & "\cache.bin")
									FileDelete(@ScriptDir & "\param.img")
									FileDelete(@ScriptDir & "\boot.img")
									FileDelete(@ScriptDir & "\sboot.bin")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							Else
								MsgBox(16, "Error", "Compilacion no soportada" & @CRLF & @CRLF & 'Version NOT supported!')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						ElseIf StringInStr($sCheck, "J737T") <> 0 Then
							$ipid = Run("adb shell getprop ro.bootloader", "", @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
							$bit = StringRight($soutput, 5)
							$lastbit = StringLeft($bit, 1)
							If $lastbit == '3' Then
								If Not FileExists(@ScriptDir & "\Resources\J737TU3.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$sDownloaderTitle = "Descargando Resources"
									$url            = "http://mcu-tool.com/MCU-Tool Resources/J737T/J737TU3.mcu"
									$file           = "J737TU3.mcu"
									$name           = "J737TU3.mcu"
									$dir            = @ScriptDir & "\Resources\"
									_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
								EndIf
								If FileExists(@ScriptDir & "\Resources\J737TU3.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Resources..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\J737TU3.mcu", @ScriptDir & "\Resources\J737TU3.zip", $decrypt, $iAlgorithm)
									ProcessWaitClose($ipid)
									$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\J737TU3.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\Resources\J737TU3.zip")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J737T1U3.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J737T1U3.zip")
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo Download, por favor espere..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb reboot download", "", @SW_HIDE)
									ProcessWaitClose($ipid)
									Sleep(10000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 1..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --CM cm.bin --RADIO modem.bin --CP_DEBUG modem_debug.bin --ODM odm.img --PARAM param.bin --BOOTLOADER sboot.bin', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\modem_debug.bin")
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\odm.img")
									FileDelete(@ScriptDir & "\param.bin")
									FileDelete(@ScriptDir & "\sboot.bin")
									FileDelete(@ScriptDir & "\modem.bin")
									MsgBox(64, 'MCU Tool', 'Reinicie el dispositivo en modo Recovery y haga un Hard Reset, luego espere a que botee completamente y cuando se encuentre en el administrador de inicio vuelva a reiniciar en modo Download y presione Aceptar para continuar' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click ok to continue')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando Archivos..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If Not FileExists(@ScriptDir & "\efs.img") Then
										FileInstall("efs.img", @ScriptDir & "\efs.img", 1)
									EndIf
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 2..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --EFS efs.img', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\efs.img")
									MsgBox(64, 'MCU Tool', 'Espere a que el dispositivo bootee completamente y haga un Hard Reset desde el Recovery, luego vuelva a reiniciar en modo Download y presione Aceptar para terminar' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click ok to continue' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click ok to continue' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click ok to finish')
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 3..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J737T2U3.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J737T2U3.zip")
									DetectSamDownload()
									$ipid = Run('dm flash --CM cm.bin --RADIO modem.bin --CP_DEBUG modem_debug.bin --ODM odm.img --PARAM param.bin --BOOTLOADER sboot.bin', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\modem_debug.bin")
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\odm.img")
									FileDelete(@ScriptDir & "\param.bin")
									FileDelete(@ScriptDir & "\sboot.bin")
									FileDelete(@ScriptDir & "\modem.bin")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									MsgBox(16, "Error", "Error en la descarga se los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido" & @CRLF)
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							ElseIf $lastbit == '4' Then
								If Not FileExists(@ScriptDir & "\Resources\J737TU4.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$sDownloaderTitle = "Descargando Resources"
									$url            = "http://mcu-tool.com/MCU-Tool Resources/J737T/J737TU4.mcu"
									$file           = "J737TU4.mcu"
									$name           = "J737TU4.mcu"
									$dir            = @ScriptDir & "\Resources\"
									_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
								EndIf
								If FileExists(@ScriptDir & "\Resources\J737TU4.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Resources..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\J737TU4.mcu", @ScriptDir & "\Resources\J737TU4.zip", $decrypt, $iAlgorithm)
									ProcessWaitClose($ipid)
									$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\J737TU4.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\Resources\J737TU4.zip")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J737T1U4.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J737T1U4.zip")
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo Download, por favor espere..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb reboot download", "", @SW_HIDE)
									ProcessWaitClose($ipid)
									Sleep(10000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 1..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --CM cm.bin --RADIO modem.bin --CP_DEBUG modem_debug.bin --ODM odm.img --OMR omr.img --PARAM param.bin --BOOTLOADER sboot.bin', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\modem_debug.bin")
									FileDelete(@ScriptDir & "\omr.img")
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\odm.img")
									FileDelete(@ScriptDir & "\param.bin")
									FileDelete(@ScriptDir & "\sboot.bin")
									FileDelete(@ScriptDir & "\modem.bin")
									MsgBox(64, 'MCU Tool', 'Reinicie el dispositivo en modo Recovery y haga un Hard Reset, luego espere a que botee completamente y cuando se encuentre en el administrador de inicio vuelva a reiniciar en modo Download y presione Aceptar para continuar' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click ok to continue')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando Archivos..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If Not FileExists(@ScriptDir & "\efs.img") Then
									  FileInstall("efs.img", @ScriptDir & "\efs.img", 1)
									EndIf
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 2..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --EFS efs.img', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\efs.img")
									MsgBox(64, 'MCU Tool', 'Espere a que el dispositivo bootee completamente y haga un Hard Reset desde el Recovery, luego vuelva a reiniciar en modo Download y presione Aceptar para terminar' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click ok to finish')
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 3..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J737T2U4.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J737T2U4.zip")
									DetectSamDownload()
									$ipid = Run('dm flash --CM cm.bin --RADIO modem.bin --CP_DEBUG modem_debug.bin --ODM odm.img --PARAM param.bin --BOOTLOADER sboot.bin', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\modem_debug.bin")
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\odm.img")
									FileDelete(@ScriptDir & "\param.bin")
									FileDelete(@ScriptDir & "\sboot.bin")
									FileDelete(@ScriptDir & "\modem.bin")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									MsgBox(16, "Error", "Error en a descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							ElseIf $lastbit == '5' Then
								If Not FileExists(@ScriptDir & "\Resources\J737TU5.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$sDownloaderTitle = "Descargando Resources"
									$url            = "http://mcu-tool.com/MCU-Tool Resources/J737T/J737TU5.mcu"
									$file           = "J737TU5.mcu"
									$name           = "J737TU5.mcu"
									$dir            = @ScriptDir & "\Resources\"
									_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
								EndIf
								If FileExists(@ScriptDir & "\Resources\J737TU5.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Resources..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\J737TU5.mcu", @ScriptDir & "\Resources\J737TU5.zip", $decrypt, $iAlgorithm)
									ProcessWaitClose($ipid)
									$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\J737TU5.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\Resources\J737TU5.zip")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J737T1U5.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J737T1U5.zip")
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo Download, por favor espere..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb reboot download", "", @SW_HIDE)
									ProcessWaitClose($ipid)
									Sleep(10000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 1..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --CM cm.bin --RADIO modem.bin --CP_DEBUG modem_debug.bin --ODM odm.img --PARAM param.bin --BOOTLOADER sboot.bin', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\modem_debug.bin")
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\odm.img")
									FileDelete(@ScriptDir & "\param.bin")
									FileDelete(@ScriptDir & "\sboot.bin")
									FileDelete(@ScriptDir & "\modem.bin")
									MsgBox(64, 'MCU Tool', 'Reinicie el dispositivo en modo Recovery y haga un Hard Reset, luego espere a que botee completamente y cuando se encuentre en el administrador de inicio vuelva a reiniciar en modo Download y presione Aceptar para continuar' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click OK to continue')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando Archivos..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If Not FileExists(@ScriptDir & "\efs.img") Then
										FileInstall("efs.img", @ScriptDir & "\efs.img", 1)
									EndIf
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 2..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --EFS efs.img', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\efs.img")
									MsgBox(64, 'MCU Tool', 'Espere a que el dispositivo bootee completamente y haga un Hard Reset desde el Recovery, luego vuelva a reiniciar en modo Download y presione Aceptar para terminar' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click OK to finish')
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 3..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J737T2U5.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J737T2U5.zip")
									DetectSamDownload()
									$ipid = Run('dm flash --CM cm.bin --RADIO modem.bin --CP_DEBUG modem_debug.bin --ODM odm.img --PARAM param.bin --BOOTLOADER sboot.bin', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\modem_debug.bin")
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\odm.img")
									FileDelete(@ScriptDir & "\param.bin")
									FileDelete(@ScriptDir & "\sboot.bin")
									FileDelete(@ScriptDir & "\modem.bin")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							ElseIf $lastbit == '6' Then
								If Not FileExists(@ScriptDir & "\Resources\J737TU6.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$sDownloaderTitle = "Descargando Resources"
									$url            = "http://mcu-tool.com/MCU-Tool Resources/J737T/J737TU6.mcu"
									$file           = "J737TU6.mcu"
									$name           = "J737TU6.mcu"
									$dir            = @ScriptDir & "\Resources\"
									_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
								EndIf
								If FileExists(@ScriptDir & "\Resources\J737TU6.mcu") Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Resources..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\J737TU6.mcu", @ScriptDir & "\Resources\J737TU6.zip", $decrypt, $iAlgorithm)
									ProcessWaitClose($ipid)
									$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\J737TU6.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\Resources\J737TU6.zip")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J737T1U6.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J737T1U6.zip")
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo Download, por favor espere..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("adb reboot download", "", @SW_HIDE)
									ProcessWaitClose($ipid)
									Sleep(10000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 1..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --CM cm.bin --RADIO modem.bin --CP_DEBUG modem_debug.bin --ODM odm.img --PARAM param.bin --BOOTLOADER sboot.bin', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\modem_debug.bin")
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\odm.img")
									FileDelete(@ScriptDir & "\param.bin")
									FileDelete(@ScriptDir & "\sboot.bin")
									FileDelete(@ScriptDir & "\modem.bin")
									MsgBox(64, 'MCU Tool', 'Reinicie el dispositivo en modo Recovery y haga un Hard Reset, luego espere a que botee completamente y cuando se encuentre en el administrador de inicio vuelva a reiniciar en modo Download y presione Aceptar para continuar' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click OK to continue')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando Archivos..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If Not FileExists(@ScriptDir & "\efs.img") Then
										FileInstall("efs.img", @ScriptDir & "\efs.img", 1)
									EndIf
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 2..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DetectSamDownload()
									$ipid = Run('dm flash --EFS efs.img', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\efs.img")
									MsgBox(64, 'MCU Tool', 'Espere a que el dispositivo bootee completamente y haga un Hard Reset desde el Recovery, luego vuelva a reiniciar en modo Download y presione Aceptar para terminar' & @CRLF & @CRLF & 'Reboot device in recovery mode and perform a hard reset, reboot device and wait to boot completely, then reboot to download mode and click OK to finish')
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Paso 3..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = _Zip_UnzipAll(@ScriptDir & "\J737T2U6.zip", @ScriptDir, 1)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\J737T2U6.zip")
									DetectSamDownload()
									$ipid = Run('dm flash --CM cm.bin --RADIO modem.bin --CP_DEBUG modem_debug.bin --PARAM param.bin --BOOTLOADER sboot.bin', '', @SW_HIDE)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\modem_debug.bin")
									FileDelete(@ScriptDir & "\cm.bin")
									FileDelete(@ScriptDir & "\param.bin")
									FileDelete(@ScriptDir & "\sboot.bin")
									FileDelete(@ScriptDir & "\modem.bin")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							Else
								MsgBox(16, "Error", "Compilacion no soportada" & @CRLF & @CRLF & 'Version NOT supported')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
							MsgBox(16, "Error", "Modelo NO Soportado!" & @CRLF & @CRLF & 'Model NOT supported!')
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			EndIf
			If $sComboRead == $iArray[156] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("TmoUnlock", "106")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $sComboRead & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoSamsung()
					If $dejaver == 1 then
						Sleep(1000)
						$ipid = _Android_HasRootAccess()
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If $ipid == "False" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "106")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						ElseIf $ipid == "True" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run('adb shell su -c "dd if=/efs/root/data/SLB.bin of=/sdcard/SLB.bin"', '', @SW_HIDE, $stderr_child + $stdout_child)
							ProcessWaitClose($ipid)
							$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
							Global $chequear = Stringinstr($soutput, "not found")
							Global $chequear1 = Stringinstr($soutput, "No such file or directory")
							If $chequear <> 0 Or $chequear1 <> 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido. No Soportado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "106")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								$ipid = Run('adb shell su -c "mount -o rw,remount /efs"', '', @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb shell su -c "echo 00000000 > /sdcard/SLB.bin"', '', @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb shell su -c "chmod 777 /sdcard/SLB.bin"', '', @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb shell su -c "chmod 777 /sdcard/SLB.bin"', '', @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb shell su -c "chmod 777 /sdcard/SLB.bin"', '', @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb shell su -c "dd if=/sdcard/SLB.bin of=/efs/root/data/SLB.bin"', '', @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb shell su -c "dd if=/sdcard/SLB.bin of=/efs/root/data/SLB.bin"', '', @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb shell su -c "chmod 0400 /efs/root/data"', '', @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb shell su -c "chmod 0400 /efs/root/data/SLB.bin"', '', @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb reboot', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Esperando dispositivo...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								RunWait('adb wait-for-device', '', @SW_HIDE)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobanndo..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb shell rm -f /sdcard/SLB.bin', '', @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb shell rm /sdcard/SLB.bin', '', @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					Else
						DeleteRecurrencia($imei & "106")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			EndIf
			If $sComboRead == $iArray[157] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("SPR2017", "107")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Sprint Unlock 2017" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoSamsung()
					If $dejaver == 1 then
						Local $rootnet = MsgBox(32 + 4, "Metodo", "Si deseas uasar el metodo con Root elige 'SI', De lo contrario elige 'NO'" & @CRLF & @CRLF & " If you want to use Root Method choose 'YES', Otherwise Choose 'NO'. ")
						Switch $rootnet
							Case 6
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando Metodo Root..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Global $ejec = IsCreditNedded2("40", $key)
								Global $var = shori($ejec[1], $key)
								Global $unlockspr1 = StringSplit($var, "{")
								 $ipid = _Android_HasRootAccess()
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								If $ipid == "False" Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DeleteRecurrencia($imei & "107")
									refund(GUICtrlRead($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								ElseIf $ipid == "True" Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If Not FileExists(@ScriptDir & "\ESUR") Then
										FileInstall("ESUR", @ScriptDir & "\ESUR", $FC_OVERWRITE)
									EndIf
									$ipid = Run($unlockspr1[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
									ProcessWaitClose($ipid)
									FileDelete(@ScriptDir & "\ESUR")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo Permisos..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run($unlockspr1[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run($unlockspr1[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
									Sleep(1000)
									StdinWrite($ipid, "su" & @LF )
									Sleep(2000)
									StdinWrite($ipid, $unlockspr1[4] & @LF )
									Sleep(2000)
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Archivos..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If Not FileExists(@TempDir & "\SPRK") Then
										FileInstall("SPRK", @TempDir & "\SPRK", $FC_OVERWRITE)
									EndIf
									$array = StringSplit($soutput, ":")
									If @error Or UBound($array, $UBOUND_ROWS) <= 1 Or StringInStr($soutput, "Enter") == 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										DeleteRecurrencia($imei & "107")
										refund(GUICtrlRead($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
									Else
										Global $Rows = UBound($array, $UBOUND_ROWS)
										For $i = 1 to $Rows - 1
											If StringInStr($array[$i], "Error") <> 0 Then
												Global $lallave = 0
												ExitLoop
											ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
												Global $lallave = StringReplace($array[$i], " ", "")
												ExitLoop
											Else
												Global $lallave = 0
											EndIf
										Next
										Global $ahorasitengolallave = _Interpreter($lallave)
										If StringInStr($ahorasitengolallave, "Error") == 0 Then
											Sleep(1000)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											StdinWrite($ipid, $ahorasitengolallave & @LF )
											Global $star = TimerInit()
											Do
												$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												If StringInStr($soutput1, 'Error') <> 0 Then
													ExitLoop
												ElseIf StringInStr($soutput1, 'Done') <> 0 Then
													ExitLoop
												EndIf
												Sleep(100)
											Until TimerDiff($star) > 60000
											ProcessClose($ipid)
											If StringInStr($soutput1, 'Error') <> 0 or $soutput1 == "" then
												FileDelete(@TempDir & "\SPRK")
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Revise que su modelo sea compatible de ser asi entonces probablemente Modem no soportado inetnte degradar o usar Full Combination Firmware" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "107")
												refund(GUICtrlRead($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
											Else
												FileDelete(@TempDir & "\SPRK")
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
											EndIf
										Else
											FileDelete(@TempDir & "\SPRK")
											$ipid = Run($unlockspr1[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Error!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "107")
											refund(GUICtrlRead($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
										EndIf
									EndIf
								EndIf
							Case 7
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando Unlock..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Global $ejec = IsCreditNedded2("41", $key)
								Global $var = shori($ejec[1], $key)
								Global $unlockspr2 = StringSplit($var, "{")
								If Not FileExists(@ScriptDir & "\ESUNR") Then
									FileInstall("ESUNR", @ScriptDir & "\ESUNR", $FC_OVERWRITE)
								EndIf
								$ipid = Run($unlockspr2[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
								ProcessWaitClose($ipid)
								FileDelete(@ScriptDir & "\ESUNR")
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo Permisos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run($unlockspr2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run($unlockspr2[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
								Sleep(2000)
								StdinWrite($ipid, $unlockspr2[4] & @LF )
								Sleep(2000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Archivos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								If Not FileExists(@TempDir & "\SPRNK") Then
									FileInstall("SPRNK", @TempDir & "\SPRNK", $FC_OVERWRITE)
								EndIf
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								$array = StringSplit($soutput, ":")
								If @error Or UBound($array, $UBOUND_ROWS) <= 1 Or StringInStr($soutput, "Enter") == 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Error!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DeleteRecurrencia($imei & "107")
									refund(GUICtrlRead($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									Global $Rows = UBound($array, $UBOUND_ROWS)
									For $i = 1 to $Rows - 1
										If StringInStr($array[$i], "Error") <> 0 Then
											Global $lallave = 0
											ExitLoop
										ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
											Global $lallave = StringReplace($array[$i], " ", "")
											ExitLoop
										Else
											Global $lallave = 0
										EndIf
									Next
									Global $ahorasitengolallave = _Interpretersprnoroot($lallave)
									If StringInStr($ahorasitengolallave, "Error") == 0 Then
										Sleep(1000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										StdinWrite($ipid, $ahorasitengolallave & @LF )
										Global $star = TimerInit()
										Do
											$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											If StringInStr($soutput1, 'Error') <> 0 Then
												ExitLoop
											ElseIf StringInStr($soutput1, 'Done') <> 0 Then
												ExitLoop
												EndIf
											Sleep(100)
										Until TimerDiff($star) > 60000
										ProcessClose($ipid)
										If StringInStr($soutput1, 'Error') <> 0 or $soutput1 == "" then
											FileDelete(@TempDir & "\SPRNK")
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Revise que su modelo sea compatible de ser asi entonces probablemente Modem no soportado inetnte degradar o usar Full Combination Firmware" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "107")
											refund(GUICtrlRead($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
										Else
											FileDelete(@TempDir & "\SPRNK")
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
										EndIf
									Else
										FileDelete(@TempDir & "\SPRNK")
										$ipid = Run($unlockspr2[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Error!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										DeleteRecurrencia($imei & "107")
										refund(GUICtrlRead($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
									EndIf
								EndIf
						EndSwitch
					Else
						DeleteRecurrencia($imei & "107")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			EndIf
			If $sComboRead == $iArray[158] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("SPR2018", "108")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Sprint Unlock 2018" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoSamsung()
					If $dejaver == 1 then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando Unlock..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Global $ejec = IsCreditNedded2("42", $key)
						Global $var = shori($ejec[1], $key)
						Global $unlockspr3 = StringSplit($var, "{")
						If Not FileExists(@ScriptDir & "\ESUNS") Then
							FileInstall("ESUNS", @ScriptDir & "\ESUNS", $FC_OVERWRITE)
						EndIf
						$ipid = Run($unlockspr3[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
						ProcessWaitClose($ipid)
						FileDelete(@ScriptDir & "\ESUNS")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo Permisos..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run($unlockspr3[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run($unlockspr3[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
						Sleep(2000)
						StdinWrite($ipid, $unlockspr3[4] & @LF )
						Sleep(2000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Archivos..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If Not FileExists(@TempDir & "\SPRNSK") Then
							FileInstall("SPRNSK", @TempDir & "\SPRNSK", $FC_OVERWRITE)
						EndIf
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						$array = StringSplit($soutput, ":")
						If @error Or UBound($array, $UBOUND_ROWS) <= 1 Or StringInStr($soutput, "Enter") == 0 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Error!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "108")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							Global $Rows = UBound($array, $UBOUND_ROWS)
							For $i = 1 to $Rows - 1
								If StringInStr($array[$i], "Error") <> 0 Then
									Global $lallave = 0
									ExitLoop
								ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
									Global $lallave = StringReplace($array[$i], " ", "")
									ExitLoop
								Else
									Global $lallave = 0
								EndIf
							Next
							Global $ahorasitengolallave = _Interpretersprnewsec($lallave)
							If StringInStr($ahorasitengolallave, "Error") == 0 Then
								Sleep(1000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								StdinWrite($ipid, $ahorasitengolallave & @LF )
								Global $star = TimerInit()
								Do
									$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									If StringInStr($soutput1, 'Error') <> 0 Then
										ExitLoop
									 ElseIf StringInStr($soutput1, 'Done') <> 0 Then
										ExitLoop
									 EndIf
									 Sleep(100)
								Until TimerDiff($star) > 60000
								ProcessClose($ipid)
								If StringInStr($soutput1, 'Error') <> 0 or $soutput1 == "" then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Revise que su modelo sea compatible de ser asi entonces probablemente Modem no soportado inetnte degradar o usar Full Combination Firmware" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DeleteRecurrencia($imei & "108")
									refund(GUICtrlRead($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							Else
								$ipid = Run($unlockspr3[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Error!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "108")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					Else
						DeleteRecurrencia($imei & "108")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			EndIf
			If $sComboRead == $iArray[154] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("G360Unlock", "109")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "G360T/T1 & G530T/T1 Unlock" & @CRLF)
					Global $precio = ''
					$pro = GUICtrlRead($Edit1)
					Global $elige = MsgBox(32 + 3, "MC-U Tool", "Seleccione SI para el metodo Fast Unlock, NO para Metodo via Modem y Cancelar para terminar la operacion" & @CRLF & @CRLF & "Select YES to use Fast Unlock Method, NO to use Modem Method and Cancel to terminate operation" )
					Switch $elige
						Case 6
							$dejaver = ReadInfoSamsung()
							If $dejaver == 1 then
								$imei = IxxxProcess(GUICtrlRead($Edit1))
								Global $dime = IsCreditNedded2("13", $key)
								Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "13")
								If $confirm <> "NO" Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If $key == False Then
										DeleteRecurrencia($imei & "108")
										refund(GUICtrlRead($Edit1))
										WrongKey($imei)
									ElseIf $key == 0 Then
										DeleteRecurrencia($imei & "108")
										refund(GUICtrlRead($Edit1))
										Error0002($imei)
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Modelo... " )
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										If StringInStr($soutput, "G360T") <> 0 Or StringInStr($soutput, "G530T") <> 0 then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											$ipid = Run("adb shell getenforce", "", @SW_HIDE, $stderr_child + $stdout_child)
											ProcessWaitClose($ipid)
											$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
											if StringInStr($soutput, "Permissive") <> 0 Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Soportado en combination Firmware" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por favor flashee stock y haga root." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "109")
												refund(GUICtrlRead($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando debug level... ")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb shell getprop ro.boot.debug_level", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												if StringInStr($soutput, "0x4948") == 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando High" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Global $ejec = IsCreditNedded2("10", $key)
													Global $var = shori($ejec[1], $key)
													Global $RebootDeb = StringSplit($var, "{")
													$ipid = Run($RebootDeb[1], "", @SW_HIDE)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													RunWait("adb wait-for-device", "", @SW_HIDE)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													BootComplete()
												EndIf
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(3000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root... ")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = _Android_HasRootAccess()
												If $ipid == "False" Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por favor rootee primero..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "109")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando procedimiento..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													If Not FileExists(@ScriptDir & "\TMBQC") Then
														FileInstall("TMBQC", @ScriptDir & "\TMBQC", $FC_OVERWRITE)
													EndIf
													Global $var = shori($dime[1], $key)
													Global $Unlock = StringSplit($var, "{")
													$ipid = Run($Unlock[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													FileDelete(@ScriptDir & "\TMBQC")
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo Permisos..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run($Unlock[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													ProcessWaitClose($ipid)
													$ipid = Run($Unlock[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
													Sleep(1000)
													StdinWrite($ipid, $Unlock[4] & @LF )
													Sleep(2000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													StdinWrite($ipid, $Unlock[5] & @LF )
													Sleep(3500)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													If StringInStr($soutput, "Enter") <> 0 Then
														Sleep(4000)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ver = StdinWrite($ipid, "" & @LF)
														Sleep(10000)
														Global $star = TimerInit()
														Do
															$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
															If StringInStr($soutput1, "Write : OK") <> 0 Then
																Global $unlockok = 1
																ExitLoop
															ElseIf StringInStr($soutput1, "Not Support") <> 0 Then
																$unlockok = 0
																ExitLoop
															Else
																$unlockok = 0
															EndIf
																Sleep(100)
														Until TimerDiff($star) > 45000
														ProcessClose($ipid)
														If $unlockok == 1 then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "109")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
														EndIf
													Else
														ProcessClose($ipid)
														$ipid = Run($Unlock[6], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Exploit Error!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "109")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
													EndIf
												EndIf
											EndIf
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Soportado" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "109")
											refund(GUICtrlRead($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
										EndIf
									EndIf
								Else
									_GUICtrlEdit_SetText ($Edit1, "")
									DeleteRecurrencia($imei & "109")
									refund(GUICtrlRead($Edit1))
									EnableButtons()
								EndIf
							Else
								DeleteRecurrencia($imei & "109")
								refund(GUICtrlRead($Edit1))
								EnableButtons()
							EndIf
						Case 7
							$dejaver = ReadInfoSamsung()
							If $dejaver == 1 then
								$imei = IxxxProcess(GUICtrlRead($Edit1))
								Global $dime = IsCreditNedded2("16", $key)
								Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "16")
								If $confirm <> "NO" Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If $key == False Then
										DeleteRecurrencia($imei & "109")
										refund(GUICtrlRead($Edit1))
										WrongKey($imei)
									ElseIf $key == 0 Then
										DeleteRecurrencia($imei & "109")
										refund(GUICtrlRead($Edit1))
										Error0002($imei)
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Modelo... " )
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
										$model = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										If StringInStr($model, "G360T") <> 0 Or StringInStr($model, "G530T") <> 0 then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											If Not FileExists(@ScriptDir & "\Resources\G360G530.mcu") Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$sDownloaderTitle = "Descargando Resources"
												$url            = "http://mcu-tool.com/MCU-Tool Resources/G530/G360G530.mcu"
												$file           = "G360G530.mcu"
												$name           = "G360G530.mcu"
												$dir            = @ScriptDir & "\Resources\"
												_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
											EndIf
											If FileExists(@ScriptDir & "\Resources\G360G530.mcu") Then
												DeleteG360()
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Recursos..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\G360G530.mcu", @ScriptDir & "\Resources\G360G530.zip", $decrypt, $iAlgorithm)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\G360G530.zip", @ScriptDir, 1)
												ProcessWaitClose($ipid)
												FileDelete(@ScriptDir & "\Resources\G360G530.zip")
												Sleep(1000)
												$ipid = Run("adb shell getenforce", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												if StringInStr($soutput, "Permissive") <> 0 Then
													DeleteG360()
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Soportado en combination Firmware" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por favor flashee stock y haga root." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "109")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando debug level... ")
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("adb shell getprop ro.boot.debug_level", "", @SW_HIDE, $stderr_child + $stdout_child)
													ProcessWaitClose($ipid)
													$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
													if StringInStr($soutput, "0x4948") == 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando High" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Global $ejec = IsCreditNedded2("10", $key)
														Global $var = shori($ejec[1], $key)
														Global $RebootDeb = StringSplit($var, "{")
														$ipid = Run($RebootDeb[1], "", @SW_HIDE)
														ProcessWaitClose($ipid)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														RunWait("adb wait-for-device", "", @SW_HIDE)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														BootComplete()
													EndIf
													Sleep(3000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root... ")
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = _Android_HasRootAccess()
													If $ipid == "False" Then
														DeleteG360()
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por favor rootee primero..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "109")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
													Else
														Global $var = shori($dime[1], $key)
														Global $G532 = StringSplit($var, "{")
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando procedimiento..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Global $IMEIHEX = $G532[6]
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														$ipid = Run($G532[1], "", @SW_HIDE, $stderr_child + $stdout_child)
														Sleep(2000)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo Upload..." & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Sleep(3000)
														MsgBox(64, "MC-U", "Presione Aceptar cuando el dispositivo se encuentre en Upload Mode para continuar" & @CRLF & @CRLF & "Click OK when device get Upload Mode to continue" )
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Buscando puerto..." )
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Global $star = TimerInit()
														Global $puerto = ""
														Global $puerto1 = ""
														Do
															FileDelete(@ScriptDir & "\com.txt")
															$ipid = Run("Port.bat", "", @SW_HIDE)
															Sleep(500)
															If FileExists(@ScriptDir & "\com.txt") == "1" Then
																Global $puerto = FileReadLine(@ScriptDir & "\com.txt", 1)
																Global $puerto1 = StringReplace($puerto, " ", "")
																FileDelete(@ScriptDir & "\com.txt")
																ExitLoop
															EndIf
															ProcessClose($ipid)
														Until TimerDiff($star) > 5000
														If $puerto1 == "" Then
															DeleteG360()
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "109")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $puerto1 & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Leyendo Sec..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															FileDelete(@ScriptDir & "\UNLOCK.txt")
															FileDelete(@ScriptDir & "\com.txt")
															If StringInStr($model, "G360T") <> 0 Then
																$ipid = Run($G532[2], "", @SW_HIDE) ; 2
																ProcessWaitClose($ipid)
															Else
																$ipid = Run($G532[3], "", @SW_HIDE) ; 3
																ProcessWaitClose($ipid)
															EndIf
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reinicando a normal mode..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Sleep(5000)
															MsgBox(64, "MC-U", "Presione Aceptar cuando el dispositivo se encuentre en modo normal para continuar, si no renicia hagalo manualmente!" & @CRLF & @CRLF & "Click OK when device get to normal mode to continue, if doesn't reboot do it manually" )
															$ipid = Run('AS.exe ' & $puerto1 & ' ' & $G532[4], "", @SW_HIDE, $stderr_child + $stdout_child) ;4
															ProcessWaitClose($ipid)
															If FileExists(@ScriptDir & "\UNLOCK.txt") Then
																Global $unlockdone = FileReadLine(@ScriptDir & "\UNLOCK.txt", 1)
																Global $unlockdone1 = StringReplace($unlockdone, " ", "")
																FileDelete(@ScriptDir & "\UNLOCK.txt")
																If StringLen($unlockdone1) == 64 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Sec Leida Correctamente..." & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Esperando dispositivo USB..." & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	$ipid = Run('adb wait-for-device', "", @SW_HIDE, $stderr_child + $stdout_child)
																	ProcessWaitClose($ipid)
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	Global $UNLOCKPASS = $G532[5] & $IMEIHEX & $unlockdone1 ;5
																	$ipid = Run($G532[10], "", @SW_HIDE, $stderr_child + $stdout_child) ; 10
																	ProcessWaitClose($ipid)
																	$ipid = Run('adb shell "echo ' & $G532[7] & " " & $UNLOCKPASS & " " & $G532[8] & " " & $G532[12], "", @SW_HIDE, $stderr_child + $stdout_child)
																	ProcessWaitClose($ipid)
																	$ipid = Run($G532[11], "", @SW_HIDE, $stderr_child + $stdout_child) ;11
																	ProcessWaitClose($ipid)
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando adb..." & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	FileDelete(@ScriptDir & "\unlocksuccess.txt")
																	FileDelete(@ScriptDir & "\unlockfail.txt")
																	$ipid = Run('adb kill-server', "", @SW_HIDE, $stderr_child + $stdout_child)
																	ProcessWaitClose($ipid)
																	$ipid = Run('adb start-server', "", @SW_HIDE, $stderr_child + $stdout_child)
																	ProcessWaitClose($ipid)
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Unlock...")
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	$ipid = Run('adb wait-for-device', "", @SW_HIDE, $stderr_child + $stdout_child)
																	ProcessWaitClose($ipid)
																	$ipid = Run($G532[9], "", @SW_HIDE, $stderr_child + $stdout_child) ;9
																	ProcessWaitClose($ipid)
																	If FileExists(@ScriptDir & "\unlocksuccess.txt") == "1" Then
																		FileDelete(@ScriptDir & "\unlocksuccess.txt")
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		$ipid = Run('adb reboot', "", @SW_HIDE, $stderr_child + $stdout_child)
																		ProcessWaitClose($ipid)
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		firma()
																		AddLog()
																		logs()
																		EnableButtons()
																	Else
																		FileDelete(@ScriptDir & "\unlockfail.txt")
																		FileDelete(@ScriptDir & "\UNLOCKFINAL.bat")
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		DeleteRecurrencia($imei & "109")
																		refund(GUICtrlRead($Edit1))
																		DeleteG360()
																		firma()
																		AddLog()
																		logs()
																		EnableButtons()
																	EndIf
																Else
																	DeleteG360()
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Sec Danada!" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	DeleteRecurrencia($imei & "109")
																	refund(GUICtrlRead($Edit1))
																	firma()
																	AddLog()
																	logs()
																	EnableButtons()
																EndIf
															Else
																DeleteG360()
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Sec Leida Incorrectamente..." & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																DeleteRecurrencia($imei & "109")
																refund(GUICtrlRead($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
															EndIf
														EndIf
													EndIf
												EndIf
											Else
												MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "109")
												refund(GUICtrlRead($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
											EndIf
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Soportado" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "109")
											refund(GUICtrlRead($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
										EndIf
									EndIf
								Else
									_GUICtrlEdit_SetText ($Edit1, "")
									DeleteRecurrencia($imei & "109")
									refund(GUICtrlRead($Edit1))
									EnableButtons()
								EndIf
							Else
								DeleteRecurrencia($imei & "109")
								refund(GUICtrlRead($Edit1))
								EnableButtons()
							EndIf
						Case 2
							DeleteRecurrencia($imei & "109")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
					EndSwitch
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			EndIf
			If $sComboRead == $iArray[159] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MCU Sprint Unlock" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoSamsung()
					If $dejaver == 1 then
						Global $sCheck = SamModCheck()
						$ipid = Run("adb shell getprop ro.bootloader", "", @SW_HIDE, $stderr_child + $stdout_child)
						ProcessWaitClose($ipid)
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						$bit = StringRight($soutput, 5)
						$lastbit = StringLeft($bit, 1)
						If StringInStr($sCheck, "J327P") <> 0 And $lastbit == '4' Then
							J327PU4NV()
							firma()
							AddLog()
							logs()
							EnableButtons()
						ElseIf StringInStr($sCheck, "J727P") <> 0 And $lastbit == '4' Then
							J727PU4NV()
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando procedimiento..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If Not FileExists(@ScriptDir & "\FIRST") Then
								FileInstall("FIRST", @ScriptDir & "\FIRST", $FC_OVERWRITE)
							EndIf
							Global $ejec = IsCreditNedded2("47", $key)
							Global $var = shori($ejec[1], $key)
							Global $unlocksprmc = StringSplit($var, "{")
							$ipid = Run($unlocksprmc[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;1
							ProcessWaitClose($ipid)
							FileDelete(@ScriptDir & "\FIRST")
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo Permisos..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run($unlocksprmc[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
							Sleep(2000)
							$ipid = _Android_HasRootAccess()
							If $ipid == "False" Then
								Global $adbujm = "shell"
							Else
								Global $adbujm = "shell su -c"
							EndIf
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb " & $adbujm & " " & $unlocksprmc[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
							Sleep(1000)
							$ipid = Run("adb " & $adbujm & " " & $unlocksprmc[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
							Sleep(1000)
							$ipid = Run("adb " & $adbujm & " " & $unlocksprmc[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
							Sleep(1000)
							$ipid = Run("adb " & $adbujm & " " & $unlocksprmc[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
							Sleep(1000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If Not FileExists(@ScriptDir & "\THIRD") Then
								FileInstall("THIRD", @ScriptDir & "\THIRD", $FC_OVERWRITE)
							EndIf
							$ipid = Run($unlocksprmc[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;5
							ProcessWaitClose($ipid)
							FileDelete(@ScriptDir & "\THIRD")
							$ipid = Run($unlocksprmc[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
							Sleep(2000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb " & $adbujm & " " & $unlocksprmc[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
							Sleep(1000)
							$ipid = Run("adb " & $adbujm & " " & $unlocksprmc[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
							Sleep(1000)
							$ipid = Run("adb " & $adbujm & " " & $unlocksprmc[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
							Sleep(1000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							RunWait("adb wait-for-device")
							Sleep(1000)
							$ipid = Run("adb " & $adbujm & " " & $unlocksprmc[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
							Sleep(1000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb reboot", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
							Sleep(1000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			EndIf
			If $sComboRead == $iArray[152] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Old Qualcomm Unlock" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoSamsung()
					If $dejaver == 1 then
						#Region ### START Koda GUI section ### Form=
						Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
						Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
						Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
						GUICtrlSetData($Combo1, _CommListPorts(1))
						GUICtrlCreateGroup("", -99, -99, 1, 1)
						Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
						Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
						Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
						Global $Label3 = GUICtrlCreateLabel("SELECT SERIAL PORT.", 312, 80)
						Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
						Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
						GUISetState(@SW_SHOW)
						#EndRegion ### END Koda GUI section ###

						While 1
							$nMsg = GUIGetMsg()
							Switch $nMsg
								Case $GUI_EVENT_CLOSE
									GUIDelete($FormCOM)
									EnableButtons()
									ExitLoop

								Case $OpenDeviceMGM
									OpenDevMenu()

								Case $ButtonrefreshComm
									GUICtrlSetData($Combo1,"")
									GUICtrlSetData($Combo1, _CommListPorts(1))

								Case $ButtonSelectCom
									Global $commselected = GUICtrlRead($Combo1)
									Global $finalcom = StringTrimLeft($commselected, 3)
									If $commselected == "" Then
										MsgBox(16, "Error", "No CommPort Selected!")
									Else
										GUIDelete($FormCOM)
										Global $checkun = UnlockOld($commselected)
										If $checkun == 1 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										EndIf
									EndIf
							EndSwitch
						WEnd
					Else
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
					EnableButtons()
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
					EnableButtons()
				EndIf
			EndIf
        Case $Buttonrootcoolpad
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("coolpadroot", "114")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Coolpad 3622A Root" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo EDL" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb reboot edl", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					Sleep(3000)
					#Region ### START Koda GUI section ### Form=
					Global $ComPortsSelector = GUICreate("Com Ports Selection", 544, 130, -1, -1)
					Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
					Global $inputcomport = GUICtrlCreateCombo("", 32, 40, 233, 25)
					GUICtrlSetData($inputcomport, _CommListPorts(1))
					GUICtrlCreateGroup("", -99, -99, 1, 1)
					Global $continuar = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
					Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
					Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
					Global $Label3 = GUICtrlCreateLabel("SELECT 9008 PORT.", 312, 80, 126, 17)
					Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
					Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
					GUISetState(@SW_SHOW)
					#EndRegion ### END Koda GUI section ###

					While 1
						$nMsg = GUIGetMsg()
						Switch $nMsg
							Case $GUI_EVENT_CLOSE
								GUIDelete($ComPortsSelector)
								DeleteRecurrencia($imei & "114")
								refund(GUICtrlRead($Edit1))
								EnableButtons()
								ExitLoop

							Case $OpenDeviceMGM
								OpenDevMenu()

							Case $ButtonrefreshComm
								GUICtrlSetData($inputcomport,"")
								GUICtrlSetData($inputcomport, _CommListPorts(1))

							Case $continuar
								If Not FileExists(@ScriptDir & "\3622A_Loader.mbn") Then
									FileInstall("3622A_Loader.mbn", @ScriptDir & "\3622A_Loader.mbn", 1)
								EndIf
								If Not FileExists(@ScriptDir & "\Root.xml") Then
									FileInstall("Root.xml", @ScriptDir & "\Root.xml", 1)
								EndIf
								If Not FileExists(@ScriptDir & "\Root.img") Then
									FileInstall("Root.img", @ScriptDir & "\Root.img", 1)
								EndIf
								If Not FileExists(@ScriptDir & "\magisk.apk") Then
									FileInstall("magisk.apk", @ScriptDir & "\magisk.apk", 1)
								EndIf
								$comfromuser = GUICtrlRead($inputcomport)
								GUIDelete($ComPortsSelector)
								If $comfromuser <> "" Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Rooteando..."  & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run("emmcdl.exe -p " & $comfromuser & " -f 3622A_Loader.mbn -x Root.xml", "", @SW_HIDE, $stderr_child + $stdout_child)
									ProcessWaitClose($ipid)
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									If StringInStr( $soutput, "Did not receive Sahara hello packet from device") <> 0 Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Failed to write hello response back to device"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Sleep(1000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!"  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										FileDelete(@ScriptDir & "\3622A_Loader.mbn")
										FileDelete(@ScriptDir & "\Root.xml")
										FileDelete(@ScriptDir & "\Root.img")
										FileDelete(@ScriptDir & "\magisk.apk")
										DeleteRecurrencia($imei & "114")
										refund(GUICtrlRead($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										ExitLoop
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Boot Root escrito correctamente, reinicie su dispositivo manualmente..."  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Sleep(5000)
										$ipid = Run("adb kill-server", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										$ipid = Run("adb start-server", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = RunWait("adb wait-for-device", "", @SW_HIDE)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										BootComplete()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Magisk..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb push magisk.apk /sdcard/", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										$ipid = Run("adb install magisk.apk", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										If StringInStr( $soutput, "Success") == 0 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Fallo al instalar Magisk APK!"  & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instale la APK desde el almacenamiento interno..."  & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Magisk instalada Satisfactoriamente!"  & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										EndIf
										$ipid = Run("adb reboot", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..."  & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb kill-server", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										$ipid = Run("adb start-server", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = RunWait("adb wait-for-device", "", @SW_HIDE)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										BootComplete()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Habilitando DIAG Port...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = Run("adb shell su -c setprop sys.usb.config diag,adb", "", @SW_HIDE)
										ProcessWaitClose($ipid)
										Sleep(1000)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										FileDelete(@ScriptDir & "\3622A_Loader.mbn")
										FileDelete(@ScriptDir & "\Root.xml")
										FileDelete(@ScriptDir & "\Root.img")
										FileDelete(@ScriptDir & "\magisk.apk")
										ExitLoop
									EndIf
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe Seleccionar un Puerto Valido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									FileDelete(@ScriptDir & "\3622A_Loader.mbn")
									FileDelete(@ScriptDir & "\Root.xml")
									FileDelete(@ScriptDir & "\Root.img")
									FileDelete(@ScriptDir & "\magisk.apk")
									DeleteRecurrencia($imei & "114")
									refund(GUICtrlRead($Edit1))
									ExitLoop
								EndIf
						EndSwitch
					WEnd
					EnableButtons()
				Else
					DeleteRecurrencia($imei & "114")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $coolpad
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("coolpadunlock", "115")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Coolpad 3622A Unlock" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				Global $elegir = MsgBox(48 + 1, 'MCU Tool', 'Debe tener Backup del QCN para Finalizar el desbloqueo! Desea Continuar?' & @CRLF & @CRLF & 'Must have QCN Backup to END Process! Do you wish to contiune?')
				Switch $elegir
					Case 1
						$dejaver = ReadInfoprocess()
						If $dejaver == 1 then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root..." )
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = _Android_HasRootAccess()
							If $ipid == "False" Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por favor rootee su dispositivo primero!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "115")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Revisando Seguridad..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb shell su -c dd if=/dev/block/mmcblk0p10 of=/data/local/tmp/0p10", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("adb shell su -c dd if=/dev/block/mmcblk0p11 of=/data/local/tmp/0p11", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("adb shell su -c dd if=/dev/block/mmcblk0p23 of=/data/local/tmp/0p23", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("adb shell su -c dd if=/dev/block/mmcblk0p27 of=/data/local/tmp/0p27", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb shell su -c dd if=/dev/zero of=/dev/block/mmcblk0p10", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("adb shell su -c dd if=/dev/zero of=/dev/block/mmcblk0p11", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("adb shell su -c dd if=/dev/zero of=/dev/block/mmcblk0p23", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("adb shell su -c dd if=/dev/zero of=/dev/block/mmcblk0p27", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb shell su -c reboot", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("adb kill-server", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run("adb start-server", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Escriba QCN!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
							DeleteRecurrencia($imei & "115")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
						EndIf
					Case 2
						DeleteRecurrencia($imei & "115")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
				EndSwitch
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $z982sec
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("Z982Sec", "113")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Z982 Save/Backup Security" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					Sleep(1000)
					Global $imeizten9560 = IxxxProcess(GUICtrlRead($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Modelo..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If $soutput == "Z982" Then
						$revisar = MsgBox(32 + 4, '', 'Si desea Hacer un Backup de la seguridad haga click en SI, si lo que desea es restaurar la seguridad guardada haga click en NO' & @CRLF & @CRLF & 'If you wish to backup sec click YES, if you wish to restore sec previously saved click NO')
						Switch $revisar
							Case 6
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en EDL..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb reboot edl", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(3000)
								#Region ### START Koda GUI section ### Form=
								Global $ComPortsSelector = GUICreate("Com Ports Selection", 544, 130, -1, -1)
								Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
								Global $inputcomport = GUICtrlCreateCombo("", 32, 40, 233, 25)
								GUICtrlSetData($inputcomport, _CommListPorts(1))
								GUICtrlCreateGroup("", -99, -99, 1, 1)
								Global $continuar = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
								Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
								Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
								Global $Label3 = GUICtrlCreateLabel("SELECT 9008 PORT.", 312, 80, 126, 17)
								Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
								Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
								GUISetState(@SW_SHOW)
								#EndRegion ### END Koda GUI section ###

								While 1
									$nMsg = GUIGetMsg()
									Switch $nMsg
										Case $GUI_EVENT_CLOSE
											GUIDelete($ComPortsSelector)
											DeleteRecurrencia($imei & "113")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop

										Case $OpenDeviceMGM
											OpenDevMenu()

										Case $ButtonrefreshComm
											GUICtrlSetData($inputcomport,"")
											GUICtrlSetData($inputcomport, _CommListPorts(1))

										Case $continuar
											If Not FileExists(@ScriptDir & "\Z982.mbn") Then
											   FileInstall("Z982.mbn", @ScriptDir & "\Z982.mbn", 1)
											EndIf
											$comfromuser = GUICtrlRead($inputcomport)
											GUIDelete($ComPortsSelector)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Leyendo Seguridad..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											$ipid = Run("emmcdl.exe -p " & $comfromuser & " -f Z982.mbn -d ztecfg -o ztecfgbak", "", @SW_HIDE)
											ProcessWaitClose($ipid)
											$ipid = Run("emmcdl.exe -p " & $comfromuser & " -f Z982.mbn -d modemst2 -o modemst2bak", "", @SW_HIDE)
											ProcessWaitClose($ipid)
											$ipid = Run("emmcdl.exe -p " & $comfromuser & " -f Z982.mbn -d modemst1 -o modemst1bak", "", @SW_HIDE)
											ProcessWaitClose($ipid)
											$ipid = Run("emmcdl.exe -p " & $comfromuser & " -f Z982.mbn -d fastboot -o fastbootbak", "", @SW_HIDE)
											ProcessWaitClose($ipid)
											If FileExists(@ScriptDir & "\ztecfgbak") = 1 And FileExists(@ScriptDir & "\modemst2bak") = 1 And FileExists(@ScriptDir & "\modemst1bak") = 1 And FileExists(@ScriptDir & "\fastbootbak") = 1 Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seguridad Leida correctamente..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reinicie su dispositivo manualmente!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(500)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Guardando Seguridad..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Global $sfilename = _Zip_Create(@MyDocumentsDir & "\Backup_MCU\ZTE\Z982_" & $imeizten9560 & ".zip")
												FileMove(@ScriptDir & "\ztecfgbak", @MyDocumentsDir & "\Backup_MCU\ZTE\ztecfgbak", $FC_OVERWRITE + $FC_CREATEPATH)
												FileMove(@ScriptDir & "\modemst2bak", @MyDocumentsDir & "\Backup_MCU\ZTE\modemst2bak", $FC_OVERWRITE + $FC_CREATEPATH)
												FileMove(@ScriptDir & "\modemst1bak", @MyDocumentsDir & "\Backup_MCU\ZTE\modemst1bak", $FC_OVERWRITE + $FC_CREATEPATH)
												FileMove(@ScriptDir & "\fastbootbak", @MyDocumentsDir & "\Backup_MCU\ZTE\fastbootbak", $FC_OVERWRITE + $FC_CREATEPATH)
												if FileExists(@MyDocumentsDir & "\Backup_MCU\ZTE\ztecfgbak") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\ZTE\ztecfgbak", 1)
												if FileExists(@MyDocumentsDir & "\Backup_MCU\ZTE\modemst2bak") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\ZTE\modemst2bak", 1)
												if FileExists(@MyDocumentsDir & "\Backup_MCU\ZTE\modemst1bak") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\ZTE\modemst1bak", 1)
												if FileExists(@MyDocumentsDir & "\Backup_MCU\ZTE\fastbootbak") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\ZTE\fastbootbak", 1)
												FileDelete(@MyDocumentsDir & "\Backup_MCU\ZTE\ztecfgbak")
												FileDelete(@MyDocumentsDir & "\Backup_MCU\ZTE\modemst2bak")
												FileDelete(@MyDocumentsDir & "\Backup_MCU\ZTE\modemst1bak")
												FileDelete(@MyDocumentsDir & "\Backup_MCU\ZTE\fastbootbak")
												$ipid = _Crypt_EncryptFile($sfilename, @MyDocumentsDir & "\Backup_MCU\ZTE\Z982_" & $imeizten9560 & ".mcu", $decrypt, $iAlgorithm)
												ProcessWaitClose($ipid)
												FileDelete(@MyDocumentsDir & "\Backup_MCU\ZTE\Z982_" & $imeizten9560 & ".zip")
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seguridad guardada en: " & @MyDocumentsDir & "\Backup_MCU\ZTE\Z982_" & $imeizten9560 & ".mcu" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												FileDelete(@ScriptDir & "\Z982.mbn")
												ExitLoop
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Lectura Fallida!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "113")
												refund(GUICtrlRead($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												FileDelete(@ScriptDir & "\Z982.mbn")
												ExitLoop
											EndIf
									 EndSwitch
								 WEnd

							Case 7
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en EDL..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb reboot edl", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(3000)
								#Region ### START Koda GUI section ### Form=
								Global $ComPortsSelector = GUICreate("Com Ports Selection", 544, 130, -1, -1)
								Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
								Global $inputcomport = GUICtrlCreateCombo("", 32, 40, 233, 25)
								GUICtrlSetData($inputcomport, _CommListPorts(1))
								GUICtrlCreateGroup("", -99, -99, 1, 1)
								Global $continuar = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
								Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
								Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
								Global $Label3 = GUICtrlCreateLabel("SELECT 9008 PORT.", 312, 80, 126, 17)
								Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
								Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
								GUISetState(@SW_SHOW)
								#EndRegion ### END Koda GUI section ###

								While 1
									$nMsg = GUIGetMsg()
									Switch $nMsg
										Case $GUI_EVENT_CLOSE
											GUIDelete($ComPortsSelector)
											DeleteRecurrencia($imei & "113")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
											ExitLoop

										Case $OpenDeviceMGM
											OpenDevMenu()

										Case $ButtonrefreshComm
											GUICtrlSetData($inputcomport,"")
											GUICtrlSetData($inputcomport, _CommListPorts(1))

										Case $continuar
											If Not FileExists(@ScriptDir & "\Z982.mbn") Then
											   FileInstall("Z982.mbn", @ScriptDir & "\Z982.mbn", 1)
											EndIf
											If Not FileExists(@ScriptDir & "\X.xml") Then
											   FileInstall("X.xml", @ScriptDir & "\X.xml", 1)
											EndIf
											$comfromuser = GUICtrlRead($inputcomport)
											GUIDelete($ComPortsSelector)
											Global $esult = SecguardadosZTE()
											#Region ### START Koda GUI section ### Form=
											Global $Security = GUICreate("Restore Sec", 312, 164, -1, -1)
											Global $Group1 = GUICtrlCreateGroup("Select Sec", 16, 8, 281, 137)
											Global $Combo1 = GUICtrlCreateCombo("", 64, 48, 177, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
											GUICtrlSetData($Combo1, $esult)
											Global $Button1 = GUICtrlCreateButton("Restore", 112, 96, 75, 25)
											GUICtrlCreateGroup("", -99, -99, 1, 1)
											GUISetState(@SW_SHOW)
											#EndRegion ### END Koda GUI section ###
											While 1
												$nMsg = GUIGetMsg()
												Switch $nMsg
													Case $GUI_EVENT_CLOSE
														GUIDelete($Security)
														DeleteRecurrencia($imei & "113")
														refund(GUICtrlRead($Edit1))
														EnableButtons()
														ExitLoop

													Case $Button1
														Global $lectura = GUICtrlRead($Combo1)
														GUIDelete($Security)
														If $lectura <> "" Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Procesando Sec..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															If FileExists(@ScriptDir & "\zetback.zip") Then FileDelete(@ScriptDir & "\zetback.zip")
															$ipid = _Crypt_DecryptFile(@MyDocumentsDir & "\Backup_MCU\ZTE\" & $lectura, @ScriptDir & "\zetback.zip", $decrypt, $iAlgorithm)
															ProcessWaitClose($ipid)
															If FileExists(@ScriptDir & "\ztecfgbak") Then FileDelete(@ScriptDir & "\ztecfgbak")
															If FileExists(@ScriptDir & "\modemst2bak") Then FileDelete(@ScriptDir & "\modemst2bak")
															If FileExists(@ScriptDir & "\modemst1bak") Then FileDelete(@ScriptDir & "\modemst1bak")
															if FileExists(@ScriptDir & "\fastbootbak") Then FileDelete(@ScriptDir & "\fastbootbak")
															$ipid = _Zip_UnzipAll(@ScriptDir & "\zetback.zip", @ScriptDir, 1)
															ProcessWaitClose($ipid)
															FileDelete(@ScriptDir & "\zetback.zip")
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Restaurando..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															$ipid = Run("emmcdl.exe -p " & $comfromuser & " -f Z982.mbn -x X.xml", "", @SW_HIDE)
															ProcessWaitClose($ipid)
															Sleep(1000)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															Sleep(500)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reinicie el dispositivo manualmente" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															FileDelete(@ScriptDir & "\Z982.mbn")
															FileDelete(@ScriptDir & "\X.xml")
															FileDelete(@ScriptDir & "\ztecfgbak")
															FileDelete(@ScriptDir & "\modemst2bak")
															FileDelete(@ScriptDir & "\modemst1bak")
															FileDelete(@ScriptDir & "\fastbootbak")
															ExitLoop
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seguridad no Seleccionada!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "113")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														EndIf
												EndSwitch
											WEnd
											ExitLoop
									EndSwitch
								 WEnd
						EndSwitch
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido, Modelo no soportado" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "113")
						refund(GUICtrlRead($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					DeleteRecurrencia($imei & "113")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $lggstyloroot
			DisableButtons()
			If Not FileExists(@ScriptDir & "\LGGSTYLO.zip") Then
				FileInstall("LGGSTYLO.zip", @ScriptDir & "\LGGSTYLO.zip", 1)
			EndIf
			$ipid = _Zip_UnzipAll(@ScriptDir & "\LGGSTYLO.zip", @ScriptDir, 1)
			ProcessWaitClose($ipid)
			FileDelete(@ScriptDir & "\LGGSTYLO.zip")
			_GUICtrlEdit_SetText ($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG G Stylo 5.1.1 Root (T-Mobile - MetroPCS - Boost - Sprint)" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = RunWait("adb reboot", "", @SW_HIDE)
				Sleep(3000)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				RunWait("adb wait-for-device", "", @SW_HIDE)
				BootComplete()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en Modo Download...")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Sleep(5000)
				$CHECKIN = checklg()
				if $CHECKIN == '' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO"& @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					MsgBox(64 + 1, "MCU Tool", "Dispositivo no detectado, Reinicie manualmente en modo descarga y presione ACEPTAR para continuar" & @CRLF & @CRLF & 'Device Not found, reboot it manually in download mode and click OK to continue')
				Else
					$ipid = command("Send_Command.exe \\.\" & $CHECKIN & " < enterDownload")
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(10000)
				EndIf
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Detectando en modo Download..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$CHECKIN = checklg()
				if $CHECKIN == '' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					FileDelete(@ScriptDir & "\UPDATE-SuperSU-v2.46.zip")
					FileDelete(@ScriptDir & "\Send_Command.exe")
					FileDelete(@ScriptDir & "\Push_File.exe")
					FileDelete(@ScriptDir & "\lg_root.sh")
					FileDelete(@ScriptDir & "\leaveDownload")
					FileDelete(@ScriptDir & "\installRoot")
					FileDelete(@ScriptDir & "\enterDownload")
					FileDelete(@ScriptDir & "\busybox")
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo detectado en el puerto: " & $CHECKIN & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Rooteando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = command("Push_File.exe \\.\" & $CHECKIN & " lg_root.sh /tmp/lg_root.sh")
					ProcessWaitClose($ipid)
					$ipid = command("Push_File.exe \\.\" & $CHECKIN & " busybox /tmp/busybox")
					ProcessWaitClose($ipid)
					$ipid = command("Push_File.exe \\.\" & $CHECKIN & " UPDATE-SuperSU-v2.46.zip /tmp/UPDATE-SuperSU-v2.46.zip")
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Corriendo Instalador..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(1000)
					$ipid = command("Send_Command.exe \\.\" & $CHECKIN & " < installRoot")
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = command("Send_Command.exe \\.\" & $CHECKIN & " < leaveDownload")
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					FileDelete(@ScriptDir & "\UPDATE-SuperSU-v2.46.zip")
					FileDelete(@ScriptDir & "\Send_Command.exe")
					FileDelete(@ScriptDir & "\Push_File.exe")
					FileDelete(@ScriptDir & "\lg_root.sh")
					FileDelete(@ScriptDir & "\leaveDownload")
					FileDelete(@ScriptDir & "\installRoot")
					FileDelete(@ScriptDir & "\enterDownload")
					FileDelete(@ScriptDir & "\busybox")
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			Else
				EnableButtons()
			EndIf

		Case $root
			$salve = MsgBox(48 + 4, "Advertencia", " No nos hacemos responsables en ningun caso si su telefono termina brickeado, todos los root han sido satisfactoriamente probados en versiones de Android referidas. Desea continuar?" & @CRLF & @CRLF & 'We are not responsable in any way if your phone get bricked, all roots are been tested in versions refered by the tool. Do you wish to continue?')
			Switch $salve
				Case 6
					global $sComboRead = ""
					$sComboRead = GUICtrlRead($Oneclick)
					If $sComboRead == "LG G3" Or $sComboRead == "LG G2" Or $sComboRead == "LG G2 Mini" Or $sComboRead == "LG G Pro 2" Or $sComboRead == "LG G Pad" Or $sComboRead == "LG F60" Or $sComboRead == "LG L90" Or $sComboRead == "LG Tribute" Or $sComboRead == "LG Spirit" Or $sComboRead == "LG Volt" Or $sComboRead == "LG G Vista" Or $sComboRead == "LG LS751" Or $sComboRead == "LG LS885 Android 4.4.2" Or $sComboRead == "LG LS665 Android 5.1.1" Then
						DisableButtons()
						_GUICtrlEdit_SetText ($Edit1, "")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG One Click Root Model " & $sComboRead & @CRLF)
						$pro = GUICtrlRead($Edit1)
						$dejaver = ReadInfoprocess()
						If $dejaver == 1 then
							If Not FileExists(@ScriptDir & "\LGoneClick.zip") Then
								FileInstall("LGoneClick.zip", @ScriptDir & "\LGoneClick.zip", 1)
							EndIf
							If Not FileExists(@ScriptDir & "\LGGSTYLO.zip") Then
								FileInstall("LGGSTYLO.zip", @ScriptDir & "\LGGSTYLO.zip", 1)
							EndIf
							$ipid = _Zip_Unzip(@ScriptDir & "\LGGSTYLO.zip", "UPDATE-SuperSU-v2.46.zip", @ScriptDir, 1)
							ProcessWaitClose($ipid)
							$ipid = _Zip_UnzipAll(@ScriptDir & "\LGoneClick.zip", @ScriptDir, 1)
							ProcessWaitClose($ipid)
							FileDelete(@ScriptDir & "\LGGSTYLO.zip")
							FileDelete(@ScriptDir & "\LGoneClick.zip")
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando archivos al dispositivo..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = command("adb.exe push busybox /data/local/tmp/")
							ProcessWaitClose($ipid)
							$ipid = command("adb.exe push lg_root.sh /data/local/tmp/")
							ProcessWaitClose($ipid)
							$ipid = command("adb.exe push UPDATE-SuperSU-v2.46.zip /data/local/tmp/")
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = RunWait("adb reboot", "", @SW_HIDE)
							Sleep(3000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando..." )
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							RunWait("adb wait-for-device", "", @SW_HIDE)
							BootComplete()
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en Modo Download...")
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Sleep(5000)
							$CHECKIN = checklg()
							if $CHECKIN == '' Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								MsgBox(64 + 1, "MCU Tool", "Dispositivo no detectado, Reinicie manualmente en modo descarga y presione ACEPTAR para continuar" & @CRLF & @CRLF & 'Device Not found, reboot it manually in download mode and click OK to continue')
							Else
								$ipid = command("Send_Command.exe \\.\" & $CHECKIN & " < enterDownload")
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Sleep(10000)
							EndIf
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Detectando en modo Download..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$CHECKIN = checklg()
							if $CHECKIN == '' Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								FileDelete(@ScriptDir & "\UPDATE-SuperSU-v2.46.zip")
								FileDelete(@ScriptDir & "\Send_Command.exe")
								FileDelete(@ScriptDir & "\lg_root.sh")
								FileDelete(@ScriptDir & "\leaveDownload")
								FileDelete(@ScriptDir & "\installRoot")
								FileDelete(@ScriptDir & "\enterDownload")
								FileDelete(@ScriptDir & "\busybox")
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo detectado en el puerto: " & $CHECKIN & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Rooteando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = command("Send_Command.exe \\.\" & $CHECKIN & " < installRoot")
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = command("Send_Command.exe \\.\" & $CHECKIN & " < leaveDownload")
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado! Si el dispositivo no reinicia, hagalo manualmente." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
								FileDelete(@ScriptDir & "\UPDATE-SuperSU-v2.46.zip")
								FileDelete(@ScriptDir & "\Send_Command.exe")
								FileDelete(@ScriptDir & "\lg_root.sh")
								FileDelete(@ScriptDir & "\leaveDownload")
								FileDelete(@ScriptDir & "\installRoot")
								FileDelete(@ScriptDir & "\enterDownload")
								FileDelete(@ScriptDir & "\busybox")
							EndIf
						Else
							EnableButtons()
						EndIf
					ElseIf $sComboRead == "LG TP450" Then
						DisableButtons()
						_GUICtrlEdit_SetText ($Edit1, "")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG One Click Root Model " & $sComboRead & @CRLF)
						$pro = GUICtrlRead($Edit1)
						$dejaver = ReadInfoprocess()
						If $dejaver == 1 then
							If Not FileExists(@ScriptDir & "\Resources\TP450.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$sDownloaderTitle = "Descargando Resources"
								$url            = "http://mcu-tool.com/MCU-Tool Resources/LG/TP450.mcu"
								$file           = "TP450.mcu"
								$name           = "TP450.mcu"
								$dir            = @ScriptDir & "\Resources\"
								_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
							EndIf
							If FileExists(@ScriptDir & "\Resources\TP450.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Recursos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\TP450.mcu", @ScriptDir & "\Resources\TP450.zip", $decrypt, $iAlgorithm)
								ProcessWaitClose($ipid)
								$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\TP450.zip", @ScriptDir, 1)
								ProcessWaitClose($ipid)
								FileDelete(@ScriptDir & "\Resources\TP450.zip")
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando ADB Server..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb kill-server', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb start-server', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb wait-for-device', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo fastboot..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb reboot bootloader', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(10000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Bootloader..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('fastboot oem unlock', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(3000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flasheando Root Boot..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('fastboot flash boot Rooted.img', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(3000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('fastboot reboot', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(3000)
								MsgBox(64, "MCU Tool",  "Espere a que el dispositivo Bootee completamente y active ADB nuevamente. Cuando este listo presione Aceptar para continuar" & @CRLF & @CRLF & 'Wait for device to boot completely and enable usb debug manually. When ready click OK to continue')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando ADB Server..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb kill-server', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb start-server', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb wait-for-device', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								BootComplete()
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Magisk..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb install magisk.apk', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Si no encuentra magisk apk solo debe instalarla manualmente..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								FileDelete(@ScriptDir & "magisk.apk")
								FileDelete(@ScriptDir & "Rooted.img")
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								MsgBox(64, 'MCU Tool', 'Error en la descarga de los recursos!' & @CRLF & @CRLF & 'Error downloading resources!')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
							EnableButtons()
						EndIf
					ElseIf $sComboRead == "LG G4 H811" Then
						DisableButtons()
						_GUICtrlEdit_SetText ($Edit1, "")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG One Click Root Model " & $sComboRead & @CRLF)
						$pro = GUICtrlRead($Edit1)
						$dejaver = ReadInfoprocess()
						If $dejaver == 1 then
							If Not FileExists(@ScriptDir & "\Resources\H811.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$sDownloaderTitle = "Descargando Resources"
								$url            = "http://mcu-tool.com/MCU-Tool Resources/LG/H811.mcu"
								$file           = "H811.mcu"
								$name           = "H811.mcu"
								$dir            = @ScriptDir & "\Resources\"
								_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
							EndIf
							If FileExists(@ScriptDir & "\Resources\H811.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Recursos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\H811.mcu", @ScriptDir & "\Resources\H811.zip", $decrypt, $iAlgorithm)
								ProcessWaitClose($ipid)
								$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\H811.zip", @ScriptDir, 1)
								ProcessWaitClose($ipid)
								FileDelete(@ScriptDir & "\Resources\H811.zip")
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando ADB Server..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb kill-server', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb start-server', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb wait-for-device', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								BootComplete()
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo fastboot..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb reboot bootloader', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(10000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Bootloader..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('fastboot oem unlock', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(3000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flasheando Recovery..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('fastboot flash recovery recovery.img', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								MsgBox(64, "MCU Tool", "Reinicie el dispositivo en modo recovery, una vez dentro presione Aceptar para continuar" & @CRLF & @CRLF & 'Reboot device in recovery mode, once inside click OK to continue')
								Sleep(2000)
								MsgBox(64, "MCU Tool", "Ahora dentro del recovery, dirigete a Wipe/Format Data/ escribe yes terminado el formateo regresa al menu principal del recovery, presiona Aceptar para continuar!" & @CRLF & @CRLF & 'In recovery mode go to Wipe/Format Data/ type yes and after hard reset go to main recovery menu again, click OK to continue!')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Formateo listo..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Sleep(1000)
								MsgBox(64, "MCU Tool", "Dirigete a Advanced/ Adb Sideload/ Swipe to allow sideload, presiona Aceptar para continuar!" & @CRLF & @CRLF & 'Go to Advanced/ Adb Sideload/ Swipe to allow sideload, and click OK to continue!')
								$ipid = Run('adb sideload verify.zip', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								MsgBox(64, "MCU Tool", "Dirigete a back/ Adb Sideload (otra vez)/ Swipe to allow sideload, presiona Aceptar para continuar!" & @CRLF & @CRLF & 'Go to Advanced/ Adb Sideload (again )/ Swipe to allow sideload, and click OK to continue!')
								$ipid = Run('adb sideload SuperSu.zip', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Root Listo!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Sleep(3000)
								$ipid = Run('adb reboot', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								FileDelete(@ScriptDir & "SuperSu.zip")
								FileDelete(@ScriptDir & "verify.zip")
								FileDelete(@ScriptDir & "recovery.img")
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								MsgBox(64, 'MCU Tool', 'Error en la descarga de los recursos!' & @CRLF & @CRLF & 'Error downloading resources!')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
							EnableButtons()
						EndIf
					ElseIf $sComboRead == "LG MP450" Or $sComboRead == "LGM470" Then
						DisableButtons()
						_GUICtrlEdit_SetText ($Edit1, "")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG One Click Root Model " & $sComboRead & @CRLF)
						$pro = GUICtrlRead($Edit1)
						$dejaver = ReadInfoprocess()
						If $dejaver == 1 then
							If Not FileExists(@ScriptDir & "\Resources\MP450.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$sDownloaderTitle = "Descargando Resources"
								$url            = "http://mcu-tool.com/MCU-Tool Resources/LG/MP450.mcu"
								$file           = "MP450.mcu"
								$name           = "MP450.mcu"
								$dir            = @ScriptDir & "\Resources\"
								_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
							EndIf
							If FileExists(@ScriptDir & "\Resources\MP450.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Recursos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\MP450.mcu", @ScriptDir & "\Resources\MP450.zip", $decrypt, $iAlgorithm)
								ProcessWaitClose($ipid)
								$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\MP450.zip", @ScriptDir, 1)
								ProcessWaitClose($ipid)
								FileDelete(@ScriptDir & "\Resources\MP450.zip")
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando ADB Server..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb kill-server', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb start-server', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb wait-for-device', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								BootComplete()
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo fastboot..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb reboot bootloader', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(10000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Bootloader..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('fastboot oem unlock', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flasheando Recovery..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('fastboot flash recovery mp450.img', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								MsgBox(64, "MCU Tool", "Reinicie el dispositivo en modo recovery, una vez dentro presione Aceptar para continuar" & @CRLF & @CRLF & 'Reboot in recovery mode once inside click OK to continue')
								Sleep(2000)
								MsgBox(64, "MCU Tool", "Ahora dentro del recovery, dirigete a Wipe/Format Data/ escribe yes terminado el formateo regresa al menu principal del recovery, presiona Aceptar para continuar!" & @CRLF & @CRLF & 'Now in recovery mode go to Wipe/Format Data/ and type yes, after hard reset go to recovery main menu and click OK to continue!')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Formateo listo..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Sleep(1000)
								MsgBox(64, "MCU Tool", "Dirigete a Advanced/ Adb Sideload/ Swipe to allow sideload, presiona Aceptar para continuar!" & @CRLF & @CRLF & ' Go to  Advanced/ Adb Sideload/ Swipe to allow sideload, click OK to continue!')
								$ipid = Run('adb sideload verify.zip', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								MsgBox(64, "MCU Tool", "Dirigete a back/ Adb Sideload (otra vez)/ Swipe to allow sideload, presiona Aceptar para continuar!"  & @CRLF & @CRLF & 'Go to back/ Adb Sideload (again)/ Swipe to allow sideload, click OK to continue')
								$ipid = Run('adb sideload SuperSu.zip', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Root Listo!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb reboot', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								FileDelete(@ScriptDir & "SuperSu.zip")
								FileDelete(@ScriptDir & "verify.zip")
								FileDelete(@ScriptDir & "mp450.img")
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								MsgBox(64, 'MCU Tool', 'Error en la descarga de los recursos!' & @CRLF & @CRLF & 'Error downloading resources!' )
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
							EnableButtons()
						EndIf
					ElseIf $sComboRead == "LG MP260" Or $sComboRead == "LG TP260" Then
						DisableButtons()
						_GUICtrlEdit_SetText ($Edit1, "")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG One Click Root Model " & $sComboRead & @CRLF)
						$pro = GUICtrlRead($Edit1)
						$dejaver = ReadInfoprocess()
						If $dejaver == 1 then
							If Not FileExists(@ScriptDir & "\Resources\MP260.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$sDownloaderTitle = "Descargando Resources"
								$url            = "http://mcu-tool.com/MCU-Tool Resources/LG/MP260.mcu"
								$file           = "MP260.mcu"
								$name           = "MP260.mcu"
								$dir            = @ScriptDir & "\Resources\"
								_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
							EndIf
							If FileExists(@ScriptDir & "\Resources\MP260.mcu") Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Recursos..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\MP260.mcu", @ScriptDir & "\Resources\MP260.zip", $decrypt, $iAlgorithm)
								ProcessWaitClose($ipid)
								$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\MP260.zip", @ScriptDir, 1)
								ProcessWaitClose($ipid)
								FileDelete(@ScriptDir & "\Resources\MP260.zip")
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando ADB Server..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb kill-server', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								$ipid = Run('adb start-server', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb wait-for-device', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								BootComplete()
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en modo fastboot..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb reboot bootloader', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(10000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Bootloader..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('fastboot oem unlock', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(3000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Flasheando Recovery..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('fastboot flash recovery k20recovery.img', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								MsgBox(64, "MCU Tool", "Reinicie el dispositivo en modo recovery, una vez dentro presione Aceptar para continuar" & @CRLF & @CRLF & 'Reboot device to recovery mode, once inside click OK to continue')
								Sleep(2000)
								MsgBox(64, "MCU Tool", "Ahora dentro del recovery, dirigete a Wipe/Format Data/ escribe yes terminado el formateo regresa al menu principal del recovery, presiona Aceptar para continuar!" & @CRLF & @CRLF & 'Now in recovery go to Wipe/Format Data/type yes, after hard reset go to recovery main menu and click OK to continue!')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Formateo listo..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Sleep(1000)
								MsgBox(64, "MCU Tool", "Dirigete a Advanced/ Adb Sideload/ Swipe to allow sideload, presiona Aceptar para continuar!" & @CRLF & @CRLF & 'Go to Advanced/ Adb Sideload/ Swipe to allow sideload, click OK to continue!')
								$ipid = Run('adb sideload verity.zip', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								MsgBox(64, "MCU Tool", "Dirigete a back/ Adb Sideload (otra vez)/ Swipe to allow sideload, presiona Aceptar para continuar!" & @CRLF & @CRLF & 'Go to back/ Adb Sideload (again)/ Swipe to allow sideload, click OK to continue!')
								$ipid = Run('adb sideload SuperSU.zip', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Root Listo!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('adb reboot', "", @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								FileDelete(@ScriptDir & "SuperSu.zip")
								FileDelete(@ScriptDir & "verity.zip")
								FileDelete(@ScriptDir & "k20recovery.img")
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								MsgBox(64, 'MCU Tool', 'Error en la descarga de los recursos!' & @CRLF & @CRLF & 'Error downloading resources!')
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
							EnableButtons()
						EndIf
					Else
						 MsgBox(64, "MCU Tool", "Modelo no soportado" & @CRLF & @CRLF & 'Model Not supported')
						 EnableButtons()
					EndIf
				Case 7
					 EnableButtons()
			EndSwitch
		Case $seleccionar
			 Global $sFileOpenDialog = FileOpenDialog("Select Boot image", @WindowsDir & "\", "Images (*.img)", $FD_FILEMUSTEXIST)
			 If @error Then
			 MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
			 EndIf
			 GUICtrlSetData($selectboot, $sFileOpenDialog)

		case $process
			DisableButtons()
			$pro = "Boot creator"
			 _GUICtrlEdit_SetText ($Edit1, "")
			 If Not FileExists(@ScriptDir & "\Resources\boot.mcu") Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$sDownloaderTitle = "Descargando Resources"
				$url            = "http://mcu-tool.com/MCU-Tool Resources/Boot Bypass/boot.mcu"
				$file           = "boot.mcu"
				$name           = "boot.mcu"
				$dir            = @ScriptDir & "\Resources\"
				_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
			EndIf
			 If FileExists(@ScriptDir & "\Resources\boot.mcu") Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Resources..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				If Not FileExists(@ScriptDir & "\img.exe") Then
					FileInstall("img.exe", @ScriptDir & "\img.exe", 1)
				EndIf
				$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\boot.mcu", @ScriptDir & "\Resources\boot.zip", $decrypt, $iAlgorithm)
				ProcessWaitClose($ipid)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\boot.zip", @ScriptDir, 1)
				ProcessWaitClose($ipid)
				FileDelete(@ScriptDir & "\Resources\boot.zip")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando imagenes anteriores y eliminando..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				If FileExists(@ScriptDir  & "\boot.img") Then
					 FileDelete(@ScriptDir  & "\boot.img")
				 EndIf
				Sleep(1000)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Procesando..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = FileCopy($sFileOpenDialog, @ScriptDir, 0)
				ProcessWaitClose($ipid)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Modificando imagen:")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ShellExecuteWait("img.exe", "", @ScriptDir, $SHEX_OPEN, @SW_HIDE)
				FileDelete(@ScriptDir  & "\modify.exe")
				FileDelete(@ScriptDir  & "\img.exe")
				FileDelete(@ScriptDir  & "\rip.exe")
				DirRemove(@ScriptDir  & "\bin", $DIR_REMOVE)
				If FileExists(@ScriptDir  & "\output\RvSecuRitY_SAMSUNG.tar.md5") Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Guardando archivo..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					FileMove(@ScriptDir  & "\output\RvSecuRitY_SAMSUNG.tar.md5", @ScriptDir  & "\output\McuBoot.tar", $FC_OVERWRITE)
					ShellExecute("output", "", @ScriptDir, $SHEX_OPEN)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			 Else
				MsgBox(64, 'MCU Tool', 'Error en la descarga de los recursos!' & @CRLF & @CRLF & 'Error downloading resources!')
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				firma()
				AddLog()
				logs()
				EnableButtons()
			EndIf

		Case $batteycheck
			DisableButtons()
			_GUICtrlEdit_SetText ($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Resumen de la Bateria" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Salud: ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = _Android_GetBatteryHealth()
				If $ipid == '1' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Desconocida" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ElseIf $ipid == '2' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Buena" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ElseIf $ipid == '3' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Sobrecalentamiento" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ElseIf $ipid == '4' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Mala" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ElseIf $ipid == '5' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Sobre Voltaje" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ElseIf $ipid == '6' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Falla desconocida" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ElseIf $ipid == '7' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Fria" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				EndIf
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Porcentaje: ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = _Android_GetBatteryLevel()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $ipid & "%" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cargando: ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid =  _Android_GetBatteryPlugType()
				If $ipid == '1' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "AC" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ElseIf $ipid == '2' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "USB" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ElseIf $ipid == '3' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Inhalambrica" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				EndIf
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Estado: ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid =  _Android_GetBatteryStatus()
				If $ipid == '1' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Desconocido" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ElseIf $ipid == '2' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Carga Correcta" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ElseIf $ipid == '3' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Descargando" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ElseIf $ipid == '4' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Sin cargar" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ElseIf $ipid == '5' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Carga Completa" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				EndIf
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Temperatura: ")
				$ipid = _Android_GetBatteryTemperature()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $ipid & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				firma()
				AddLog()
				logs()
				EnableButtons()
			Else
				EnableButtons()
			EndIf

		Case $redcheck
			DisableButtons()
			_GUICtrlEdit_SetText ($Edit1, "") ;red
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Network Info" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				$ipid = _Android_GetNetworkCountryISO()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Network Country ISO: ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $ipid & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid =  _Android_GetNetworkOperator()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Network Operator Numeric: ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $ipid & @CRLF)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Network SIM1,SIM2: ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = Run("adb shell getprop gsm.network.type", "", @SW_HIDE, $stderr_child + $stdout_child)
				ProcessWaitClose($ipid)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
				firma()
				AddLog()
				logs()
				EnableButtons()
			Else
				EnableButtons()
			EndIf


		Case $rootchecker
			DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Root Checker" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				$ipid = _Android_HasRootAccess()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				If $ipid == "False" Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ElseIf $ipid == "True" Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Rooted by: " )
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('adb shell su "-v"', "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				EndIf
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " BusyBox Installed: ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = _Android_HasBusyBox()
				If $ipid == "False" Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				ElseIf $ipid == "True" Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('adb shell busybox', "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " BusyBox Version: ")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $arre = StringSplit($soutput, " ")
					Global $vers = $arre[2]
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $vers & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			Else
				EnableButtons()
			EndIf

		Case $engmodemstart
			DisableButtons()
            global $sComboRead = ""
			$sComboRead = GUICtrlRead($engmodem)
			$modelo = StringReplace($sComboRead, " ", "")
			_GUICtrlEdit_SetText ($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $modelo & " ENG Modem Flasher" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoSamsung()
			If $dejaver == 1 then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = _Android_HasRootAccess()
				ProcessWaitClose($ipid)
				If $ipid == "False" Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				ElseIf $ipid == "True" Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					If Not FileExists(@ScriptDir & "\Resources\" & $modelo & ".mcu") Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$sDownloaderTitle = "Descargando Resources"
						$url            = "http://mcu-tool.com/MCU-Tool Resources/Modems/" & $modelo & ".mcu"
						$file           = $modelo & ".mcu"
						$name           = $modelo & ".mcu"
						$dir            = @ScriptDir & "\Resources\"
						_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
					EndIf
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando archivos..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(2000)
					If FileExists(@ScriptDir & "\Resources\" & $modelo & ".mcu") Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Recursos..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\" & $modelo & ".mcu", @ScriptDir & "\Resources\" & $modelo & ".zip", $decrypt, $iAlgorithm)
						ProcessWaitClose($ipid)
						$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\" & $modelo & ".zip", @ScriptDir, 1)
						ProcessWaitClose($ipid)
						FileDelete(@ScriptDir & "\Resources\" & $modelo & ".zip")
						Sleep(1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando Modem..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run('adb push modem.bin /sdcard/', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Habilitando EngModem...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = command("adb shell su dd if=/sdcard/modem.bin of=dev/block/mmcblk0p19")
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Listo" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
						FileDelete(@ScriptDir & "\modem.bin")
					Else
						MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				EndIf
			Else
				EnableButtons()
			EndIf

		Case $huaweilenguage
			DisableButtons()
			_GUICtrlEdit_SetText ($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Huawei Lenguage Enabler" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Modelo..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = Run("adb shell getprop ro.product.brand", "", @SW_HIDE, $stderr_child + $stdout_child)
				ProcessWaitClose($ipid)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If $soutput = "Huawei" Then
					$ipid = _Android_HasRootAccess()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					If $ipid == "False" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					ElseIf $ipid == "True" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Habilitando...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run('shell su -c mount -o remount, rw /cust', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run('shell su -c mount -o rw,remount /cust', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run('shell su delete rm /cust/*.xml', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Listo" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					MsgBox(16, "MCU Tool", "Modelo NO soportado" & @CRLF & @CRLF & 'Model Not supported')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido."  & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			Else
				EnableButtons()
			EndIf

		Case $htclenguage
			DisableButtons()
			_GUICtrlEdit_SetText ($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " HTC Lenguage Enabler" & @CRLF)
			$pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Comprobando Modelo..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = Run("adb shell getprop ro.product.brand", "", @SW_HIDE, $stderr_child + $stdout_child)
				ProcessWaitClose($ipid)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If $soutput = "htc" Then
					$ipid = _Android_HasRootAccess()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					If $ipid == "False" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					ElseIf $ipid == "True" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Habilitando...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run('shell su -c mount -o remount, rw /system', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run('shell su -c mount -o rw,remount /system', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						$ipid = Run('shell su delete rm /system/customize/CID/*.xml', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Listo" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run('adb reboot', "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Por Favor, haga un hard reset a su dispositivo para mostrar los nuevos idiomas!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					MsgBox(16, "MCU Tool", "Modelo NO soportado" & @CRLF & @CRLF & 'Model Not supported')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido."  & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			Else
				EnableButtons()
			EndIf

		Case $bladel2
		    DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ZTE Blade L2 Fix Bands" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			$dejaver = ReadInfoprocess()
			If $dejaver == 1 then
				 $ipid = _Android_HasRootAccess()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Root: ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				If $ipid == "False" Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NO" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido, Rootee su dispositivo." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				ElseIf $ipid == "True" Then
					If Not FileExists(@ScriptDir & "\modem_1_wg_n.img") Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$sDownloaderTitle = "Descargando Resources"
						$url            = "http://mcu-tool.com/MCU-Tool Resources/modem_1_wg_n.img"
						$file           = "modem_1_wg_n.img"
						$name           = "modem_1_wg_n.img"
						$dir            = @ScriptDir
						_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
					EndIf
					 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando ADB server..." & @CRLF)
					 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					commandwait("adb kill-server")
					commandwait("adb start-server")
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					commandwait("adb shell su -c rm /etc/firmware/modem_1_wg_n.img")
					commandwait("adb shell su -c mkdir /data/temp")
					commandwait("adb shell su -c mount -o rw,remount /data")
					commandwait("adb push modem_1_wg_n.img /data/temp")
					commandwait("adb shell su -c cp /data/temp/modem_1_wg_n.img /etc/firmware")
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				EndIf
			Else
				EnableButtons()
			EndIf
		Case $ButtonHuaweiSim
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("ButtonHuaweiSim", "68")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Huawei SIM Inserted Error Fix" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					commandwait('adb shell pm uninstall -k --user 0 com.huawei.tmecustomize')
					commandwait('adb shell pm uninstall -k --user 0 com.huawei.tmecustomize')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('adb wait-for-device', "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					BootComplete()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('adb shell pm list packages', "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If StringInStr($soutput, "com.huawei.tmecustomize") == 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "68")
						refund(GUICtrlRead($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					DeleteRecurrencia($imei & "68")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $ButtonMoto
			#Region ### START Koda GUI section ### Form=
			Global $Moto = GUICreate("Moto Flasher", 422, 354, -1, -1)
			Global $Selection = GUICtrlCreateGroup("Selection", 8, 16, 401, 89)
			Global $InputShowroute = GUICtrlCreateInput("", 24, 48, 273, 21, BitOR($GUI_SS_DEFAULT_INPUT,$ES_READONLY))
			Global $ButtonSelectXML = GUICtrlCreateButton("Select XML", 320, 48, 75, 25)
			GUICtrlCreateGroup("", -99, -99, 1, 1)
			Global $Partitions = GUICtrlCreateGroup("Select Partitions Flash Commands", 8, 112, 401, 225)
			Global $ButtonFlash = GUICtrlCreateButton("Flash", 312, 304, 75, 25)
			Global $ListMoto = GUICtrlCreateList("", 16, 128, 385, 149, BitOR($WS_VSCROLL,$LBS_EXTENDEDSEL))
			GUICtrlSetData(-1, "")
			Global $Reboot = GUICtrlCreateCheckbox("Reboot After Flash", 32, 304, 105, 17)
			GUICtrlSetState(-1, $GUI_CHECKED)
			GUICtrlCreateGroup("", -99, -99, 1, 1)
			GUISetState(@SW_SHOW)
			#EndRegion ### END Koda GUI section ###
			While 1
				$nMsg = GUIGetMsg()
				Switch $nMsg
					Case $GUI_EVENT_CLOSE
						GUIDelete($Moto)
						ExitLoop

					Case $ButtonSelectXML
						 Local $i
						 Global $sFileOpenDialog = FileOpenDialog("Select XML Flash File", @MyDocumentsDir & "\", "XML(*.xml)", $FD_FILEMUSTEXIST)
						 If @error Then
							MsgBox($MB_SYSTEMMODAL, "", "No se selecciono ningun archivo!." & @CRLF & @CRLF & 'No files selected!')
						 Else
							GUICtrlSetData($InputShowroute, $sFileOpenDialog)
							Global $address = StringTrimRight($sFileOpenDialog, 14)
							If FileExists($address & "\flashfile.bat") Then
								FileDelete($address & "\flashfile.bat")
							EndIf
							If Not FileExists($address & "\flash.bat") Then
								FileInstall("flash.bat", $address & "\flash.bat", 1)
							EndIf
							ShellExecuteWait("flash.bat", "", $address, $SHEX_OPEN, @SW_HIDE)
							FileDelete($address & "\flash.bat")
							If FileExists($address & "\flashfile.bat") Then
								Global $abrelo = FileOpen($address & "\flashfile.bat")
								Global $Count = _FileCountLines($address & "\flashfile.bat")
								Global $arreglo = FileReadToArray($abrelo)
								For $i = 1 To $Count - 1
									GUICtrlSetData($ListMoto, $arreglo[$i] & "|")
								Next
								FileDelete($address & "\flashfile.bat")
							Else
								MsgBox($MB_SYSTEMMODAL, "Error", "Flashfile.xml incorrecto!" & @CRLF & @CRLF & 'Wrong Flashfile.xml')
							EndIf
						 EndIf

					Case $ButtonFlash
						If _IsChecked($Reboot) Then
							Global $cierto = '1'
						Else
							$cierto = '2'
						EndIf
						Global $sItems
						Global $Items = _GUICtrlListBox_GetSelItemsText($ListMoto)
						GUIDelete($Moto)
						DisableButtons()
						_GUICtrlEdit_SetText($Edit1, "")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Moto Flasher" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$pro = GUICtrlRead($Edit1)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en modo Fastboot...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$soutput = FastbootDetect()
						If $soutput == 0 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							 EnableButtons()
							 ExitLoop
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							FastbootReadInfo()
							Sleep(1000)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Preparando...")
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If FileExists($address & "\fb.zip") Then
								FileDelete($address & "\fb.zip")
							EndIf
							FileInstall("fb.zip", $address & "\fb.zip", $FC_OVERWRITE)
							$ipid = _Zip_UnzipAll($address & "\fb.zip", $address, 1)
							ProcessWaitClose($ipid)
							FileDelete($address & "\fb.zip")
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If $cierto == '1' Then
								If FileExists($address & "\temp.txt") Then
									FileDelete($address & "\temp.txt")
								EndIf
								Global $aItems = $Items
								For $iI = 1 To $aItems[0]
									$sItems &= $aItems[$iI] & @CRLF
								Next
								FileWrite($address & "\temp.txt", $sItems)
								Global $Count1 = _FileCountLines($address & "\temp.txt")
								Global $arreglo2 = FileReadToArray($address & "\temp.txt")
								For $i = 0 To $Count1 - 1
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & ' ' & $arreglo2[$i] & '...')
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run($arreglo2[$i], $address, @SW_HIDE)
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & 'OK' & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Next
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run('fastboot reboot', $address, @SW_HIDE)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								FileDelete($address & "\adb.exe")
								FileDelete($address & "\AdbWinApi.dll")
								FileDelete($address & "\AdbWinUsbApi.dll")
								FileDelete($address & "\fastboot.exe")
								FileDelete($address & "\temp.txt")
								FileDelete($address & "\fb.zip")
								firma()
								AddLog()
								logs()
								EnableButtons()
								ExitLoop
							Else
								If FileExists($address & "\temp.txt") Then
									FileDelete($address & "\temp.txt")
								EndIf
								Global $aItems = $Items
								For $iI = 1 To $aItems[0]
									$sItems &= $aItems[$iI] & @CRLF
								Next
								FileWrite($address & "\temp.txt", $sItems)
								Global $Count1 = _FileCountLines($address & "\temp.txt")
								Global $arreglo2 = FileReadToArray($address & "\temp.txt")
								For $i = 0 To $Count1 - 1
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & ' ' & $arreglo2[$i] & '...')
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$ipid = Run($arreglo2[$i], $address, @SW_HIDE)
									ProcessWaitClose($ipid)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & 'OK' & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								Next
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								FileDelete($address & "\adb.exe")
								FileDelete($address & "\AdbWinApi.dll")
								FileDelete($address & "\AdbWinUsbApi.dll")
								FileDelete($address & "\fastboot.exe")
								FileDelete($address & "\temp.txt")
								FileDelete($address & "\fb.zip")
								firma()
								AddLog()
								logs()
								EnableButtons()
								ExitLoop
							EndIf
						EndIf
				EndSwitch
			WEnd

		Case $ButtonUnlockLG
			$sComboRead = GUICtrlRead($ComboUnlockLG)
			If $sComboRead == $iArray[139] Then
				Global $precio = ''
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("260unlock", "85")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MP260/TP260 One Click Unlock" & @CRLF)
					MsgBox(64, "MC-U Tool", "Es importante que habilite OEM UNLOCK y USB DEBUG antes de comenzar de lo contrario no funcionara el proceso."  & @CRLF & @CRLF & "Is important to enable OEM UNLOCK and USB DEBUG before start or process will fail")
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						$imei = IxxxProcess(GUICtrlRead($Edit1))
						Global $dime = IsCreditNedded2("15", $key)
						If $activo == 1 Then
							Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "15")
						EndIf
						If $confirm <> "NO" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If $key == False Then
								DeleteRecurrencia($imei & "85")
								refund(GUICtrlRead($Edit1))
								WrongKey($imei)
							ElseIf $key == 0 Then
								DeleteRecurrencia($imei & "85")
								refund(GUICtrlRead($Edit1))
								Error0002($imei)
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Modelo..." )
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
								ProcessWaitClose($ipid)
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								If StringInStr($soutput, "MP260") <> 0 Or StringInStr($soutput, "TP260") <> 0 then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If Not FileExists(@ScriptDir & "\Resources\TP260.mcu") Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$sDownloaderTitle = "Descargando Resources"
										$url            = "http://mcu-tool.com/MCU-Tool Resources/TP260/TP260.mcu"
										$file           = "TP260.mcu"
										$name           = "TP260.mcu"
										$dir            = @ScriptDir & "\Resources\"
										_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
									EndIf
									If FileExists(@ScriptDir & "\Resources\TP260.mcu") Then
										DeleteTP260()
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Recursos..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\TP260.mcu", @ScriptDir & "\Resources\TP260.zip", $decrypt, $iAlgorithm)
										ProcessWaitClose($ipid)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\TP260.zip", @ScriptDir, 1)
										ProcessWaitClose($ipid)
										FileDelete(@ScriptDir & "\Resources\TP260.zip")
										Sleep(1000)
										Global $imeilg = ""
										$ipid = Run("adb shell getprop gsm.baseband.imei", "", @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
										$imeilg = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando estado del IMEI...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If StringLen($imeilg) <> 15 Then
											#Region ### START Koda GUI section ### Form=
											Global $InputImei = GUICreate("Input IMEI", 281, 145, -1, -1)
											Global $GroupIMEILG = GUICtrlCreateGroup("IMEI", 16, 8, 249, 121)
											Global $textboximeilg = GUICtrlCreateInput("", 56, 48, 169, 21)
											Global $ButtonImeilg = GUICtrlCreateButton("OK", 104, 88, 75, 25)
											GUICtrlCreateGroup("", -99, -99, 1, 1)
											GUISetState(@SW_SHOW)
											#EndRegion ### END Koda GUI section ###
											While 1
												$nMsg = GUIGetMsg()
												Switch $nMsg
													Case $GUI_EVENT_CLOSE
														GUIDelete($InputImei)
														ExitLoop
													Case $ButtonImeilg
														$imeilg = GUICtrlRead($textboximeilg)
														GUIDelete($InputImei)
														ExitLoop
												EndSwitch
											WEnd
										EndIf
										If StringLen($imeilg) == 15 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Global $var = shori($dime[1], $key)
											Global $Unlocktp60 = StringSplit($var, "{")
											Global $rootcheck = _Android_HasRootAccess()
											Global $askback = MsgBox(4, "MC-U Tool", "Desea guardar la seguridad?" & @CRLF & @CRLF & "Do you wish to backup security?")
											If $askback == 6 Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Verificando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												If $rootcheck == "True" Then
													BackupSecLGMetro($imeilg)
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe ser root para realizar el backup!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												EndIf
											EndIf
											If $rootcheck == "True" Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Root detectado..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reinicando a TWRP..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb reboot recovery", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												Sleep(2000)
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reinicando a Bootloader..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb reboot bootloader", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Bootloader..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("fastboot oem unlock", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en TWRP..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($Unlocktp60[1], "", @SW_HIDE, $stderr_child + $stdout_child) ;1
												ProcessWaitClose($ipid)
												$ipid = Run("fastboot reboot", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
											EndIf
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Esperando recovery...")
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Sleep(5000)
											MsgBox(64, "MC-U Tool", "Click en Aceptar cuando su dispositivo se encuentre en recovery" & @CRLF & @CRLF & "Click OK when your device reboots to recovery")
											Global $star = TimerInit()
											Do
												$ipid = Run("adb devices", "", @SW_HIDE, $stderr_child + $stdout_child)
												 ProcessWaitClose($ipid)
												 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												 Sleep(100)
												 If StringInStr($soutput, "recovery") <> 0 Then
													Global $Connect = 1
													ExitLoop
												 Else
													$Connect = 0
												 EndIf
												 Sleep(100)
											Until TimerDiff($star) > 5000
											If $Connect == 1 Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(4000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Si no avanza este proceso valla a /Mount/ y deshabilite MTP ..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($Unlocktp60[2], "", @SW_HIDE, $stderr_child + $stdout_child) ;2
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($Unlocktp60[3], "", @SW_HIDE, $stderr_child + $stdout_child) ;3
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Restaurando particiones..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												$ipid = Run($Unlocktp60[4], "", @SW_HIDE, $stderr_child + $stdout_child) ;4
												ProcessWaitClose($ipid)
												$ipid = Run($Unlocktp60[5], "", @SW_HIDE, $stderr_child + $stdout_child) ;5
												ProcessWaitClose($ipid)
												$ipid = Run($Unlocktp60[6], "", @SW_HIDE, $stderr_child + $stdout_child) ;6
												ProcessWaitClose($ipid)
												$ipid = Run($Unlocktp60[7], "", @SW_HIDE, $stderr_child + $stdout_child) ;7
												ProcessWaitClose($ipid)
												$ipid = Run($Unlocktp60[8], "", @SW_HIDE, $stderr_child + $stdout_child) ;8
												ProcessWaitClose($ipid)
												$ipid = Run($Unlocktp60[9], "", @SW_HIDE, $stderr_child + $stdout_child) ;9
												ProcessWaitClose($ipid)
												If $rootcheck == "False" Then
													$ipid = Run("adb reboot bootloader", "", @SW_HIDE, $stderr_child + $stdout_child)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando a Fastboot..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Rebloqueando bootloader..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("fastboot oem lock", "", @SW_HIDE, $stderr_child + $stdout_child)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando sistema..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("fastboot reboot", "", @SW_HIDE, $stderr_child + $stdout_child)
													ProcessWaitClose($ipid)
													Sleep(1000)
												Else
													MsgBox(64, "MC-U", "Haga un hard reset y reinicie su dispositivo para continuar" & @CRLF & @CRLF & "Make a Hard reset and reboot you device to continue")
												EndIf
												Sleep(15000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Puerto Modem..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												#Region ### START Koda GUI section ### Form=
												Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
												Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
												Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
												GUICtrlSetData($Combo1, _CommListPorts(1))
												GUICtrlCreateGroup("", -99, -99, 1, 1)
												Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
												Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
												Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
												Global $Label3 = GUICtrlCreateLabel("SELECT MODEM PORT.", 312, 80, 126, 17)
												Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
												Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
												GUISetState(@SW_SHOW)
												#EndRegion ### END Koda GUI section ###

												While 1
													$nMsg = GUIGetMsg()
													Switch $nMsg
														Case $GUI_EVENT_CLOSE
															DeleteTP260()
															GUIDelete($FormCOM)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso cancelado por usuario..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repare Imei en la opcion LG IMEI Repair" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop

														Case $OpenDeviceMGM
															OpenDevMenu()

														Case $ButtonrefreshComm
															GUICtrlSetData($Combo1,"")
															GUICtrlSetData($Combo1, _CommListPorts(1))

														Case $ButtonSelectCom
															Global $commselected = GUICtrlRead($Combo1)
															Global $finalcom = StringTrimLeft($commselected, 3)
															If $commselected == "" Then
																MsgBox(16, "Error", "No CommPort Selected!")
															Else
																GUIDelete($FormCOM)
																Global $err = ""
																_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
																If $err == "" Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Conexion... " )
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	Global $star = TimerInit()
																	Do
																		_CommSendString("AT" & @CR, 1)
																		$instrcheck = _commGetLine(@CR, 20, 200)
																		Sleep(20)
																		 If $instrcheck == "" Then
																			Global $Com = 1
																		 Else
																			$Com = 0
																			ExitLoop
																		 EndIf
																		 Sleep(100)
																	Until TimerDiff($star) > 3000
																	If $Com == 1 Then
																		DeleteTP260()
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Puerto COM seleccionado incorrecto!" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repare Imei en la opcion LG IMEI Repair" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		refund(GUICtrlRead($Edit1))
																		DeleteRecurrencia($imei & "15")
																		DeleteRecurrencia($imei & "85")
																		firma()
																		AddLog()
																		logs()
																		EnableButtons()
																		ExitLoop
																	Else
																		Global $ejec = IsCreditNedded2("12", $key)
																		Global $var = shori($ejec[1], $key)
																		While 1
																			$instr = _commGetLine(@CR, 20, 200)
																			If StringInStr($instr, "OK") <> 0 Then
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				_CommSendString($var & $imeilg & @CR, 1)
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				Sleep(3000)
																				Global $star = TimerInit()
																				Do
																					$instr = _commGetLine(@CR, 100, 200)
																					if StringInStr($instr, "ERROR") <> 0 Then
																						Global $sirvio = "NO"
																						ExitLoop
																					Else
																						Global $sirvio = "SI"
																					EndIf
																				Until TimerDiff($star) > 3000
																				If $sirvio == "NO" Then
																					DeleteTP260()
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repita el proceso de Unlock!" & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					firma()
																					AddLog()
																					logs()
																					EnableButtons()
																					_CommClosePort()
																					ExitLoop
																				Else
																					DeleteTP260()
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado! Por favor reinicie su dispositivo manualmente." & @CRLF )
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					firma()
																					AddLog()
																					logs()
																					EnableButtons()
																					_CommClosePort()
																					ExitLoop
																				EndIf
																			ElseIf StringInStr($instr, "ERROR") <> 0 Then
																				DeleteTP260()
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ERROR! puerto seleccionado incorrecto!" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repare Imei en la opcion LG IMEI Repair" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				firma()
																				AddLog()
																				logs()
																				EnableButtons()
																				ExitLoop
																			Endif
																		WEnd
																		ExitLoop
																	EndIf
																Else
																	DeleteTP260()
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error abriendo puerto..." & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repare Imei en la opcion LG IMEI Repair" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	firma()
																	AddLog()
																	logs()
																	EnableButtons()
																	ExitLoop
																EndIf
															EndIf
													EndSwitch
												WEnd
											Else
												DeleteTP260()
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Revise que esten correctamente instalados los driver ADB en modo recovery!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												refund(GUICtrlRead($Edit1))

												DeleteRecurrencia($imei & "15")
												DeleteRecurrencia($imei & "85")
												firma()
												AddLog()
												logs()
												EnableButtons()
											EndIf
										Else
											DeleteTP260()
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI Incorrecto!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											refund(GUICtrlRead($Edit1))
											DeleteRecurrencia($imei & "15")
											DeleteRecurrencia($imei & "85")
											firma()
											AddLog()
											logs()
											EnableButtons()
										EndIf
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										refund(GUICtrlRead($Edit1))
										DeleteRecurrencia($imei & "15")
										DeleteRecurrencia($imei & "85")
										firma()
										AddLog()
										logs()
										EnableButtons()
									EndIf
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Soportado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									refund(GUICtrlRead($Edit1))
									DeleteRecurrencia($imei & "15")
									DeleteRecurrencia($imei & "85")
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							EndIf
						Else
							_GUICtrlEdit_SetText ($Edit1, "")
							DeleteRecurrencia($imei & "85")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "85")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $sComboRead == $iArray[140] Then
				Global $precio = ''
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("210unlock", "86")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MS210/M210 One Click Unlock" & @CRLF)
					MsgBox(64, "MC-U Tool", "Es importante que habilite OEM UNLOCK y USB DEBUG antes de comenzar de lo contrario no funcionara el proceso."  & @CRLF & @CRLF & "Is important to enable OEM UNLOCK and USB DEBUG before start or process wil fail")
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						$imei = IxxxProcess(GUICtrlRead($Edit1))
						Global $dime = IsCreditNedded2("19", $key)
						If $activo == 1 Then
							Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "19")
						EndIf
						If $confirm <> "NO" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If $key == False Then
								DeleteRecurrencia($imei & "86")
								refund(GUICtrlRead($Edit1))
								WrongKey($imei)
							ElseIf $key == 0 Then
								DeleteRecurrencia($imei & "86")
								refund(GUICtrlRead($Edit1))
								Error0002($imei)
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Modelo... " )
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
								ProcessWaitClose($ipid)
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								If StringInStr($soutput, "MS210") <> 0 Or StringInStr($soutput, "M210") <> 0 then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If Not FileExists(@ScriptDir & "\Resources\M210.mcu") Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$sDownloaderTitle = "Descargando Resources"
										$url            = "http://mcu-tool.com/MCU-Tool Resources/M210/M210.mcu"
										$file           = "M210.mcu"
										$name           = "M210.mcu"
										$dir            = @ScriptDir & "\Resources\"
										_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
									EndIf
									If FileExists(@ScriptDir & "\Resources\M210.mcu") Then
										DeleteM210()
										Global $imeilg = ""
										$ipid = Run("adb shell getprop gsm.baseband.imei", "", @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
										$imeilg = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando estado del IMEI...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If StringLen($imeilg) <> 15 Then
											#Region ### START Koda GUI section ### Form=
											Global $InputImei = GUICreate("Input IMEI", 281, 145, -1, -1)
											Global $GroupIMEILG = GUICtrlCreateGroup("IMEI", 16, 8, 249, 121)
											Global $textboximeilg = GUICtrlCreateInput("", 56, 48, 169, 21)
											Global $ButtonImeilg = GUICtrlCreateButton("OK", 104, 88, 75, 25)
											GUICtrlCreateGroup("", -99, -99, 1, 1)
											GUISetState(@SW_SHOW)
											#EndRegion ### END Koda GUI section ###
											While 1
												$nMsg = GUIGetMsg()
												Switch $nMsg
													Case $GUI_EVENT_CLOSE
														GUIDelete($InputImei)
														ExitLoop
													Case $ButtonImeilg
														$imeilg = GUICtrlRead($textboximeilg)
														GUIDelete($InputImei)
														ExitLoop
												EndSwitch
											WEnd
										EndIf
										If StringLen($imeilg) == 15 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Global $rootcheck = _Android_HasRootAccess()
											Global $askback = MsgBox(4, "MC-U Tool", "Desea guardar la seguridad?" & @CRLF & @CRLF & "Do you wish to backup security?")
											If $askback == 6 Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Verificando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												If $rootcheck == "True" Then
													BackupSecLGMetro($imeilg)
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe ser root para realizar el backup!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												EndIf
											EndIf
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Recursos..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\M210.mcu", @ScriptDir & "\Resources\M210.zip", $decrypt, $iAlgorithm)
											ProcessWaitClose($ipid)
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\M210.zip", @ScriptDir, 1)
											ProcessWaitClose($ipid)
											FileDelete(@ScriptDir & "\Resources\M210.zip")
											Sleep(1000)
											Global $var = shori($dime[1], $key)
											Global $Unlockm210 = StringSplit($var, "{")
											If $rootcheck == "True" Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Root detectado..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reinicando a TWRP..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb reboot recovery", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												Sleep(2000)
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reinicando a Bootloader..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb reboot bootloader", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												Sleep(2000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando Bootloader..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("fastboot oem unlock", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando en TWRP..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($Unlockm210[1], "", @SW_HIDE, $stderr_child + $stdout_child) ;1
												ProcessWaitClose($ipid)
												$ipid = Run("fastboot reboot", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
											EndIf
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Esperando recovery...")
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Sleep(6000)
											MsgBox(64, "MC-U Tool", "Click en Aceptar cuando su dispositivo se encuentre en recovery" & @CRLF & @CRLF & "Click OK when your device reboots to recovery")
											Global $star = TimerInit()
											Do
												$ipid = Run("adb devices", "", @SW_HIDE, $stderr_child + $stdout_child)
												 ProcessWaitClose($ipid)
												 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
												 Sleep(100)
												 If StringInStr($soutput, "recovery") <> 0 Then
													Global $Connect = 1
													ExitLoop
												 Else
													$Connect = 0
												 EndIf
											Until TimerDiff($star) > 5000
											If $Connect == 1 Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando Exploit..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($Unlockm210[3], "", @SW_HIDE, $stderr_child + $stdout_child) ;3
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando a recovery nuevamente..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												$ipid = Run($Unlockm210[4], "", @SW_HIDE, $stderr_child + $stdout_child) ;4
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Esperando recovery...")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(2000)
												MsgBox(64, "MC-U Tool", "Click en Aceptar cuando su dispositivo se encuentre en recovery" & @CRLF & @CRLF & "Click OK when your device reboots to recovery")
												Sleep(5000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Trabajando en la seguridad..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($Unlockm210[2], "", @SW_HIDE, $stderr_child + $stdout_child) ;2
												ProcessWaitClose($ipid)
												$ipid = Run($Unlockm210[5], "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												$ipid = Run($Unlockm210[6], "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												$ipid = Run($Unlockm210[7], "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												$ipid = Run($Unlockm210[8], "", @SW_HIDE, $stderr_child + $stdout_child) ;8
												ProcessWaitClose($ipid)
												$ipid = Run($Unlockm210[9], "", @SW_HIDE, $stderr_child + $stdout_child) ;9
												ProcessWaitClose($ipid)
												$ipid = Run($Unlockm210[10], "", @SW_HIDE, $stderr_child + $stdout_child) ;10
												ProcessWaitClose($ipid)
												$ipid = Run($Unlockm210[11], "", @SW_HIDE, $stderr_child + $stdout_child) ;11
												ProcessWaitClose($ipid)
												$ipid = Run($Unlockm210[12], "", @SW_HIDE, $stderr_child + $stdout_child) ;12
												ProcessWaitClose($ipid)
												If $rootcheck == "False" Then
													$ipid = Run("adb reboot bootloader", "", @SW_HIDE, $stderr_child + $stdout_child)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando a Fastboot..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													Sleep(1000)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Rebloqueando bootloader..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("fastboot oem lock", "", @SW_HIDE, $stderr_child + $stdout_child)
													ProcessWaitClose($ipid)
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando sistema..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													$ipid = Run("fastboot reboot", "", @SW_HIDE, $stderr_child + $stdout_child)
													ProcessWaitClose($ipid)
													Sleep(1000)
												Else
													MsgBox(64, "MC-U", "Haga un hard reset y reinicie su dispositivo para continuar" & @CRLF & @CRLF & "Make a Hard reset and reboot you device to continue")
												EndIf
												Sleep(15000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Puerto Modem..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												#Region ### START Koda GUI section ### Form=
												Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
												Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
												Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
												GUICtrlSetData($Combo1, _CommListPorts(1))
												GUICtrlCreateGroup("", -99, -99, 1, 1)
												Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
												Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
												Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
												Global $Label3 = GUICtrlCreateLabel("SELECT MODEM PORT.", 312, 80, 126, 17)
												Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
												Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
												GUISetState(@SW_SHOW)
												#EndRegion ### END Koda GUI section ###

												While 1
													$nMsg = GUIGetMsg()
													Switch $nMsg
														Case $GUI_EVENT_CLOSE
															DeleteM210()
															GUIDelete($FormCOM)
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso cancelado por usuario..." & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repare Imei en la opcion LG IMEI Repair" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop

														Case $OpenDeviceMGM
															OpenDevMenu()

														Case $ButtonrefreshComm
															GUICtrlSetData($Combo1,"")
															GUICtrlSetData($Combo1, _CommListPorts(1))

														Case $ButtonSelectCom
															Global $commselected = GUICtrlRead($Combo1)
															Global $finalcom = StringTrimLeft($commselected, 3)
															If $commselected == "" Then
																MsgBox(16, "Error", "No CommPort Selected!")
															Else
																GUIDelete($FormCOM)
																Global $err = ""
																_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
																If $err == "" Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Conexion... " )
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	Global $star = TimerInit()
																	Do
																		_CommSendString("AT" & @CR, 1)
																		$instrcheck = _commGetLine(@CR, 20, 200)
																		Sleep(20)
																		 If $instrcheck == "" Then
																			Global $Com = 1
																		 Else
																			$Com = 0
																			ExitLoop
																		 EndIf
																		 Sleep(100)
																	Until TimerDiff($star) > 3000
																	If $Com == 1 Then
																		DeleteM210()
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Puerto COM seleccionado incorrecto!" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repare Imei en la opcion LG IMEI Repair" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		firma()
																		AddLog()
																		logs()
																		EnableButtons()
																		ExitLoop
																	Else
																		Global $ejec = IsCreditNedded2("12", $key)
																		Global $var = shori($ejec[1], $key)
																		While 1
																			$instr = _commGetLine(@CR, 20, 200)
																			If StringInStr($instr, "OK") <> 0 Then
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				_CommSendString($var & $imeilg & @CR, 1)
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				Sleep(3000)
																				Global $star = TimerInit()
																				Do
																					$instr = _commGetLine(@CR, 100, 200)
																					if StringInStr($instr, "ERROR") <> 0 Then
																						Global $sirvio = "NO"
																						ExitLoop
																					Else
																						Global $sirvio = "SI"
																					EndIf
																				Until TimerDiff($star) > 3000
																				If $sirvio == "NO" Then
																					DeleteM210()
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repita el proceso de Unlock!" & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					firma()
																					AddLog()
																					logs()
																					EnableButtons()
																					_CommClosePort()
																					ExitLoop
																				Else
																					DeleteM210()
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado! Por favor reinicie su dispositivo manualmente." & @CRLF )
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					firma()
																					AddLog()
																					logs()
																					EnableButtons()
																					_CommClosePort()
																					ExitLoop
																				EndIf
																			ElseIf StringInStr($instr, "ERROR") <> 0 Then
																				DeleteM210()
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ERROR! puerto seleccionado incorrecto!" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repare Imei en la opcion LG IMEI Repair" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																				Sleep(20)
																				firma()
																				AddLog()
																				logs()
																				EnableButtons()
																				ExitLoop
																			Endif
																		WEnd
																		ExitLoop
																	EndIf
																Else
																	DeleteM210()
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error abriendo puerto..." & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repare Imei en la opcion LG IMEI Repair" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	firma()
																	AddLog()
																	logs()
																	EnableButtons()
																	ExitLoop
																EndIf
															EndIf
													EndSwitch
												WEnd
											Else
												DeleteM210()
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Revise que esten correctamente instalados los driver ADB en modo recovery!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												refund(GUICtrlRead($Edit1))
												DeleteRecurrencia($imei & "19")
												DeleteRecurrencia($imei & "86")
												firma()
												AddLog()
												logs()
												EnableButtons()
											EndIf
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI incorrecto!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteM210()
											refund(GUICtrlRead($Edit1))
											DeleteRecurrencia($imei & "19")
											DeleteRecurrencia($imei & "86")
											firma()
											AddLog()
											logs()
											EnableButtons()
										EndIf
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error descargando recursos!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										refund(GUICtrlRead($Edit1))
										DeleteRecurrencia($imei & "19")
										DeleteRecurrencia($imei & "86")
										firma()
										AddLog()
										logs()
										EnableButtons()
									EndIf
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Soportado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									refund(GUICtrlRead($Edit1))
									DeleteRecurrencia($imei & "19")
									DeleteRecurrencia($imei & "86")
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							EndIf
						Else
							_GUICtrlEdit_SetText ($Edit1, "")
							refund(GUICtrlRead($Edit1))
							DeleteRecurrencia($imei & "86")
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "86")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $sComboRead == $iArray[141] Then
				Global $precio = ''
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("450unlock", "87")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " TP450/MP450 One Click Unlock" & @CRLF)
					MsgBox(64, "MC-U Tool", "Debe rootear su dispositivo antes de comenzar de lo contrario no funcionara el proceso."  & @CRLF & @CRLF & "Must root your device before start or process will fail")
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						$imei = IxxxProcess(GUICtrlRead($Edit1))
						Global $dime = IsCreditNedded2("54", $key)
						If $activo == 1 Then
							Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "54")
						EndIf
						If $confirm <> "NO" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If $key == False Then
								DeleteRecurrencia($imei & "87")
								refund(GUICtrlRead($Edit1))
								WrongKey($imei)
							ElseIf $key == 0 Then
								DeleteRecurrencia($imei & "87")
								refund(GUICtrlRead($Edit1))
								WrongKey($imei)
								Error0002($imei)
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Modelo... " )
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
								ProcessWaitClose($ipid)
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								If StringInStr($soutput, "TP450") <> 0 Or StringInStr($soutput, "MP450") <> 0 then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									If Not FileExists(@ScriptDir & "\Resources\MP450.mcu") Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Recursos no encontrados, descargando del servidor..." & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										$sDownloaderTitle = "Descargando Resources"
										$url            = "http://mcu-tool.com/MCU-Tool Resources/MP450/MP450.mcu"
										$file           = "MP450.mcu"
										$name           = "MP450.mcu"
										$dir            = @ScriptDir & "\Resources\"
										_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
									EndIf
									If FileExists(@ScriptDir & "\Resources\MP450.mcu") Then
										DeleteM210()
										Global $imeilg = ""
										$ipid = Run("adb shell getprop gsm.baseband.imei", "", @SW_HIDE, $stderr_child + $stdout_child)
										ProcessWaitClose($ipid)
										$imeilg = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando estado del IMEI...")
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										If StringLen($imeilg) <> 15 Then
											#Region ### START Koda GUI section ### Form=
											Global $InputImei = GUICreate("Input IMEI", 281, 145, -1, -1)
											Global $GroupIMEILG = GUICtrlCreateGroup("IMEI", 16, 8, 249, 121)
											Global $textboximeilg = GUICtrlCreateInput("", 56, 48, 169, 21)
											Global $ButtonImeilg = GUICtrlCreateButton("OK", 104, 88, 75, 25)
											GUICtrlCreateGroup("", -99, -99, 1, 1)
											GUISetState(@SW_SHOW)
											#EndRegion ### END Koda GUI section ###
											While 1
												$nMsg = GUIGetMsg()
												Switch $nMsg
													Case $GUI_EVENT_CLOSE
														GUIDelete($InputImei)
														ExitLoop
													Case $ButtonImeilg
														$imeilg = GUICtrlRead($textboximeilg)
														GUIDelete($InputImei)
														ExitLoop
												EndSwitch
											WEnd
										EndIf
										If StringLen($imeilg) == 15 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Global $rootcheck = _Android_HasRootAccess()
											If $rootcheck == "True" Then
												Global $askback = MsgBox(4, "MC-U Tool", "Desea guardar la seguridad?" & @CRLF & @CRLF & "Do you wish to backup security?")
												If $askback == 6 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Verificando..." & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													BackupSecLGMetro($imeilg)
												EndIf
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desencriptando Recursos..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\MP450.mcu", @ScriptDir & "\Resources\MP450.zip", $decrypt, $iAlgorithm)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descompactando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\MP450.zip", @ScriptDir, 1)
												ProcessWaitClose($ipid)
												FileDelete(@ScriptDir & "\Resources\MP450.zip")
												Sleep(1000)
												Global $var = shori($dime[1], $key)
												Global $Unlocktp450 = StringSplit($var, "{")
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando Exploit...")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($Unlocktp450[1], "", @SW_HIDE, $stderr_child + $stdout_child) ;1
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Inicializando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($Unlocktp450[2], "", @SW_HIDE, $stderr_child + $stdout_child) ;2
												ProcessWaitClose($ipid)
												$ipid = Run($Unlocktp450[3], "", @SW_HIDE, $stderr_child + $stdout_child) ;3
												ProcessWaitClose($ipid)
												$ipid = Run($Unlocktp450[4], "", @SW_HIDE, $stderr_child + $stdout_child) ;4
												ProcessWaitClose($ipid)
												$ipid = Run($Unlocktp450[5], "", @SW_HIDE, $stderr_child + $stdout_child) ;5
												ProcessWaitClose($ipid)
												$ipid = Run($Unlocktp450[6], "", @SW_HIDE, $stderr_child + $stdout_child) ;6
												ProcessWaitClose($ipid)
												$ipid = Run($Unlocktp450[7], "", @SW_HIDE, $stderr_child + $stdout_child) ;7
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando...")
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run("adb reboot", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Esperando dispositivo..." )
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												Sleep(10000)
												$ipid = Run("adb wait-for-device", "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												BootComplete()
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												MsgBox(64, "MC-U", "Desbloquee la pantalla de su dispositivo y no toque nada" & @CRLF & @CRLF & "Unlock your device screen and don't touch anything")
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Abriendo menu oculto..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($Unlocktp450[8], "", @SW_HIDE, $stderr_child + $stdout_child) ;8
												ProcessWaitClose($ipid)
												Sleep(1000)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Trabajando..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												$ipid = Run($Unlocktp450[9], "", @SW_HIDE, $stderr_child + $stdout_child) ;9
												ProcessWaitClose($ipid)
												Sleep(300)
												$ipid = Run($Unlocktp450[9], "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												Sleep(200)
												$ipid = Run($Unlocktp450[9], "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												Sleep(200)
												$ipid = Run($Unlocktp450[9], "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												Sleep(300)
												$ipid = Run($Unlocktp450[9], "", @SW_HIDE, $stderr_child + $stdout_child) ;9
												ProcessWaitClose($ipid)
												Sleep(320)
												$ipid = Run($Unlocktp450[10], "", @SW_HIDE, $stderr_child + $stdout_child) ;10
												ProcessWaitClose($ipid)
												Sleep(1000)
												$ipid = Run($Unlocktp450[10], "", @SW_HIDE, $stderr_child + $stdout_child)
												ProcessWaitClose($ipid)
												Sleep(600)
												$ipid = Run($Unlocktp450[11], "", @SW_HIDE, $stderr_child + $stdout_child) ;11
												ProcessWaitClose($ipid)
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Habilite tranferencia de archivos..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione Puerto Modem..." & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												#Region ### START Koda GUI section ### Form=
												Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
												Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
												Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
												GUICtrlSetData($Combo1, _CommListPorts(1))
												GUICtrlCreateGroup("", -99, -99, 1, 1)
												Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
												Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
												Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
												Global $Label3 = GUICtrlCreateLabel("SELECT MODEM PORT.", 312, 80, 126, 17)
												Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
												Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
												GUISetState(@SW_SHOW)
												#EndRegion ### END Koda GUI section ###

													While 1
														$nMsg = GUIGetMsg()
														Switch $nMsg
															Case $GUI_EVENT_CLOSE
																FileDelete(@ScriptDir & "\tp450")
																GUIDelete($FormCOM)
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso cancelado por usuario..." & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repare Imei en la opcion LG IMEI Repair" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																ExitLoop

															Case $OpenDeviceMGM
																OpenDevMenu()

															Case $ButtonrefreshComm
																GUICtrlSetData($Combo1,"")
																GUICtrlSetData($Combo1, _CommListPorts(1))

															Case $ButtonSelectCom
																Global $commselected = GUICtrlRead($Combo1)
																Global $finalcom = StringTrimLeft($commselected, 3)
																If $commselected == "" Then
																	MsgBox(16, "Error", "No CommPort Selected!")
																Else
																	GUIDelete($FormCOM)
																	Global $err = ""
																	_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
																	If $err == "" Then
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Conexion... " )
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		Global $star = TimerInit()
																		Do
																			_CommSendString("AT" & @CR, 1)
																			$instrcheck = _commGetLine(@CR, 20, 200)
																			Sleep(20)
																			 If $instrcheck == "" Then
																				Global $Com = 1
																			 Else
																				$Com = 0
																				ExitLoop
																			 EndIf
																			 Sleep(100)
																		Until TimerDiff($star) > 3000
																		If $Com == 1 Then
																			FileDelete(@ScriptDir & "\tp450")
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Puerto COM seleccionado incorrecto!" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repare Imei en la opcion LG IMEI Repair" & @CRLF)
																			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																			firma()
																			AddLog()
																			logs()
																			EnableButtons()
																			ExitLoop
																		Else
																			Global $ejec = IsCreditNedded2("12", $key)
																			Global $var = shori($ejec[1], $key)
																			While 1
																				$instr = _commGetLine(@CR, 20, 200)
																				If StringInStr($instr, "OK") <> 0 Then
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					_CommSendString($var & $imeilg & @CR, 1)
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando..." & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					Sleep(3000)
																					Global $star = TimerInit()
																					Do
																						$instr = _commGetLine(@CR, 100, 200)
																						if StringInStr($instr, "ERROR") <> 0 Then
																							Global $sirvio = "NO"
																							ExitLoop
																						Else
																							Global $sirvio = "SI"
																						EndIf
																					Until TimerDiff($star) > 3000
																					If $sirvio == "NO" Then
																						FileDelete(@ScriptDir & "\tp450")
																						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
																						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repita el proceso de Unlock!" & @CRLF)
																						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																						firma()
																						AddLog()
																						logs()
																						EnableButtons()
																						_CommClosePort()
																						ExitLoop
																					Else
																						FileDelete(@ScriptDir & "\tp450")
																						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado! Por favor reinicie su dispositivo manualmente." & @CRLF )
																						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																						firma()
																						AddLog()
																						logs()
																						EnableButtons()
																						_CommClosePort()
																						ExitLoop
																					EndIf
																				ElseIf StringInStr($instr, "ERROR") <> 0 Then
																					FileDelete(@ScriptDir & "\tp450")
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " ERROR! puerto seleccionado incorrecto!" & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repare Imei en la opcion LG IMEI Repair" & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																					Sleep(20)
																					firma()
																					AddLog()
																					logs()
																					EnableButtons()
																					ExitLoop
																				Endif
																			WEnd
																			ExitLoop
																		EndIf
																	Else
																		FileDelete(@ScriptDir & "\tp450")
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error abriendo puerto..." & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Repare Imei en la opcion LG IMEI Repair" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
																		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																		firma()
																		AddLog()
																		logs()
																		EnableButtons()
																		ExitLoop
																	EndIf
																EndIf
														EndSwitch
													WEnd
											Else
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Debe ser root para realizar el proceso!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												FileDelete(@ScriptDir & "\tp450")
												refund(GUICtrlRead($Edit1))
												DeleteRecurrencia($imei & "54")
												DeleteRecurrencia($imei & "87")
												firma()
												AddLog()
												logs()
												EnableButtons()
											EndIf
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI incorrecto!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											FileDelete(@ScriptDir & "\tp450")
											refund(GUICtrlRead($Edit1))
											DeleteRecurrencia($imei & "54")
											DeleteRecurrencia($imei & "87")
											firma()
											AddLog()
											logs()
											EnableButtons()
										EndIf
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error descargando recursos!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										refund(GUICtrlRead($Edit1))
										DeleteRecurrencia($imei & "54")
										DeleteRecurrencia($imei & "87")
										firma()
										AddLog()
										logs()
										EnableButtons()
									EndIf
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Soportado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									refund(GUICtrlRead($Edit1))
									DeleteRecurrencia($imei & "54")
									DeleteRecurrencia($imei & "87")
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							EndIf
						Else
							_GUICtrlEdit_SetText ($Edit1, "")
							refund(GUICtrlRead($Edit1))
							DeleteRecurrencia($imei & "87")
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "87")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $sComboRead == $iArray[137] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG Sprint Unlock Serial Port" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					Global $answ = ReadInfoLG()
					If $answ == 1 Then
						LGSPRDL()
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $sComboRead == $iArray[138] Then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("", "")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG Sprint Unlock ADB" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Iniciando procedimiento..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If Not FileExists(@ScriptDir & "\LGSPRUNLOCK") Then
							FileInstall("LGSPRUNLOCK", @ScriptDir & "\LGSPRUNLOCK", $FC_OVERWRITE)
						EndIf
						Global $ejec = IsCreditNedded2("24", $key)
						Global $var = shori($ejec[1], $key)
						Global $Unlock = StringSplit($var, "{")
						$ipid = Run($Unlock[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
						ProcessWaitClose($ipid)
						FileDelete(@ScriptDir & "\LGSPRUNLOCK")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Concediendo Permisos..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run($Unlock[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
						ProcessWaitClose($ipid)
						Global $rootcheck = _Android_HasRootAccess()
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run("adb shell", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
						Sleep(1000)
						If $rootcheck == "True" Then
							StdinWrite($ipid, "su" & @LF)
							Sleep(1000)
						EndIf
						$ver = StdinWrite($ipid, $Unlock[3] & @LF)
						Sleep(3000)
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Instalando Archivos..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If Not FileExists(@TempDir & "\lGSPRK") Then
							FileInstall("lGSPRK", @TempDir & "\lGSPRK", $FC_OVERWRITE)
						EndIf
						$array = StringSplit($soutput, ":")
						If @error Or UBound($array, $UBOUND_ROWS) <= 1 Or StringInStr($soutput, "Enter") == 0 Then
							$ipid = Run($Unlock[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
							ProcessWaitClose($ipid)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							Global $Rows = UBound($array, $UBOUND_ROWS)
							For $i = 1 to $Rows - 1
								If StringInStr($array[$i], "Error") <> 0 Then
									Global $lallave = 0
									ExitLoop
								ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
									Global $lallave = StringReplace($array[$i], " ", "")
									ExitLoop
								Else
									Global $lallave = 0
								EndIf
							Next
							Global $ahorasitengolallave = _Interpreterlg($lallave)
							If StringInStr($ahorasitengolallave, "Error") == 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Terminando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								StdinWrite($ipid, $ahorasitengolallave & @LF )
								Global $error1 = ''
								Global $error2 = ''
								Global $star = TimerInit()
								Do
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									If StringInStr($soutput, "Error:[!]") <> 0 Then
										Global $error1 = 1
										ExitLoop
									ElseIf StringInStr($soutput, "Done") <> 0 Then
										Global $error1 = 0
										ExitLoop
									ElseIf StringInStr($soutput, "Error while accessing provider:com.lge.node") <> 0 Then
										Global $error2 = 1
									EndIf
									Sleep(100)
								Until TimerDiff($star) > 60000
								ProcessClose($ipid)
								If $error1 == '' And $error2 == '' Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Tiempo de espera Terminado" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								ElseIf $error1 == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Necesita hacer root" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								ElseIf $error2 == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Modelo No Soportado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
								EndIf
							Else
								$ipid = Run($Unlock[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
								ProcessWaitClose($ipid)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error obteniendo llave, probablemente exploit ya utilizado en el dispositivo..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					Else
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $sComboRead == $iArray[142] Then
				DisableButtons()
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Restore Security Unlock" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando root...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $rootcheck = _Android_HasRootAccess()
					If $rootcheck == True Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						RestoreSecLGMetro()
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Necesita ser root para este proceso!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					EnableButtons()
				EndIf
			ElseIf $sComboRead == $iArray[204] Then
				Global $precio = ''
				SetProcLanDefinitive("q710" & $indicator)
				Global $showme2 = CredNoLicense("LGMTKUnlock", "131")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText ($Edit1, "")
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						$imei = IxxxProcess(GUICtrlRead($Edit1))
						Global $dime = IsCreditNedded2("132", $key)
						If $activo == 1 Then
							Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "132")
						EndIf
						If $confirm <> "NO" Then
							Global $checktrue = MTKSPRUnlock()
							If $checktrue == 1 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							ElseIf $checktrue == 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "131")
								DeleteRecurrencia($imei & "132")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							ElseIf $checktrue == 3 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "131")
								DeleteRecurrencia($imei & "132")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "131")
								DeleteRecurrencia($imei & "132")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
							_GUICtrlEdit_SetText ($Edit1, "")
							DeleteRecurrencia($imei & "131")
							DeleteRecurrencia($imei & "132")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "131")
						DeleteRecurrencia($imei & "132")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			EndIf
		Case $ButtonFRPSideload
			$ComboRead = GUICtrlRead($ComboZTESideload)
			_GUICtrlEdit_SetText($Edit1, "")
			Global $showme2 = CredNoLicense("ButtonFRPSideload", "76")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $ComboRead & " FRP Remove via Sideload" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				If Not FileExists(@ScriptDir & "\Loaders\" & $ComboRead) Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descargando archivo especial del servidor..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$sDownloaderTitle = "Descargando Resources"
					$url            = "http://mcu-tool.com/MCU-Tool Resources/Loaders/" & $ComboRead
					$file           = $ComboRead
					$name           = $ComboRead
					$dir            = @ScriptDir & "\Loaders\"
					_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
				EndIf
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando archivos..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Sleep(3000)
				If FileExists(@ScriptDir & "\Loaders\" & $ComboRead) Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Desbloqueando ADB Sideload...")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('aadb unlock -k AdbWinnApi.dll', "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If Stringinstr($soutput, "unlock sideload fail") == 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FileCopy(@ScriptDir & "\Loaders\" & $ComboRead, @ScriptDir, $FC_OVERWRITE)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Removiendo FRP...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$ipid = Run('aadb sideload ' & $ComboRead, "", @SW_HIDE)
						ProcessWaitClose($ipid)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FileDelete(@ScriptDir & "\" & $ComboRead)
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						DeleteRecurrencia($imei & "76")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				Else
					MsgBox(16, "Error", "Error en la descarga de los recursos!" & @CRLF & @CRLF & 'Error downloading resources!')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					DeleteRecurrencia($imei & "76")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf

        Case $ButtonQcommEDL
			Global $ComboRead = GUICtrlRead($ComboQcommEDl)
			Global $comfromuser = ''
			If $ComboRead == $iArray[116] then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("ButtonQcommEDL", "77")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " FRP Remove EDL Autodetect M1" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					If _IsChecked($Checkboxqcomfrp) Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando dispositivo en modo EDL... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$comfromuser = checkqcomm()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione el puerto EDL... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						#Region ### START Koda GUI section ### Form=
						Global $ComPortsSelector = GUICreate("Com Ports Selection", 544, 130, -1, -1)
						Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
						Global $inputcomport = GUICtrlCreateCombo("", 32, 40, 233, 25)
						GUICtrlSetData($inputcomport, _CommListPorts(1))
						GUICtrlCreateGroup("", -99, -99, 1, 1)
						Global $continuar = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
						Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
						Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
						Global $Label3 = GUICtrlCreateLabel("SELECT 9008 PORT.", 312, 80, 126, 17)
						Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
						Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
						GUISetState(@SW_SHOW)
						#EndRegion ### END Koda GUI section ###

						While 1
							$nMsg = GUIGetMsg()
							Switch $nMsg

								Case $GUI_EVENT_CLOSE
									GUIDelete($ComPortsSelector)
									EnableButtons()
									ExitLoop

								Case $ButtonrefreshComm
									GUICtrlSetData($inputcomport,"")
									GUICtrlSetData($inputcomport, _CommListPorts(1))

								Case $OpenDeviceMGM
									OpenDevMenu()

								Case $continuar
									$comfromuser = GUICtrlRead($inputcomport)
									GUIDelete($ComPortsSelector)
									ExitLoop

							EndSwitch

						WEnd
					EndIf
					If $comfromuser <> '' Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $comfromuser & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Informacion del dispositivo..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Global $ipid = Run("emmcdl -p " & $comfromuser & " -info", "", @SW_HIDE, $stderr_child + $stdout_child)
						ProcessWaitClose($ipid)
						Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						Sleep(1000)
						Global $sFile = FileOpen(@TempDir & "\file.txt", $FO_OVERWRITE)
						FileWrite($sFile, $soutput)
						Global $contadera = _FileCountLines(@TempDir & "\file.txt")
						For $i = 2 To $contadera
							Local $imp = FileReadLine(@TempDir & "\file.txt", $i)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $imp & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Next
						FileDelete(@TempDir & "\file.txt")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Buscando Cargador...")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Global $entonces = CheckProc($soutput)
						If $entonces == "Unknown" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Encontrado" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "77")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If Not FileExists(@ScriptDir & "\Loaders\" & $entonces) Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descargando cargador..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$sDownloaderTitle = "Descargando Resources"
								$url            = "http://mcu-tool.com/MCU-Tool Resources/Loaders/" & $entonces
								$file           = $entonces
								$name           = $entonces
								$dir            = @ScriptDir & "\Loaders\"
								_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
							EndIf
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando archivos..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Sleep(2000)
							If FileExists(@ScriptDir & "\Loaders\" & $entonces) Then
								FileCopy(@ScriptDir & "\Loaders\" & $entonces, @ScriptDir)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Eliminando Particion FRP...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$soutput = Run("emmcdl -p " & $comfromuser & " -f " & $entonces & " -e config", "", @SW_HIDE)
								Global $star = TimerInit()
								Do
									 If ProcessExists("emmcdl.exe") Then
										Global $Connect = 1
									 Else
										$Connect = 0
										ExitLoop
									 EndIf
									 Sleep(100)
								Until TimerDiff($star) > 10000
								If $Connect == 1 Then
									ProcessClose("emmcdl.exe")
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Fallido!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									DeleteRecurrencia($imei & "77")
									refund(GUICtrlRead($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
									FileDelete(@ScriptDir & "\" & $entonces)
								Else
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									firma()
									AddLog()
									logs()
									EnableButtons()
									FileDelete(@ScriptDir & "\" & $entonces)
								EndIf
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cargador no descargado correctamente" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "77")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ningun puerto detectado o seleccionado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "77")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[115] then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("ButtonQcommEDL2", "79")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Format Data EDL Autodetect" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					If _IsChecked($Checkboxqcomfrp) Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando dispositivo en modo EDL... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$comfromuser = checkqcomm()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione el puerto EDL... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						#Region ### START Koda GUI section ### Form=
						Global $ComPortsSelector = GUICreate("Com Ports Selection", 544, 130, -1, -1)
						Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
						Global $inputcomport = GUICtrlCreateCombo("", 32, 40, 233, 25)
						GUICtrlSetData($inputcomport, _CommListPorts(1))
						GUICtrlCreateGroup("", -99, -99, 1, 1)
						Global $continuar = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
						Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
						Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
						Global $Label3 = GUICtrlCreateLabel("SELECT 9008 PORT.", 312, 80, 126, 17)
						Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
						Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
						GUISetState(@SW_SHOW)
						#EndRegion ### END Koda GUI section ###

						While 1
							$nMsg = GUIGetMsg()
							Switch $nMsg

								Case $GUI_EVENT_CLOSE
									GUIDelete($ComPortsSelector)
									EnableButtons()
									ExitLoop

								Case $ButtonrefreshComm
									GUICtrlSetData($inputcomport,"")
									GUICtrlSetData($inputcomport, _CommListPorts(1))

								Case $OpenDeviceMGM
									OpenDevMenu()

								Case $continuar
									$comfromuser = GUICtrlRead($inputcomport)
									GUIDelete($ComPortsSelector)
									ExitLoop
							EndSwitch
						WEnd
					EndIf
					If $comfromuser <> '' Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $comfromuser & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Informacion del dispositivo..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Global $ipid = Run("emmcdl -p " & $comfromuser & " -info", "", @SW_HIDE, $stderr_child + $stdout_child)
						ProcessWaitClose($ipid)
						Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						Global $sFile = FileOpen(@TempDir & "\file.txt", $FO_OVERWRITE)
						FileWrite($sFile, $soutput)
						Global $contadera = _FileCountLines(@TempDir & "\file.txt")
						For $i = 2 To $contadera
							Local $imp = FileReadLine(@TempDir & "\file.txt", $i)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $imp & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Next
						FileDelete(@TempDir & "\file.txt")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Buscando Cargador... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Global $entonces = CheckProc($soutput)
						If $entonces == "Unknown" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "79")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If Not FileExists(@ScriptDir & "\Loaders\" & $entonces) Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descargando cargador..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$sDownloaderTitle = "Descargando Resources"
								$url            = "http://mcu-tool.com/MCU-Tool Resources/Loaders/" & $entonces
								$file           = $entonces
								$name           = $entonces
								$dir            = @ScriptDir & "\Loaders\"
								_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
							EndIf
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando archivos..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If Not FileExists(@ScriptDir & "\misc.img") Then
								FileInstall("misc.img", @ScriptDir & "\misc.img", $FC_OVERWRITE)
							EndIf
							Sleep(3000)
							If FileExists(@ScriptDir & "\Loaders\" & $entonces) Then
								FileCopy(@ScriptDir & "\Loaders\" & $entonces, @ScriptDir)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Guardando particiones...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("emmcdl -p " & $comfromuser & " -f " & $entonces & " -d misc -o misc.img","",@SW_HIDE, $stderr_child + $stdout_child)
								Global $star = TimerInit()
								Do
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									If StringInStr($soutput, "Status") Then
										ExitLoop
									EndIf
									Sleep(100)
								Until TimerDiff($star) > 10000
								If FileExists(@ScriptDir & "\misc.img") Then
									FileMove(@ScriptDir & "\misc.img", @MyDocumentsDir & "\Backup_MCU\DATA_SEC\misc.img", $FC_OVERWRITE + $FC_CREATEPATH)
									Global $sfilename = _Zip_Create(@MyDocumentsDir & "\Backup_MCU\DATA_SEC\DATASEC_" & @HOUR & @MIN & @MDAY & @MON & @YEAR & ".zip")
									_Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\DATA_SEC\misc.img", 1)
									$ipid = _Crypt_EncryptFile($sfilename, @MyDocumentsDir & "\Backup_MCU\DATA_SEC\DATASEC_" & @HOUR & @MIN & @MDAY & @MON & @YEAR & ".mcu", $decrypt, $iAlgorithm)
									ProcessWaitClose($ipid)
									FileDelete(@MyDocumentsDir & "\Backup_MCU\DATA_SEC\misc.img")
									FileDelete($sfilename)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Backup guardado en: " & @MyDocumentsDir & "\Backup_MCU\DATA_SEC\DATASEC_" & @HOUR & @MIN & @MDAY & @MON & @YEAR & ".mcu" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Global $ujmjm = 1
								Else
									$resp = MsgBox(48 + 4, "MC-U Tool", " El backup no se guardo correctamente desea continuar?" & @CRLF & @CRLF & 'Backup not saved, do you wish to continue?')
									Switch $resp
										Case 6
											Global $ujmjm = 1
										Case 7
											Global $ujmjm = 2
											_GUICtrlEdit_SetText ($Edit1, "")
											FileDelete(@ScriptDir & "\" & $entonces)
											DeleteRecurrencia($imei & "79")
											refund(GUICtrlRead($Edit1))
											EnableButtons()
									EndSwitch
								EndIf
								If $ujmjm == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Formateando Userdata...")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$soutput = Run("emmcdl -p " & $comfromuser & " -f " & $entonces & " -b misc misc.img","",@SW_HIDE)
									Global $star = TimerInit()
									Do
										 If ProcessExists("emmcdl.exe") Then
											Global $Connect = 1
										 Else
											$Connect = 0
											ExitLoop
										 EndIf
										 Sleep(100)
									Until TimerDiff($star) > 10000
									If $Connect == 1 Then
										ProcessClose("emmcdl.exe")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Fallido!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										DeleteRecurrencia($imei & "79")
										refund(GUICtrlRead($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										FileDelete(@ScriptDir & "\" & $entonces)
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado, Reinicie su dispositivo manualmente!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										FileDelete(@ScriptDir & "\" & $entonces)
									EndIf
								EndIf
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cargador no descargado correctamente" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "79")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ningun puerto detectado o seleccionado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "79")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == 'Reboot from EDL' then
				DisableButtons()
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Format Data EDL Autodetect" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando puerto COM..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Global $cheketeo = checkqcomm()
				If StringInStr($cheketeo, "COM") = 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Puerto No Detectado por favor coloque el dispositivo en modo EDL" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo Detectado en el puerto: " & $cheketeo & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Informacion del dispositivo..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $ipid = Run("emmcdl -p " & $cheketeo & " -info", "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					Global $sFile = FileOpen(@TempDir & "\file.txt", $FO_OVERWRITE)
					FileWrite($sFile, $soutput)
					Global $contadera = _FileCountLines(@TempDir & "\file.txt")
					For $i = 2 To $contadera
						Local $imp = FileReadLine(@TempDir & "\file.txt", $i)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $imp & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Next
					FileDelete(@TempDir & "\file.txt")
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Buscando Cargador... ")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $entonces = CheckProc($soutput)
					If $entonces == "Unknown" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Encontrado" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If Not FileExists(@ScriptDir & "\Loaders\" & $entonces) Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descargando cargador..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$sDownloaderTitle = "Descargando Resources"
							$url            = "http://mcu-tool.com/MCU-Tool Resources/Loaders/" & $entonces
							$file           = $entonces
							$name           = $entonces
							$dir            = @ScriptDir & "\Loaders\"
							_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
						EndIf
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando archivos..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If FileExists(@ScriptDir & "\Loaders\" & $entonces) Then
							FileCopy(@ScriptDir & "\Loaders\" & $entonces, @ScriptDir)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Enviando cargador...")
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("QSaharaServer.exe -p \\.\" & $cheketeo & " -s 13:" & $entonces,"",@SW_HIDE, $stderr_child + $stdout_child)
							Do
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								Sleep(100)
							Until StringInStr($soutput, "Sahara protocol completed") <> 0 Or StringInStr($soutput, "ERROR") <> 0
							If StringInStr($soutput, "ERROR") Then
								ProcessClose("emmcdl.exe")
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
								FileDelete(@ScriptDir & "\" & $entonces)
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("fh_loader     --port=\\.\" & $cheketeo & "     --noprompt        --showpercentagecomplete        --zlpawarehost=1      --memoryname=eMMC     --setactivepartition=0      --reset", "", @SW_HIDE)
								ProcessWaitClose($ipid)
								Sleep(3000)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
								FileDelete(@ScriptDir & "\" & $entonces)
							EndIf
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cargador no descargado correctamente" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					EndIf
				EndIf
			ElseIf $ComboRead == $iArray[117] then
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("ButtonQcommEDL1", "78")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " FRP Remove via EDL Autodetect M2" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					If _IsChecked($Checkboxqcomfrp) Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando dispositivo en modo EDL... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$comfromuser = checkqcomm()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Seleccione el puerto EDL... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						#Region ### START Koda GUI section ### Form=
						Global $ComPortsSelector = GUICreate("Com Ports Selection", 544, 130, -1, -1)
						Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
						Global $inputcomport = GUICtrlCreateCombo("", 32, 40, 233, 25)
						GUICtrlSetData($inputcomport, _CommListPorts(1))
						GUICtrlCreateGroup("", -99, -99, 1, 1)
						Global $continuar = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
						Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
						Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
						Global $Label3 = GUICtrlCreateLabel("SELECT 9008 PORT.", 312, 80, 126, 17)
						Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
						Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
						GUISetState(@SW_SHOW)
						#EndRegion ### END Koda GUI section ###

						While 1
							$nMsg = GUIGetMsg()
							Switch $nMsg

								Case $GUI_EVENT_CLOSE
									GUIDelete($ComPortsSelector)
									EnableButtons()
									ExitLoop

								Case $ButtonrefreshComm
									GUICtrlSetData($inputcomport,"")
									GUICtrlSetData($inputcomport, _CommListPorts(1))

								Case $OpenDeviceMGM
									OpenDevMenu()

								Case $continuar
									$comfromuser = GUICtrlRead($inputcomport)
									GUIDelete($ComPortsSelector)
									ExitLoop

							EndSwitch

						WEnd
					EndIf
					If $comfromuser <> '' Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $comfromuser & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Informacion del dispositivo..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Global $ipid = Run("emmcdl -p " & $comfromuser & " -info", "", @SW_HIDE, $stderr_child + $stdout_child)
						ProcessWaitClose($ipid)
						Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						Global $sFile = FileOpen(@TempDir & "\file.txt", $FO_OVERWRITE)
						FileWrite($sFile, $soutput)
						Global $contadera = _FileCountLines(@TempDir & "\file.txt")
						For $i = 2 To $contadera
							Local $imp = FileReadLine(@TempDir & "\file.txt", $i)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $imp & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Next
						FileDelete(@TempDir & "\file.txt")
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Buscando Cargador... ")
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Global $entonces = CheckProc($soutput)
						If $entonces == "Unknown" Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "78")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If Not FileExists(@ScriptDir & "\Loaders\" & $entonces) Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descargando cargador..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$sDownloaderTitle = "Descargando Resources"
								$url            = "http://mcu-tool.com/MCU-Tool Resources/Loaders/" & $entonces
								$file           = $entonces
								$name           = $entonces
								$dir            = @ScriptDir & "\Loaders\"
								_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
							EndIf
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando archivos..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							FileDelete(@ScriptDir & "\persist.img")
							FileDelete(@ScriptDir & "\config.img")
							Sleep(1000)
							If FileExists(@ScriptDir & "\Loaders\" & $entonces) Then
								FileCopy(@ScriptDir & "\Loaders\" & $entonces, @ScriptDir)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Guardando particiones...")
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("emmcdl -p " & $comfromuser & " -f " & $entonces & " -d persist -o persist.img","",@SW_HIDE, $stderr_child + $stdout_child)
								Global $star = TimerInit()
								Do
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									If StringInStr($soutput, "Status") Then
										ExitLoop
									EndIf
									Sleep(100)
								Until TimerDiff($star) > 10000
								$ipid = Run("emmcdl -p " & $comfromuser & " -f " & $entonces & " -d config -o config.img","",@SW_HIDE, $stderr_child + $stdout_child)
								Do
									$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
									If StringInStr($soutput, "Status") Then
										ExitLoop
									EndIf
									Sleep(100)
								Until TimerDiff($star) > 10000
								ProcessClose("emmcdl.exe")
								If FileExists(@ScriptDir & "\persist.img") And FileExists(@ScriptDir & "\config.img") Then
									FileMove(@ScriptDir & "\persist.img", @MyDocumentsDir & "\Backup_MCU\FRP_SEC\persist.img", $FC_OVERWRITE + $FC_CREATEPATH)
									FileMove(@ScriptDir & "\config.img", @MyDocumentsDir & "\Backup_MCU\FRP_SEC\config.img", $FC_OVERWRITE + $FC_CREATEPATH)
									Global $sfilename = _Zip_Create(@MyDocumentsDir & "\Backup_MCU\FRP_SEC\FRPSEC_" & @HOUR & @MIN & @MDAY & @MON & @YEAR & ".zip")
									_Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\FRP_SEC\persist.img", 1)
									_Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\FRP_SEC\config.img", 1)
									$ipid = _Crypt_EncryptFile($sfilename, @MyDocumentsDir & "\Backup_MCU\FRP_SEC\FRPSEC_" & @HOUR & @MIN & @MDAY & @MON & @YEAR & ".mcu", $decrypt, $iAlgorithm)
									ProcessWaitClose($ipid)
									FileDelete(@MyDocumentsDir & "\Backup_MCU\FRP_SEC\persist.img")
									FileDelete(@MyDocumentsDir & "\Backup_MCU\FRP_SEC\config.img")
									FileDelete($sfilename)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Backup guardado en: " & @MyDocumentsDir & "\Backup_MCU\FRP_SEC\FRPSEC_" & @HOUR & @MIN & @MDAY & @MON & @YEAR & ".mcu" & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Global $ujmjm = 1
								Else
									$resp = MsgBox(48 + 4, "MC-U Tool", " El backup no se guardo correctamente desea continuar?" & @CRLF & @CRLF & 'Backup not saved, do you wish to continue?')
									Switch $resp
										Case 6
											Global $ujmjm = 1
										Case 7
											Global $ujmjm = 2
											_GUICtrlEdit_SetText ($Edit1, "")
											FileDelete(@ScriptDir & "\" & $entonces)
											EnableButtons()
									EndSwitch
								EndIf
								If $ujmjm == 1 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Eliminando Particion FRP...")
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$soutput = Run("emmcdl -p " & $comfromuser & " -f " & $entonces & " -e persist","",@SW_HIDE)
									Global $star = TimerInit()
									Do
										If Not ProcessExists("emmcdl.exe") Then
											Global $marquer = 1
											ExitLoop
										EndIf
									Until TimerDiff($star) > 10000
									ProcessClose("emmcdl.exe")
									$soutput = Run("emmcdl -p " & $comfromuser & " -f " & $entonces & " -e config","",@SW_HIDE)
									Do
										If Not ProcessExists("emmcdl.exe") Then
											Global $marquer2 = 1
											ExitLoop
										EndIf
									Until TimerDiff($star) > 10000
									If $marquer <> 1 And $marquer2 <> 1 Then
										ProcessClose("emmcdl.exe")
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										DeleteRecurrencia($imei & "78")
										refund(GUICtrlRead($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										FileDelete(@ScriptDir & "\" & $entonces)
									Else
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
										firma()
										AddLog()
										logs()
										EnableButtons()
										FileDelete(@ScriptDir & "\" & $entonces)
									EndIf
								EndIf
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cargador no descargado correctamente" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "78")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ningun puerto detectado o seleccionado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "78")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			ElseIf $ComboRead == $iArray[118] then
				DisableButtons()
				_GUICtrlEdit_SetText ($Edit1, "")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Restore Backup" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando puerto COM..." & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Global $cheketeo = checkqcomm()
				If StringInStr($cheketeo, "COM") = 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Puerto No Detectado por favor coloque el dispositivo en modo EDL" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Dispositivo Detectado en el puerto: " & $cheketeo & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Informacion del dispositivo..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $ipid = Run("emmcdl -p " & $cheketeo & " -info", "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					Global $sFile = FileOpen(@TempDir & "\file.txt", $FO_OVERWRITE)
					FileWrite($sFile, $soutput)
					Global $contadera = _FileCountLines(@TempDir & "\file.txt")
					For $i = 2 To $contadera
						Local $imp = FileReadLine(@TempDir & "\file.txt", $i)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $imp & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Next
					FileDelete(@TempDir & "\file.txt")
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Buscando Cargador... ")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $entonces = CheckProc($soutput)
					If $entonces == "Unknown" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No Encontrado" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " OK" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If Not FileExists(@ScriptDir & "\Loaders\" & $entonces) Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Descargando cargador..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$sDownloaderTitle = "Descargando Resources"
							$url            = "http://mcu-tool.com/MCU-Tool Resources/Loaders/" & $entonces
							$file           = $entonces
							$name           = $entonces
							$dir            = @ScriptDir & "\Loaders\"
							_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
						EndIf
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando archivos..." & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(1000)
						If FileExists(@ScriptDir & "\Loaders\" & $entonces) Then
							FileCopy(@ScriptDir & "\Loaders\" & $entonces, @ScriptDir)
							Global $esult1 = SecguardadosFRP()
							Global $esult2 = SecguardadosDATA()
							#Region ### START Koda GUI section ### Form=
							Global $Security = GUICreate("Security Selection", 313, 165, -1, -1)
							Global $Group1 = GUICtrlCreateGroup("Sec Files Available", 16, 8, 281, 137)
							Global $Combo1 = GUICtrlCreateCombo("", 64, 80, 177, 25)
							Global $Button1 = GUICtrlCreateButton("Restore", 168, 112, 75, 25)
							Global $Group2 = GUICtrlCreateGroup("", 40, 24, 233, 49)
							Global $Radio1 = GUICtrlCreateRadio("FRP_SEC", 72, 40, 81, 17)
							Global $Radio2 = GUICtrlCreateRadio("DATA_SEC", 163, 39, 81, 17)
							Global $Button2 = GUICtrlCreateButton("Search Sec", 63, 111, 75, 25)
							GUICtrlCreateGroup("", -99, -99, 1, 1)
							GUISetState(@SW_SHOW)
							#EndRegion ### END Koda GUI section ###

							While 1
								$nMsg = GUIGetMsg()
								Switch $nMsg
									Case $GUI_EVENT_CLOSE
										GUIDelete($Security)
										ExitLoop

									Case $Button2
										IF GUICtrlRead($Radio1) = 1 Then
											GUICtrlSetData($Combo1, $esult1)
											Global $FileOpenDialog1 = "C:\Users\YAMIL\Documents\Backup_MCU\FRP_SEC\"
										ElseIf GUICtrlRead($Radio2) = 1 Then
											GUICtrlSetData($Combo1, $esult2)
											Global $FileOpenDialog1 = "C:\Users\YAMIL\Documents\Backup_MCU\DATA_SEC\"
										EndIf

									Case $Button1
										FileDelete(@ScriptDir & "\SEC.zip")
										FileDelete(@ScriptDir & "\misc.img")
										FileDelete(@ScriptDir & "\config.img")
										FileDelete(@ScriptDir & "\persist.img")
										Global $lectura = GUICtrlRead($Combo1)
										GUIDelete($Security)
										If $lectura <> "" Then
											Global $FileOpenDialog = $FileOpenDialog1 & $lectura
											FileCopy($FileOpenDialog, @ScriptDir)
											$ipid = _Crypt_DecryptFile(@ScriptDir & "\" & $lectura, @ScriptDir & "\SEC.zip", $decrypt, $iAlgorithm)
											ProcessWaitClose($ipid)
											FileDelete(@ScriptDir & "\" & $lectura)
											_Zip_UnzipAll(@ScriptDir & "\SEC.zip", @ScriptDir, 1)
											FileDelete(@ScriptDir & "\SEC.zip")
											If StringInStr($lectura, "FRP") <> 0 Then
												$soutput = Run("emmcdl -p " & $cheketeo & " -f " & $entonces & " -b persist.img","",@SW_HIDE)
												Global $star = TimerInit()
												Do
													If Not ProcessExists("emmcdl.exe") Then
														Global $marquer = 1
														ExitLoop
													EndIf
												Until TimerDiff($star) > 10000
												ProcessClose("emmcdl.exe")
												$soutput = Run("emmcdl -p " & $cheketeo & " -f " & $entonces & " -b config.img","",@SW_HIDE)
												Do
													If Not ProcessExists("emmcdl.exe") Then
														Global $marquer2 = 1
														ExitLoop
													EndIf
												Until TimerDiff($star) > 10000
												If $marquer <> 1 And $marquer2 <> 1 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													FileDelete(@ScriptDir & "\persist.img")
													FileDelete(@ScriptDir & "\config.img")
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													FileDelete(@ScriptDir & "\persist.img")
													FileDelete(@ScriptDir & "\config.img")
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											Else
												$soutput = Run("emmcdl -p " & $cheketeo & " -f " & $entonces & " -b misc.img","",@SW_HIDE)
												Global $star = TimerInit()
												Do
													If Not ProcessExists("emmcdl.exe") Then
														Global $marquer = 1
														ExitLoop
													EndIf
												Until TimerDiff($star) > 10000
												ProcessClose("emmcdl.exe")
												If $marquer <> 1 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													FileDelete(@ScriptDir & "\misc.img")
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													FileDelete(@ScriptDir & "\misc.img")
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												EndIf
											EndIf
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No se selecciono ningun archivo de seguridad!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										EndIf
								EndSwitch
							WEnd
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Cargador no descargado correctamente" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					EndIf
				EndIf
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error! Seleccione una operacion de la lista" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				firma()
				AddLog()
				logs()
				EnableButtons()
			EndIf

		Case $resetgmail
			DisableButtons()
			 _GUICtrlEdit_SetText ($Edit1, "")
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reset Gmail" & @CRLF)
			 $pro = GUICtrlRead($Edit1)
			  $dejaver = ReadInfoprocess()
			 If $dejaver == 1 then
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Eliminando..." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb shell rm /data/data/com.android.providers.settings/databases/settings.db", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell rm /data/data/com.android.providers.settings/databases/settings.db-shm", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 $ipid = Run("adb shell rm /data/data/com.android.providers.settings/databases/settings.db-wal", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reiniciando..." & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 $ipid = Run("adb reboot", "", @SW_HIDE)
				 ProcessWaitClose($ipid)
				 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
				 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				 firma()
				 AddLog()
				 logs()
				 EnableButtons()
            Else
				EnableButtons()
		    EndIf

		Case $ButtonHuaweimdm
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("ButtonHuaweimdm", "69")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Huawei Claro MDM Remove" & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Eliminando MDM..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					commandwait('adb shell pm uninstall -k --user 0 co.sitic.pp')
					commandwait('adb shell pm uninstall -k --user 0 com.claroColombia.contenedor')
					commandwait('adb shell pm uninstall -k --user 0 co.sitic.pp')
					commandwait('adb shell pm uninstall -k --user 0 com.claroColombia.contenedor')
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reconectando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('adb wait-for-device', "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					BootComplete()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando..." & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run('adb shell pm list packages', "", @SW_HIDE, $stderr_child + $stdout_child)
					ProcessWaitClose($ipid)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If StringInStr($soutput, "co.sitic.pp") == 0 And StringInStr($soutput, "com.claroColombia.contenedor") == 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						DeleteRecurrencia($imei & "69")
						refund(GUICtrlRead($Edit1))
						firma()
						AddLog()
						logs()
						EnableButtons()
					EndIf
				Else
					DeleteRecurrencia($imei & "69")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $ClacLuhnLG
			GUICtrlSetData($LuhnImeiLG, "")
			Global $imeisend = GUICtrlRead($InputIMEILG)
			If StringLen($imeisend) == 14 Then
				$ujm = Luhn($imeisend)
				GUICtrlSetData($LuhnImeiLG, $ujm)
			Else
				MsgBox(48, "Error", "Debe introducir solo los primeros 14 numeros del IMEI" & @CRLF & @CRLF & 'Must introduce only the first 14 numbres from IMEI')
			EndIf

		Case $StartIMeifixlg
			Global $imeitext1 = GUICtrlRead($InputIMEILG)
			Global $luhntopass1 = GUICtrlRead($LuhnImeiLG)
			If $imeitext1 == '' Or StringLen($imeitext1) < 14 Then
				MsgBox(48, "Advertencia", "Por favor entre un IMEI correcto" & @CRLF & @CRLF & "Please type a correct IMEI number" )
			ElseIf $luhntopass1 == "" Then
				MsgBox(48, "Advertencia", "Debe Chequear el IMEI primero" & @CRLF & @CRLF & "Must Check IMEI First" )
			Else
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("lgimei", "88")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG IMEI Repair" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					If $key == False Then
						DeleteRecurrencia($imei & "88")
						refund(GUICtrlRead($Edit1))
						WrongKeyNoCred()
					ElseIf $key == 0 Then
						DeleteRecurrencia($imei & "88")
						refund(GUICtrlRead($Edit1))
						Error0002NoCred()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						#Region ### START Koda GUI section ### Form=
						Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
						Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
						Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
						GUICtrlSetData($Combo1, _CommListPorts(1))
						GUICtrlCreateGroup("", -99, -99, 1, 1)
						Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
						Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
						Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
						Global $Label3 = GUICtrlCreateLabel("SELECT MODEM PORT.", 312, 80, 126, 17)
						Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
						Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
						GUISetState(@SW_SHOW)
						#EndRegion ### END Koda GUI section ###

						While 1
							$nMsg = GUIGetMsg()
							Switch $nMsg
								Case $GUI_EVENT_CLOSE
									GUIDelete($FormCOM)
									DeleteRecurrencia($imei & "88")
									refund(GUICtrlRead($Edit1))
									EnableButtons()
									ExitLoop

								Case $OpenDeviceMGM
									OpenDevMenu()

								Case $ButtonrefreshComm
									GUICtrlSetData($Combo1,"")
									GUICtrlSetData($Combo1, _CommListPorts(1))

								Case $ButtonSelectCom
									Global $commselected = GUICtrlRead($Combo1)
									Global $finalcom = StringTrimLeft($commselected, 3)
									If $commselected == "" Then
										MsgBox(16, "Error", "No CommPort Selected!")
									Else
										GUIDelete($FormCOM)
										Global $err = ""
										_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
										If $err == "" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Conexion... " )
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Global $star = TimerInit()
											Do
												_CommSendString("AT" & @CR, 1)
												$instrcheck = _commGetLine(@CR, 20, 200)
												Sleep(20)
												 If $instrcheck == "" Then
													Global $Com = 1
												 Else
													$Com = 0
													ExitLoop
												 EndIf
												 Sleep(100)
											Until TimerDiff($star) > 3000
											If $Com == 1 Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Puerto COM seleccionado incorrecto!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "88")
												refund(GUICtrlRead($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											Else
												Global $ejec = IsCreditNedded2("12", $key)
												Global $var = shori($ejec[1], $key)
												While 1
													$instr = _commGetLine(@CR, 20, 200)
													If StringInStr($instr, "OK") <> 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_CommSendString($var & $imeitext1 & $luhntopass1 & @CR, 1)
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando...")
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														Sleep(3000)
														Global $star = TimerInit()
														Do
															$instr = _commGetLine(@CR, 100, 200)
															if StringInStr($instr, "ERROR") <> 0 Then
																Global $sirvio = "NO"
																ExitLoop
															Else
																Global $sirvio = "SI"
															EndIf
														Until TimerDiff($star) > 3000
														If $sirvio == "NO" Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "88")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															_CommClosePort()
															ExitLoop
														Else
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado! Por favor reinicie su dispositivo manualmente." & @CRLF )
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															_CommClosePort()
															ExitLoop
														EndIf
													ElseIf StringInStr($instr, "ERROR") <> 0 Then
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequea la conexion e intenta nuevamente!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
														_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
														DeleteRecurrencia($imei & "88")
														refund(GUICtrlRead($Edit1))
														firma()
														AddLog()
														logs()
														EnableButtons()
														ExitLoop
													Endif
												WEnd
												ExitLoop
											EndIf
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 01!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "88")
											refund(GUICtrlRead($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										EndIf
									EndIf
							EndSwitch
						WEnd
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			EndIf

		Case $MEID
			Global $imeitext1 = GUICtrlRead($InputIMEILG)
			Global $luhntopass1 = GUICtrlRead($LuhnImeiLG)
			If $imeitext1 == '' Or StringLen($imeitext1) < 14 Then
				MsgBox(48, "Advertencia", "Por favor entre un IMEI correcto" & @CRLF & @CRLF & "Please type a correct IMEI number" )
			ElseIf $luhntopass1 == "" Then
				MsgBox(48, "Advertencia", "Debe Chequear el IMEI primero" & @CRLF & @CRLF & "Must Check IMEI First" )
			Else
				_GUICtrlEdit_SetText ($Edit1, "")
				Global $showme2 = CredNoLicense("lgmeid", "89")
				If StringIsDigit($showme2) == 1 Or $activo == 1 Then
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " LG MEID Repair" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					If $key == False Then
						DeleteRecurrencia($imei & "89")
						refund(GUICtrlRead($Edit1))
						WrongKeyNoCred()
					ElseIf $key == 0 Then
						DeleteRecurrencia($imei & "89")
						refund(GUICtrlRead($Edit1))
						Error0002NoCred()
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						$dejaver = ReadInfoprocess()
						If $dejaver == 1 then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Leyendo SPC... " & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $spclgshow = SPCLGADB()
							If $spclgshow == 0 Or $spclgshow == 1 Or $spclgshow == 2 Or $spclgshow == 3 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Fallo obteniendo SPC... " & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Intenado reparar MEID con SPC generico..." & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$spclgshow = '000000'
							EndIf
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando MEID..." & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $meidfromuser = $imeitext1 & $luhntopass1
							global $checkmeid = MeidLG($spclgshow, $meidfromuser)
							If $checkmeid == 1 Then
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Puerto Serial no encontrado, active DIAG" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "89")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
							DeleteRecurrencia($imei & "89")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
						EndIf
					EndIf
				ElseIf $showme2 = True Then
					MsgBox(16, "Error", "Operacion Cencelada")
				Else
					MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
				EndIf
			EndIf
		Case $CheckUserINfo
			ButtonSearchClick()
		Case $PasswordChange
			Password()
		Case $ButtonChangeEmail
			EmailChange()
		Case $ButtonChangeHWID
			hwid()
		Case $ButtonReset
			DisableButtons()
			_GUICtrlEdit_SetText($Edit1, "")
			#Region ### START Koda GUI section ### Form=
			Global $FormCOM = GUICreate("Com Ports Selection", 544, 130, -1, -1)
			Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
			Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25)
			GUICtrlSetData($Combo1, _CommListPorts(1))
			GUICtrlCreateGroup("", -99, -99, 1, 1)
			Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
			Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
			Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
			Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
			Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
			Global $Input1 = GUICtrlCreateInput("000000", 152, 96, 57, 21)
			Global $Label4 = GUICtrlCreateLabel("SPC", 112, 96, 25, 17)
			GUISetState(@SW_SHOW)
			#EndRegion ### END Koda GUI section ###
			While 1
				$nMsg = GUIGetMsg()
				Switch $nMsg
					Case $GUI_EVENT_CLOSE
						GUIDelete($FormCOM)
						EnableButtons()
						ExitLoop
					Case $ButtonrefreshComm
						GUICtrlSetData($Combo1,"")
						GUICtrlSetData($Combo1, _CommListPorts(1))

					Case $ButtonSelectCom
						Global $commselected = GUICtrlRead($Combo1)
						Global $spcs = GUICtrlRead($Input1)
						GUIDelete($FormCOM)
						rebootsqcom2($commselected, $spcs, "reboot")
						firma()
						AddLog()
						logs()
						EnableButtons()
						ExitLoop
				EndSwitch
			WEnd
		Case $ButtonPowerOff
			DisableButtons()
			_GUICtrlEdit_SetText($Edit1, "")
			#Region ### START Koda GUI section ### Form=
			Global $FormCOM = GUICreate("Com Ports Selection", 544, 130, -1, -1)
			Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
			Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25)
			GUICtrlSetData($Combo1, _CommListPorts(1))
			GUICtrlCreateGroup("", -99, -99, 1, 1)
			Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
			Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
			Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
			Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
			Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
			Global $Input1 = GUICtrlCreateInput("000000", 152, 96, 57, 21)
			Global $Label4 = GUICtrlCreateLabel("SPC", 112, 96, 25, 17)
			GUISetState(@SW_SHOW)
			#EndRegion ### END Koda GUI section ###
			While 1
				$nMsg = GUIGetMsg()
				Switch $nMsg
					Case $GUI_EVENT_CLOSE
						GUIDelete($FormCOM)
						EnableButtons()
						ExitLoop
					Case $ButtonrefreshComm
						GUICtrlSetData($Combo1,"")
						GUICtrlSetData($Combo1, _CommListPorts(1))

					Case $ButtonSelectCom
						Global $commselected = GUICtrlRead($Combo1)
						Global $spcs = GUICtrlRead($Input1)
						GUIDelete($FormCOM)
						rebootsqcom2($commselected, $spcs, "off")
						firma()
						AddLog()
						logs()
						EnableButtons()
						ExitLoop
				EndSwitch
			WEnd
		Case $ButtonRebDl
			DisableButtons()
			_GUICtrlEdit_SetText($Edit1, "")
			#Region ### START Koda GUI section ### Form=
			Global $FormCOM = GUICreate("Com Ports Selection", 544, 130, -1, -1)
			Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
			Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25)
			GUICtrlSetData($Combo1, _CommListPorts(1))
			GUICtrlCreateGroup("", -99, -99, 1, 1)
			Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
			Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
			Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
			Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
			Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
			Global $Input1 = GUICtrlCreateInput("000000", 152, 96, 57, 21)
			Global $Label4 = GUICtrlCreateLabel("SPC", 112, 96, 25, 17)
			GUISetState(@SW_SHOW)
			#EndRegion ### END Koda GUI section ###
			While 1
				$nMsg = GUIGetMsg()
				Switch $nMsg
					Case $GUI_EVENT_CLOSE
						GUIDelete($FormCOM)
						EnableButtons()
						ExitLoop
					Case $ButtonrefreshComm
						GUICtrlSetData($Combo1,"")
						GUICtrlSetData($Combo1, _CommListPorts(1))

					Case $ButtonSelectCom
						Global $commselected = GUICtrlRead($Combo1)
						Global $spcs = GUICtrlRead($Input1)
						GUIDelete($FormCOM)
						rebootsqcom2($commselected, $spcs, "dl")
						firma()
						AddLog()
						logs()
						EnableButtons()
						ExitLoop
				EndSwitch
			WEnd
		Case $Buttonreadinfonv
			DisableButtons()
			_GUICtrlEdit_SetText($Edit1, "")
			#Region ### START Koda GUI section ### Form=
			Global $FormCOM = GUICreate("Com Ports Selection", 544, 130, -1, -1)
			Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
			Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25)
			GUICtrlSetData($Combo1, _CommListPorts(1))
			GUICtrlCreateGroup("", -99, -99, 1, 1)
			Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
			Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
			Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
			Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
			Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
			Global $Input1 = GUICtrlCreateInput("000000", 152, 96, 57, 21)
			Global $Label4 = GUICtrlCreateLabel("SPC", 112, 96, 25, 17)
			GUISetState(@SW_SHOW)
			#EndRegion ### END Koda GUI section ###
			While 1
				$nMsg = GUIGetMsg()
				Switch $nMsg
					Case $GUI_EVENT_CLOSE
						GUIDelete($FormCOM)
						EnableButtons()
						ExitLoop
					Case $ButtonrefreshComm
						GUICtrlSetData($Combo1,"")
						GUICtrlSetData($Combo1, _CommListPorts(1))

					Case $ButtonSelectCom
						Global $commselected = GUICtrlRead($Combo1)
						Global $spcs = GUICtrlRead($Input1)
						GUIDelete($FormCOM)
						readinfodiag($commselected, $spcs)
						firma()
						AddLog()
						logs()
						EnableButtons()
						ExitLoop
				EndSwitch
			WEnd
		Case $Buttonluhnqcom
			GUICtrlSetData($Input3, "")
			Global $imeisend = GUICtrlRead($Input2)
			If StringLen($imeisend) == 14 Then
				$ujm = Luhn($imeisend)
				GUICtrlSetData($Input3, $ujm)
			Else
				MsgBox(48, "Error", "Debe introducir solo los primeros 14 numeros del IMEI" & @CRLF & @CRLF & 'Must introduce only the first 14 numbres from IMEI')
			EndIf

		Case $Buttonleer
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("reednv", "127")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				#Region ### START Koda GUI section ### Form=
				Global $FormCOM = GUICreate("Com Ports Selection", 544, 130, -1, -1)
				Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
				Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25)
				GUICtrlSetData($Combo1, _CommListPorts(1))
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
				Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
				Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
				Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
				Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($FormCOM)
							DeleteRecurrencia($imei & "127")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
							ExitLoop
						Case $ButtonrefreshComm
							GUICtrlSetData($Combo1,"")
							GUICtrlSetData($Combo1, _CommListPorts(1))

						Case $ButtonSelectCom
							Global $poraqi = GUICtrlRead($RangoStart)
							Global $poralla = GUICtrlRead($rangofinal)
							Global $spcnv = GUICtrlRead($Inputspc)
							Global $commselected = GUICtrlRead($Combo1)
							GUIDelete($FormCOM)
							readinv($commselected, $spcnv ,$poraqi, $poralla)
							Global $confirm = ProcesarLecturaNV()
							If $confirm = 1 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " NV Items leidos correctamente!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error de Lectura!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "127")
								refund(GUICtrlRead($Edit1))
							EndIf
							firma()
							AddLog()
							logs()
							EnableButtons()
							ExitLoop
					EndSwitch
				WEnd
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $Buttonimieqcom
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("ImeiQcomm", "124")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				If GUICtrlRead($Input3) == "" Then
					MsgBox(64, "MC-U Tool", "Debe calcular el Luhn primero!" & @CRLF & @CRLF & "Must Calculate Luhn first!")
					DeleteRecurrencia($imei & "124")
					refund(GUICtrlRead($Edit1))
				Else
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, "")
					#Region ### START Koda GUI section ### Form=
					Global $FormCOM = GUICreate("Com Ports Selection", 544, 130, -1, -1)
					Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
					Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25)
					GUICtrlSetData($Combo1, _CommListPorts(1))
					GUICtrlCreateGroup("", -99, -99, 1, 1)
					Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
					Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
					Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
					Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
					Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
					GUISetState(@SW_SHOW)
					#EndRegion ### END Koda GUI section ###
					While 1
						$nMsg = GUIGetMsg()
						Switch $nMsg
							Case $GUI_EVENT_CLOSE
								GUIDelete($FormCOM)
								DeleteRecurrencia($imei & "124")
								refund(GUICtrlRead($Edit1))
								EnableButtons()
								ExitLoop
							Case $ButtonrefreshComm
								GUICtrlSetData($Combo1,"")
								GUICtrlSetData($Combo1, _CommListPorts(1))

							Case $ButtonSelectCom
								Global $commselected = GUICtrlRead($Combo1)
								Global $spcs = GUICtrlRead($Inputspcmsl2)
								Global $imeior = GUICtrlRead($Input2) & GUICtrlRead($Input3)
								GUIDelete($FormCOM)
								Global $reoairimei = repairimeinv($commselected, $spcs, "imei", $imeior)
								If $reoairimei == 0 Then
									DeleteRecurrencia($imei & "124")
									refund(GUICtrlRead($Edit1))
								EndIf
								firma()
								AddLog()
								logs()
								EnableButtons()
								ExitLoop
						EndSwitch
					WEnd
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $Buttonmeidqcom
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("MeidQcomm", "125")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				If StringLen(GUICtrlRead($Input2)) <> 14 Then
					MsgBox(64, "MC-U Tool", "Debe introducir in MEID Correcto" & @CRLF & @CRLF & "Must type Correct MEID!")
					DeleteRecurrencia($imei & "125")
					refund(GUICtrlRead($Edit1))
				Else
					DisableButtons()
					_GUICtrlEdit_SetText($Edit1, "")
					#Region ### START Koda GUI section ### Form=
					Global $FormCOM = GUICreate("Com Ports Selection", 544, 130, -1, -1)
					Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
					Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25)
					GUICtrlSetData($Combo1, _CommListPorts(1))
					GUICtrlCreateGroup("", -99, -99, 1, 1)
					Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
					Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
					Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
					Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
					Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
					GUISetState(@SW_SHOW)
					#EndRegion ### END Koda GUI section ###
					While 1
						$nMsg = GUIGetMsg()
						Switch $nMsg
							Case $GUI_EVENT_CLOSE
								GUIDelete($FormCOM)
								DeleteRecurrencia($imei & "125")
								refund(GUICtrlRead($Edit1))
								EnableButtons()
								ExitLoop
							Case $ButtonrefreshComm
								GUICtrlSetData($Combo1,"")
								GUICtrlSetData($Combo1, _CommListPorts(1))

							Case $ButtonSelectCom
								Global $commselected = GUICtrlRead($Combo1)
								Global $spcs = GUICtrlRead($Inputspcmsl2)
								Global $imeior = GUICtrlRead($Input2)
								GUIDelete($FormCOM)
								Global $reoairimei = repairimeinv($commselected, $spcs, "meid", $imeior)
								If $reoairimei == 0 Then
									DeleteRecurrencia($imei & "125")
									refund(GUICtrlRead($Edit1))
								EndIf
								firma()
								AddLog()
								logs()
								EnableButtons()
								ExitLoop
						EndSwitch
					WEnd
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $Buttonescribir
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $showme2 = CredNoLicense("writenv", "126")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				#Region ### START Koda GUI section ### Form=
				Global $FormCOM = GUICreate("Com Ports Selection", 544, 130, -1, -1)
				Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
				Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25)
				GUICtrlSetData($Combo1, _CommListPorts(1))
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
				Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
				Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
				Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
				Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###
				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($FormCOM)
							DeleteRecurrencia($imei & "126")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
							ExitLoop

						Case $ButtonrefreshComm
							GUICtrlSetData($Combo1,"")
							GUICtrlSetData($Combo1, _CommListPorts(1))

						Case $ButtonSelectCom
							Global $spcnv = GUICtrlRead($Inputspc)
							Global $commselected = GUICtrlRead($Combo1)
							GUIDelete($FormCOM)
							Global $writenv = writenv($commselected, $spcnv)
							If $writenv = 0 Then
								DeleteRecurrencia($imei & "126")
								refund(GUICtrlRead($Edit1))
							EndIf
							firma()
							AddLog()
							logs()
							EnableButtons()
							ExitLoop
					EndSwitch
				WEnd
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $ButtonLhunMtk
			GUICtrlSetData($Inputmtklhun, "")
			GUICtrlSetData($Inputmtklhun2, "")
			Global $imeitext1 = GUICtrlRead($Inputmei1mtk)
			Global $imeitext2 = GUICtrlRead($InputMTKIMEI2)
			If StringLen($imeitext1) == 14 And StringLen($imeitext2) == 14 Then
				$ujm = Luhn($imeitext1)
				GUICtrlSetData($Inputmtklhun, $ujm)
				$ujmm = Luhn($imeitext2)
				GUICtrlSetData($Inputmtklhun2, $ujmm)
			ElseIf StringLen($imeitext1) == 14 And StringLen($imeitext2) == 0 Then
				$ujm = Luhn($imeitext1)
				GUICtrlSetData($Inputmtklhun, $ujm)
			ElseIf StringLen($imeitext1) == 0 And StringLen($imeitext2) == 14 Then
				$ujmm = Luhn($imeitext2)
				GUICtrlSetData($Inputmtklhun2, $ujmm)
			Else
				MsgBox(48, "Error", "Debe introducir solo los primeros 14 numeros del IMEI" & @CRLF & @CRLF & 'Must introduce only the first 14 numbres from IMEI')
			EndIf
		Case $ButtonRepairImeiMtkCom
			_GUICtrlEdit_SetText($Edit1, "")
			Global $showme2 = CredNoLicense("Buttonfiximeimtk", "1")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				Global $imeitext1 = GUICtrlRead($Inputmei1mtk)
				Global $imeitext2 = GUICtrlRead($InputMTKIMEI2)
				Global $luhntopass1 = GUICtrlRead($Inputmtklhun)
				Global $luhntopass2 = GUICtrlRead($Inputmtklhun2)
				If $imeitext1 == '' Or StringLen($imeitext1) < 14 Then
					MsgBox(48, "Advertencia", "Por favor entre un IMEI 1" & @CRLF & @CRLF & "Please type a IMEI 1" )
					DeleteRecurrencia($imei & "1")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				ElseIf $luhntopass1 == "" And $luhntopass2 == "" Then
					MsgBox(48, "Advertencia", "Debe Chequear el IMEI primero" & @CRLF & @CRLF & "Must Check IMEI First" )
					DeleteRecurrencia($imei & "1")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MTK IMEI Repair via COM PORT" & @CRLF)
					$pro = GUICtrlRead($Edit1)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Autorizando servidor... ")
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					If $key == False Then
						WrongKeyNoCred()
						DeleteRecurrencia($imei & "1")
						refund(GUICtrlRead($Edit1))
					ElseIf $key == 0 Then
						Error0002NoCred()
						DeleteRecurrencia($imei & "1")
						refund(GUICtrlRead($Edit1))
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						#Region ### START Koda GUI section ### Form=
						Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
						Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
						Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
						GUICtrlSetData($Combo1, _CommListPorts(1))
						GUICtrlCreateGroup("", -99, -99, 1, 1)
						Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
						Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
						Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
						Global $Label3 = GUICtrlCreateLabel("SELECT MODEM PORT.", 312, 80, 126, 17)
						Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
						Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
						GUISetState(@SW_SHOW)
						#EndRegion ### END Koda GUI section ###

						While 1
							$nMsg = GUIGetMsg()
							Switch $nMsg
								Case $GUI_EVENT_CLOSE
									GUIDelete($FormCOM)
									DeleteRecurrencia($imei & "1")
									refund(GUICtrlRead($Edit1))
									EnableButtons()
									ExitLoop

								Case $OpenDeviceMGM
									OpenDevMenu()

								Case $ButtonrefreshComm
									GUICtrlSetData($Combo1,"")
									GUICtrlSetData($Combo1, _CommListPorts(1))

								Case $ButtonSelectCom
									Global $commselected = GUICtrlRead($Combo1)
									Global $finalcom = StringTrimLeft($commselected, 3)
									If $commselected == "" Then
										MsgBox(16, "Error", "No CommPort Selected!")
									Else
										GUIDelete($FormCOM)
										Global $err = ""
										_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
										If $err == "" Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Chequeando Conexion... " )
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Global $star = TimerInit()
											Do
												_CommSendString("AT" & @CR, 1)
												$instrcheck = _commGetLine(@CR, 20, 200)
												Sleep(20)
												If $instrcheck == "" Then
													Global $Com = 1
												Else
													$Com = 0
													ExitLoop
												EndIf
												Sleep(100)
											Until TimerDiff($star) > 3000
											If $Com == 1 Then
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error Puerto COM seleccionado incorrecto!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
												_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												DeleteRecurrencia($imei & "1")
												refund(GUICtrlRead($Edit1))
												firma()
												AddLog()
												logs()
												EnableButtons()
												ExitLoop
											Else
												Global $ejec = IsCreditNedded2("11", $key)
												Global $var = shori($ejec[1], $key)
												Global $MTKIMEIARR = StringSplit($var, "{")
												If @error Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error obteniento datos del servidor" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Fallido!" & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
													DeleteRecurrencia($imei & "1")
													refund(GUICtrlRead($Edit1))
													firma()
													AddLog()
													logs()
													EnableButtons()
													ExitLoop
												Else
													While 1
														$instr = _commGetLine(@CR, 20, 200)
														If StringInStr($instr, "OK") <> 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Okey" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_CommSendString($MTKIMEIARR[1] & @CR, 1)
															Sleep(3000)
															Global $star = TimerInit()
															Do
																$instr = _commGetLine(@CR, 20, 200)
																if StringInStr($instr, "MT") <> 0 Then
																	Global $fabricante = StringSplit($instr, '"', $STR_ENTIRESPLIT)[2]
																	ExitLoop
																Else
																	Global $fabricante = "Model not supported!"
																EndIf
															Until TimerDiff($star) > 3000
															If $fabricante == "Model not supported!" Then
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Modelo no soportado para realizar tal operacion!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso terminado!" & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																DeleteRecurrencia($imei & "1")
																refund(GUICtrlRead($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																_CommClosePort()
																ExitLoop
															Else
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Procesador: " & $fabricante & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																$instr = ''
																_CommSendString($MTKIMEIARR[2] & @CR, 1)
																Sleep(3000)
																Global $star = TimerInit()
																Do
																	$instr = _commGetLine(@CR, 100, 200)
																	If StringLen($instr) >= 15 Then
																		Global $imei1mtk = StringSplit($instr, '"', $STR_ENTIRESPLIT)[2]
																		ExitLoop
																	Else
																		Global $imei1mtk = "Error Getting IMEI 1"
																	EndIf
																Until TimerDiff($star) > 3000
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 1: " & $imei1mtk & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																$instr = ''
																_CommSendString($MTKIMEIARR[3] & @CR, 1)
																Sleep(3000)
																Global $star = TimerInit()
																Do
																	$instr = _commGetLine(@CR, 100, 200)
																	If StringInStr($instr, 'AT') == 0 and StringInStr($instr, 'OK') == 0 And StringLen($instr) >= 15 Then
																		Global $imei2mtk = StringSplit($instr, '"', $STR_ENTIRESPLIT)[2]
																		ExitLoop
																	Else
																		Global $imei2mtk = "Error Getting IMEI 2"
																	EndIf
																Until TimerDiff($star) > 3000
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IMEI 2: " & $imei2mtk & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando IMEI 1... " )
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																$instr = ''
																_CommSendString($MTKIMEIARR[4] & $imeitext1 & $luhntopass1 & '"' & @CR, 1)
																Sleep(3000)
																Global $star = TimerInit()
																Do
																	$instr = _commGetLine(@CR, 100, 200)
																	If StringInStr($instr, 'OK') <> 0 Then
																		Global $comp  = "Okey"
																		ExitLoop
																	Else
																		Global $comp  = "Error!"
																	EndIf
																Until TimerDiff($star) > 3000
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $comp & @CRLF)
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																If $imeitext2 <> '' And StringLen($imeitext2) == 14 Then
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Reparando IMEI 2... " )
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																	$instr = ''
																	_CommSendString($MTKIMEIARR[5] & $imeitext2 & $luhntopass2 &'"' & @CR, 1)
																	Sleep(3000)
																	Global $star = TimerInit()
																	Do
																		$instr = _commGetLine(@CR, 100, 200)
																		If StringInStr($instr, 'OK') <> 0 Then
																			Global $comp  = "Okey"
																			ExitLoop
																		Else
																			Global $comp  = "Error!"
																		EndIf
																	Until TimerDiff($star) > 3000
																	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $comp & @CRLF)
																	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																EndIf
																_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado! Por favor reinicie su dispositivo manualmente." & @CRLF )
																_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
																firma()
																AddLog()
																logs()
																EnableButtons()
																_CommClosePort()
																ExitLoop
															EndIf
														ElseIf StringInStr($instr, "ERROR") <> 0 Then
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error conectando a puerto COM!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
															_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
															DeleteRecurrencia($imei & "1")
															refund(GUICtrlRead($Edit1))
															firma()
															AddLog()
															logs()
															EnableButtons()
															ExitLoop
														Endif
													WEnd
													ExitLoop
												EndIf
											EndIf
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error abriendo puerto..." & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Proceso Terminado!" & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											DeleteRecurrencia($imei & "1")
											refund(GUICtrlRead($Edit1))
											firma()
											AddLog()
											logs()
											EnableButtons()
											ExitLoop
										EndIf
									EndIf
							EndSwitch
						WEnd
					EndIf
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $ButtonRoo
			_GUICtrlEdit_SetText($Edit1, "")
			Global $showme2 = CredNoLicense("Buttonfiximeimtk", "1")
			SetProcLanDefinitive("mtkimeiadb" & $indicator)
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				Global $imeitext1 = GUICtrlRead($Inputmei1mtk)
				Global $imeitext2 = GUICtrlRead($InputMTKIMEI2)
				Global $luhntopass1 = GUICtrlRead($Inputmtklhun)
				Global $luhntopass2 = GUICtrlRead($Inputmtklhun2)
				If $imeitext1 == '' Or StringLen($imeitext1) < 14 Then
					MsgBox(48, "Advertencia", "Por favor entre IMEI 1" & @CRLF & @CRLF & "Please type IMEI 1" )
					DeleteRecurrencia($imei & "1")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				ElseIf $luhntopass1 == "" And $luhntopass2 == "" Then
					MsgBox(48, "Advertencia", "Debe Chequear el IMEI primero" & @CRLF & @CRLF & "Must Check IMEI First" )
					DeleteRecurrencia($imei & "1")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2])
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If $key == False Then
							WrongKeyNoCred()
							DeleteRecurrencia($imei & "1")
							refund(GUICtrlRead($Edit1))
						ElseIf $key == 0 Then
							Error0002NoCred()
							DeleteRecurrencia($imei & "1")
							refund(GUICtrlRead($Edit1))
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = _Android_HasRootAccess()
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4])
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							If $ipid == "False" Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[5] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[6] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "1")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							ElseIf $ipid == "True" Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[7] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								If $luhntopass1 <> "" Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[8])
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Global $ejec = IsCreditNedded2("27", $key)
									Global $var = shori($ejec[1], $key)
									Global $mtkimei = StringSplit($var, "{")
									$ipid = Run("adb shell", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
									Sleep(1000)
									StdinWrite($ipid, "chmod 0777 /dev/radio/pttycmd1" & @LF )
									Sleep(1000)
									StdinWrite($ipid, "su" & @LF )
									Sleep(1000)
									StdinWrite($ipid, $mtkimei[1] & '"' & $imeitext1 & $luhntopass1 & '"' & $mtkimei[2] & @LF )
									Sleep(1000)
									StdinWrite($ipid, $mtkimei[1] & $imeitext1 & $luhntopass1 & $mtkimei[2] & @LF )
									Sleep(1000)
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[9] & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								EndIf
								If $luhntopass2 <> "" Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[10])
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Global $ejec = IsCreditNedded2("27", $key)
									Global $var = shori($ejec[1], $key)
									Global $mtkimei = StringSplit($var, "{")
									$ipid = Run("adb shell", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
									Sleep(1000)
									StdinWrite($ipid, "su" & @LF )
									Sleep(1000)
									StdinWrite($ipid,  $mtkimei[3] & '"' & $imeitext2 & $luhntopass2 & '"' & $mtkimei[2] & @LF )
									Sleep(1000)
									StdinWrite($ipid,  $mtkimei[3] & $imeitext2 & $luhntopass2 & $mtkimei[2] & @LF )
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[11] & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								EndIf
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[12] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								$ipid = Run("adb reboot", "", @SW_HIDE, $stderr_child + $stdout_child)
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[13] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						EndIf
					Else
						DeleteRecurrencia($imei & "1")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $ButtonrepairADB
			_GUICtrlEdit_SetText($Edit1, "")
			SetProcLanDefinitive("mtkimeiw" & $indicator)
			Global $showme2 = CredNoLicense("warriorimei", "130")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				Global $imeitext1 = GUICtrlRead($Inputmei1mtk)
				Global $imeitext2 = GUICtrlRead($InputMTKIMEI2)
				Global $luhntopass1 = GUICtrlRead($Inputmtklhun)
				Global $luhntopass2 = GUICtrlRead($Inputmtklhun2)
				If $imeitext1 == '' Or StringLen($imeitext1) < 14 Then
					MsgBox(48, "Advertencia", "Por favor entre un IMEI 1" & @CRLF & @CRLF & "Please type a IMEI 1" )
					DeleteRecurrencia($imei & "130")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				ElseIf $luhntopass1 == "" And $luhntopass2 == "" Then
					MsgBox(48, "Advertencia", "Debe Chequear el IMEI primero" & @CRLF & @CRLF & "Must Check IMEI First" )
					DeleteRecurrencia($imei & "130")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayPNF[1] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$pro = GUICtrlRead($Edit1)
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						Global $ejec = IsCreditNedded2("27", $key)
						Global $var = shori($ejec[1], $key)
						Global $mtkimei = StringSplit($var, "{")
						Sleep(1000)
						Global $respuestawarrior = 0
						If $luhntopass1 <> "" And $luhntopass2 == "" Then
							$respuestawarrior = warrior($mtkimei[1] & '"' & $imeitext1 & $luhntopass1 & '"' & $mtkimei[2] & "}exit")
						Else
							$respuestawarrior = warrior($mtkimei[1] & '"' & $imeitext1 & $luhntopass1 & '"' & $mtkimei[2] & "}" & $mtkimei[3] & '"' & $imeitext2 & $luhntopass2 & '"' & $mtkimei[2] & "}exit")
						EndIf
						If $respuestawarrior = 1 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayPNF[2] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb reboot", "", @SW_HIDE, $stderr_child + $stdout_child)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayPNF[3] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						ElseIf $respuestawarrior = 3 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayPNF[4] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb reboot", "", @SW_HIDE, $stderr_child + $stdout_child)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayPNF[5] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "130")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayPNF[6] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							$ipid = Run("adb reboot", "", @SW_HIDE, $stderr_child + $stdout_child)
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayPNF[7] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "130")
							refund(GUICtrlRead($Edit1))
							EnableButtons()
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "130")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $Buttonmtkadb
			_GUICtrlEdit_SetText ($Edit1, "")
			SetProcLanDefinitive("mtkunlock" & $indicator)
			Global $precio = ''
			Global $showme2 = CredNoLicense("MTKUnlock", "134")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$imei = IxxxProcess(GUICtrlRead($Edit1))
				Global $dime = IsCreditNedded2("133", $key)
				If $activo == 1 Then
					Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "133")
				EndIf
				If $confirm <> "NO" Then
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2])
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Global $rootcheck = _Android_HasRootAccess()
						If $rootcheck == True Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Global $checkunlock = MTKUnlock()
							If $checkunlock == 1 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							ElseIf $checkunlock == 0 Then
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[5] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "133")
								DeleteRecurrencia($imei & "134")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							Else
								_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[6] & @CRLF)
								_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
								DeleteRecurrencia($imei & "133")
								DeleteRecurrencia($imei & "134")
								refund(GUICtrlRead($Edit1))
								firma()
								AddLog()
								logs()
								EnableButtons()
							EndIf
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[7] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[8] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "133")
							DeleteRecurrencia($imei & "134")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "133")
						DeleteRecurrencia($imei & "134")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				Else
					DeleteRecurrencia($imei & "133")
					DeleteRecurrencia($imei & "134")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
		Case $ButtonUnlockMtk
			_GUICtrlEdit_SetText ($Edit1, "")
			Global $precio = ''
			SetProcLanDefinitive("mtkwunlock" & $indicator)
			Global $showme2 = CredNoLicense("MTKUnlock", "134")
			If StringIsDigit($showme2) == 1 Or $activo == 1 Then
				DisableButtons()
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[1] & @CRLF)
				$pro = GUICtrlRead($Edit1)
				$imei = IxxxProcess(GUICtrlRead($Edit1))
				Global $dime = IsCreditNedded2("133", $key)
				If $activo == 1 Then
					Global $confirm = creditprocess2($dime[0], $imei, $dime[1], "133")
				EndIf
				If $confirm <> "NO" Then
					$dejaver = ReadInfoprocess()
					If $dejaver == 1 then
						Global $checkunlock = MTKUnlockWarrior()
						If $checkunlock == 1 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[2] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						ElseIf $checkunlock == 0 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[3] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "133")
							DeleteRecurrencia($imei & "134")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						ElseIf $checkunlock == 3 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[4] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "133")
							DeleteRecurrencia($imei & "134")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						Else
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPNF[5] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							DeleteRecurrencia($imei & "133")
							DeleteRecurrencia($imei & "134")
							refund(GUICtrlRead($Edit1))
							firma()
							AddLog()
							logs()
							EnableButtons()
						EndIf
					Else
						DeleteRecurrencia($imei & "133")
						DeleteRecurrencia($imei & "134")
						refund(GUICtrlRead($Edit1))
						EnableButtons()
					EndIf
				Else
					DeleteRecurrencia($imei & "133")
					DeleteRecurrencia($imei & "134")
					refund(GUICtrlRead($Edit1))
					EnableButtons()
				EndIf
			ElseIf $showme2 = True Then
				MsgBox(16, "Error", "Operacion Cencelada")
			Else
				MsgBox(16, "Error", "Operacion no permitida sin licencia" & @CRLF & @CRLF & "Operation not allowed without License")
			EndIf
	EndSwitch
WEnd
EndFunc

Func logs()
	Global $create = FileOpen(@ScriptDir & "\Logs\Log_" & @YEAR & @MON & @MDAY & @HOUR & @MIN & ".txt", 2 + 8)
	Global $write = FileWrite($create, GUICtrlRead($Edit1))
EndFunc

Func firma()
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " MC-U Tool v" & $etaelaversion & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
EndFunc

Func checklg()

	Global $lastline = ""
	Global $a = _RegEnumValEx("HKEY_LOCAL_MACHINE\HARDWARE\DEVICEMAP\SERIALCOMM", 256, "*De*ice*")
	If IsArray($a) == 1 Then
		Global $filas1 = UBound($a, $UBOUND_ROWS)
		For $i = 0 to $filas1 - 1
			Global $aExtract = _ArrayExtract($a, $i, $i, 1, 1)
			If StringInStr($aExtract[0], "NDNETDIA") <> 0 Or StringInStr($aExtract[0], "SIDIAG") <> 0 Then
				Global $aExtract = _ArrayExtract($a, $i, $i, 3, 3)
				Return $aExtract[0]
				ExitLoop
			EndIf
		Next
	Else
		$a = _RegEnumKeyEx("HKEY_LOCAL_MACHINE\HARDWARE\DEVICEMAP", 128 + 256, "*", "\De*ice\LG*NDNETDIA*")
		Local $sFilePath = @TempDir & "\Examples.txt"
		_FileWriteFromArray($sFilePath, $a, 1)
		$comm = FileRead($sFilePath)
		Local $aArray = StringSplit($comm, '|', $STR_ENTIRESPLIT)
		Local $sFile = FileOpen(@TempDir & "\com.txt", $FO_OVERWRITE)
		_FileWriteFromArray($sFile, $aArray, 1)
		$iCount = _FileCountLines(@TempDir & "\com.txt")
		$2dalinea = ($iCount - 1)
		$lastSline = FileReadLine(@TempDir & "\com.txt", $2dalinea)
		FileDelete(@TempDir & "\Examples.txt")
		FileDelete(@TempDir & "\com.txt")
		Return $lastSline
	EndIf

EndFunc

Func checkqcomm()

	Global $aa = _RegEnumValEx("HKEY_LOCAL_MACHINE\HARDWARE\DEVICEMAP\SERIALCOMM", 256,"*De*ice*")
	If IsArray($aa) == 1 Then
		Global $aExtract = _ArrayExtract($aa, 1, 1, 3, 3)
		If StringInStr($aExtract[0], "COM") <> 0 Then
			Return $aExtract[0]
		Else
			Return 0
		EndIf
	Else
		Return 0
	EndIf

EndFunc

Func command($command)
	Run(@ComSpec & ' /k ' & $command, '', @SW_HIDE, $stderr_child + $stdout_child)
EndFunc

Func ReadInfo()

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("readinfoes")
		If $checklen == 1 Then
			DownloadLanresource("readinfoes")
			SetLanguageProcess("readinfoes")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("readinfoen")
		If $checklen == 1 Then
			DownloadLanresource("readinfoen")
			SetLanguageProcess("readinfoen")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\IMEI.bat") Then
		FileInstall("IMEI.bat", @ScriptDir & "\IMEI.bat", 1)
     EndIf
	_GUICtrlEdit_SetText ($Edit1, "")
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[22])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $adbserver = Sniff()
	If $adbserver == 1 Then Exit
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[23] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] )
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
    Global $star = TimerInit()
	Do
		$ipid = Run("adb devices", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 Sleep(100)
		 Global $Checkiout = StringRight($soutput, 6)
		 If $Checkiout == "device" Then
			Global $Connect = 1
			ExitLoop
		 Else
		    $Connect = 0
		 EndIf
		 Sleep(100)
	Until TimerDiff($star) > 5000
	If $Connect = 1 Then
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.product.manufacturer", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 ShellExecuteWait("IMEI.bat", "", @ScriptDir, $SHEX_OPEN, @SW_HIDE)
		 $checkimei = FileOpen(@ScriptDir & "\finalimei.txt")
		 $imei = FileRead($checkimei)
		 If StringLen($imei) < 15 Then
			 $imei = 'Error Gathering IMEI'
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & " " & $imei & @CRLF)
			 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & " " & $imei)
		    _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 EndIf
		 $ipid = Run("adb shell getprop ro.build.version.release", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.build.description", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.boot.hardware", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.bootloader", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop gsm.version.baseband", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop gsm.sim.state", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[13] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.build.display.id", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[14] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.build.id", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[15] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.product.locale", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[16] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.build.version.sdk", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[17] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.build.version.security_patch", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[18] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 Sleep (1000)
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[19] & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 Return 1
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[20] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[21] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Return 0
	EndIf
EndFunc

Func ReadInfoSamsung()

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("readinfosames")
		If $checklen == 1 Then
			DownloadLanresource("readinfosames")
			SetLanguageProcess("readinfosames")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("readinfosamen")
		If $checklen == 1 Then
			DownloadLanresource("readinfosamen")
			SetLanguageProcess("readinfosamen")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\IMEI.bat") Then
		FileInstall("IMEI.bat", @ScriptDir & "\IMEI.bat", 1)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[25])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $adbserver = Sniff()
	If $adbserver == 1 Then Exit
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[26] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayP[1] )
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
    Global $star = TimerInit()
	Do
		$ipid = Run("adb devices", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 Sleep(100)
		 Global $Checkiout = StringRight($soutput, 6)
		 If $Checkiout == "device" Then
			Global $Connect = 1
			ExitLoop
		 Else
		    $Connect = 0
		 EndIf
		 Sleep(100)
	Until TimerDiff($star) > 5000
	If $Connect = 1 Then
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayP[2] & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 ShellExecuteWait("IMEI.bat", "", @ScriptDir, $SHEX_OPEN, @SW_HIDE)
		 $checkimei = FileOpen(@ScriptDir & "\finalimei.txt")
		 $imei = FileRead($checkimei)
		 If StringLen($imei) < 15 Then
			 $imei = 'Error gatehring imei'
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & " " & $imei & @CRLF)
			 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & " " & $imei)
		    _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 EndIf
		 $ipid = Run("adb shell getprop ro.build.version.release", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		  If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.product.device", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.hardware", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 $ipid = Run("adb shell getprop ro.product.board ", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $output = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" And $output == "" Then
			 $soutput = 'Not '
			 $output = "Found"
		 EndIf
		 If $soutput == $output Then
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & " " & $soutput & @CRLF)
			 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 Else
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & " " & $soutput & " " & $output & @CRLF)
			 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 EndIf
		 $ipid = Run("adb shell getprop ril.modem.board", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ril.hw_ver", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.boot.bootloader", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutputbl = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 $ipid = Run("adb shell getprop ro.build.PDA", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutputap = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 $ipid = Run("adb shell getprop gsm.version.baseband", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutputcp = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 $ipid = Run("adb shell getprop ril.official_cscver", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutputcsc = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & " " & $soutputbl & "/ " & $soutputap & "/ " & $soutputcp & "/ " & $soutputcsc & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.build.date", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[13] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.csc.country_code", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[14] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.csc.sales_code", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[15] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ril.serialnumber", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[16] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop gsm.sim_state", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[17] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.boot.debug_level", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[18] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.boot.cp_debug_level", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[19] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.boot.warranty_bit", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[20] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop gsm.sim.operator.numeric", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutputnum = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 $ipid = Run("adb shell getprop gsm.sim.operator.alpha", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutputalph = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutputnum == "" And $soutputalph == "" Then
			 $soutputnum = 'Not '
			 $soutputalph = 'Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[21] & " " & $soutputnum & " " & $soutputalph & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop sys.usb.config", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[22] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 Return 1
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[23] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[24] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Return 0
	EndIf
EndFunc

Func detectADB()
	Global $star = TimerInit()
	Do
		$ipid = Run("adb devices", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 Sleep(100)
		 Global $Checkiout = StringRight($soutput, 6)
		 If $Checkiout == "device" Then
			Global $Connect = 1
			ExitLoop
		 Else
		    $Connect = 0
		 EndIf
		 Sleep(100)
	Until TimerDiff($star) > 5000
	Return $Connect
EndFunc

Func ReadInfoprocess()

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("readinfoprocesses")
		If $checklen == 1 Then
			DownloadLanresource("readinfoprocesses")
			SetLanguageProcess("readinfoprocesses")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("readinfoprocessen")
		If $checklen == 1 Then
			DownloadLanresource("readinfoprocessen")
			SetLanguageProcess("readinfoprocessen")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\IMEI.bat") Then
		FileInstall("IMEI.bat", @ScriptDir & "\IMEI.bat", 1)
	 EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[13])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $adbserver = Sniff()
	If $adbserver == 1 Then Exit
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[14] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $star = TimerInit()
	Do
		$ipid = Run("adb devices", "", @SW_HIDE, $stderr_child + $stdout_child)
		ProcessWaitClose($ipid)
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(100)
		Global $Checkiout = StringRight($soutput, 6)
		If $Checkiout == "device" Then
			Global $Connect = 1
			ExitLoop
		Else
		    $Connect = 0
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If $Connect = 1 Then
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.product.brand", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 ShellExecuteWait("IMEI.bat", "", @ScriptDir, $SHEX_OPEN, @SW_HIDE)
		 $checkimei = FileOpen(@ScriptDir & "\finalimei.txt")
		 $imei = FileRead($checkimei)
		 If StringLen($imei) < 15 Then
			 $imei = 'Error gathering IMEI'
			 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & " " & $imei & @CRLF)
			 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & " " & $imei)
		    _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 EndIf
		 $ipid = Run("adb shell getprop ro.build.version.release", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.boot.hardware", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 $ipid = Run("adb shell getprop ro.bootloader", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		  $ipid = Run("adb shell getprop ril.serialnumber", "", @SW_HIDE, $stderr_child + $stdout_child)
		 ProcessWaitClose($ipid)
		 $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		 If $soutput == "" Then
			 $soutput = 'Not Found'
		 EndIf
		 _GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & " " & $soutput & @CRLF)
		 _GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		 Return 1
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & " " & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & " " & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Return 0
	EndIf
EndFunc

Func IxxxProcess($variable)

	Global $imeix = False
	Global $txt = FastbootDetect()
	If $txt == 0 Then
		Global $rootcheck = _Android_HasRootAccess()
		If $rootcheck == "False" Then
			If Not FileExists(@ScriptDir & "\IMEI.bat") Then
				FileInstall("IMEI.bat", @ScriptDir & "\IMEI.bat", 1)
			EndIf
			ShellExecuteWait("IMEI.bat", "", @ScriptDir, $SHEX_OPEN, @SW_HIDE)
			Global $checkimei = FileOpen(@ScriptDir & "\finalimei.txt")
			Global $imei = StringReplace(StringReplace(FileRead($checkimei), " ", ""), @CRLF, "")
			If StringLen($imei) >= 15 And StringIsAlNum($imei) Then
				FileDelete(@ScriptDir & "\finalimei.txt")
				FileDelete(@ScriptDir & "\imei.txt")
				$imeix = True
				Return $imei
			EndIf
		EndIf
		If $rootcheck == "True" Or $imeix == False Then
			$ipid = Run("adb shell getprop gsm.baseband.imei", "", @SW_HIDE, $stderr_child + $stdout_child)
			ProcessWaitClose($ipid)
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If $soutput == "" Then
				Global $imei = ''
				Global $what = StringSplit($variable, @CRLF)
				Global $Rows = UBound($what, $UBOUND_ROWS)
				For $i = 1 to $Rows - 1
					If StringInStr($what[$i], "SN:") <> 0 Or StringInStr($what[$i], "Serial number:") <> 0 And StringInStr($what[$i], "Found") == 0 Then
						Global $imei = StringRight(StringReplace($what[$i], " ", ""), 11)
						Return $imei
						ExitLoop
					EndIf
			Next
				If StringLen($imei) <> 11 Then
					#Region ### START Koda GUI section ### Form=
					Global $IMEIColector = GUICreate("MC-U", 227, 117, -1, -1, BitOR($WS_SYSMENU,$WS_POPUP))
					Global $Group1 = GUICtrlCreateGroup("Type Device IMEI", 8, 8, 209, 65)
					Global $InputImeiProcess = GUICtrlCreateInput("", 24, 32, 177, 21, $ES_NUMBER)
					GUICtrlSetLimit($InputImeiProcess, 15)
					Global $Button1 = GUICtrlCreateButton("OK", 72, 80, 75, 25)
					GUISetState(@SW_SHOW)
					#EndRegion ### END Koda GUI section ##
					While 1
						$nMsg = GUIGetMsg()
						Switch $nMsg
							Case $Button1
								Global $skkk = GUICtrlRead($InputImeiProcess)
								if $skkk <> "" Then
									GUIDelete($IMEIColector)
									ExitLoop
								Else
									MsgBox(64, "MC-U Tool", "Debe introducir el IMEI de su dispositivo!" & @CRLF & @CRLF & "Must Type your device IMEI!")
								EndIf
						EndSwitch
					WEnd
					Return $skkk
				EndIf
			Else
				Return $soutput
			EndIf
		EndIf
	Else
		$imeix = FastbootImei()
		If StringLen($imeix) >= 15 And StringIsAlNum($imeix) Then
			Return $imeix
		Else
			$imeix = False
		EndIf
	EndIf

EndFunc

Func CheckSuccess()
    $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	Global $create = FileOpen(@ScriptDir & "\check.txt", $FC_OVERWRITE)
    Global $write = FileWrite($create, $sOutput)
    $iCount = _FileCountLines(@ScriptDir & "\check.txt")
	$2dalinea = ($iCount - ($iCount - 3))
	$lastSline = FileReadLine(@ScriptDir & "\check.txt", $2dalinea)
Return $lastSline
EndFunc

Func CheckSuccessDownload()
	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	Global $create = FileOpen(@ScriptDir & "\check.txt", $FO_OVERWRITE)
	Global $write = FileWrite($create, $sOutput)
	$iCount = _FileCountLines(@ScriptDir & "\check.txt")
	$7malinea = (($iCount + 7) - $iCount)
	$line = FileReadLine(@ScriptDir & "\check.txt", $7malinea)
	FileDelete(@ScriptDir & "\check.txt")
Return $line
EndFunc

Func LastVersion()

	Global $keyword = 'admin'
	Local $data = 'username=' & urlEncode($keyword)
	Local $request = _httpRequest($ENDPOINT_VERSION, 'POST', $data)
	If $DEBUG_MODE Then _ArrayDisplay($request)
	Local $json = Json_Decode($request[2])
	Local $success = Json_Get($json, '["success"]')
	If $success Then
		Local $version = Json_Get($json, '["data"]["version_actual"]')
		Return($version)
	Else
		_showError('Error Getting Last version: ')
		Return False
	EndIf

EndFunc

Func BetaVersion()

	Global $keyword = 'beta'
	Local $data = 'username=' & urlEncode($keyword)
	Local $request = _httpRequest($ENDPOINT_VERSION, 'POST', $data)
	Local $json = Json_Decode($request[2])
	Local $success = Json_Get($json, '["success"]')
	If $success Then
		Local $version = Json_Get($json, '["data"]["version_actual"]')
		Return($version)
	Else
		_showError('Error Getting Last Beta: ')
		Return False
	EndIf

EndFunc

Func commandwait($command)
	RunWait(@ComSpec & ' /k ' & $command, '', @SW_HIDE, $stderr_child + $stdout_child); add , @SW_HIDE to make things hidden.
EndFunc

Func Description()

	$ipid = Run("adb shell getprop ro.build.description", "", @SW_HIDE, $stderr_child + $stdout_child)
	ProcessWaitClose($ipid)
	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	Return $soutput

EndFunc

Func AddLog()

	Local $data = 'process=' & urlEncode($pro) & _
		'&user=' & urlEncode($username) & _
		'&hwid=' & urlEncode($hardid)

	If $DEBUG_MODE Then
		MsgBox(262144, 'Debug line ~' & @ScriptLineNumber, 'Selection:' & @CRLF & '$data' & @CRLF & @CRLF & 'Return:' & @CRLF & $data)
	EndIf

	Local $request = _httpRequest($ENDPOINT_CREATELOG, 'POST', $data)
	Local $json = Json_Decode($request[2])
	Local $success = Json_Get($json, '["success"]')

	If $DEBUG_MODE Then _ArrayDisplay($request)

EndFunc

Func Recurrencia($imeirecurremce, $proc)

	Local $data = '&user=' & urlEncode($username) & _
		'&imei=' & urlEncode($imeirecurremce) & _
		'&proceso=' & urlEncode($proc)

	If $DEBUG_MODE Then
		MsgBox(262144, 'Debug line ~' & @ScriptLineNumber, 'Selection:' & @CRLF & '$data' & @CRLF & @CRLF & 'Return:' & @CRLF & $data)
	EndIf

	Local $request = _httpRequest($ENDPOINT_RECURRENCIA, 'POST', $data)
	Local $json = Json_Decode($request[2])
	Local $success = Json_Get($json, '["success"]')

EndFunc

Func Recheck($imeirecheck)

	Local $data = '&imei=' & urlEncode($imeirecheck)
	Local $request = _httpRequest($ENDPOINT_CHECKRECURRENCIA, 'POST', $data)
	Local $json = Json_Decode($request[2])
	Local $success = Json_Get($json, '["success"]')
	If $success Then
		Local $user = Json_Get($json, '["data"]["user"]')
		Return $user
	Else
		Return False
	EndIf

	If $DEBUG_MODE Then _ArrayDisplay($request)

EndFunc

Func DeleteRecurrencia($value)

	If StringInStr($value, "nada") == 0 Then
		Local $filter = 'imei'
		Local $data = 'filter=' & urlEncode($filter) & _
				'&value=' & urlEncode($value)

		Local $request = _httpRequest($ENDPOINT_DELETEREC, 'POST', $data)
		Local $json = Json_Decode($request[2])
		Local $success = Json_Get($json, '["success"]')
	EndIf

EndFunc

Func DisableButtons()

	GUICtrlSetState($ComboMotoTools, 128)
	GUICtrlSetState($ComboMotoUnlock, 128)
	GUICtrlSetState($GroupQcomQcn, 128)
	GUICtrlSetState($ButtoneadQCNQc, 128)
	GUICtrlSetState($ButtonriteQCNQC, 128)
	GUICtrlSetState($ButtonReadQCNZTe, 128)
	GUICtrlSetState($ButtonQriteqcnzte, 128)
	GUICtrlSetState($GroupXiaomi, 128)
	GUICtrlSetState($ComboXiaomi, 128)
	GUICtrlSetState($ButtonXiaomi, 128)
	GUICtrlSetState($NVItems, 128)
	GUICtrlSetState($readwrite, 128)
	GUICtrlSetState($rango, 128)
	GUICtrlSetState($RangoStart, 128)
	GUICtrlSetState($guion, 128)
	GUICtrlSetState($ButtonMotoTools, 128)
	GUICtrlSetState($ButtonMotoUnlock, 128)
	GUICtrlSetState($Buttonrootcoolpad, 128)
	GUICtrlSetState($rangofinal, 128)
	GUICtrlSetState($spcqualcom, 128)
	GUICtrlSetState($Inputspc, 128)
	GUICtrlSetState($Buttonleer, 128)
	GUICtrlSetState($Buttonescribir, 128)
	GUICtrlSetState($GroupNVIMEI, 128)
	GUICtrlSetState($Input2, 128)
	GUICtrlSetState($Input3, 128)
	GUICtrlSetState($Buttonluhnqcom, 128)
	GUICtrlSetState($Buttonimieqcom, 128)
	GUICtrlSetState($Buttonmeidqcom, 128)
	GUICtrlSetState($Label2, 128)
	GUICtrlSetState($Inputspcmsl2, 128)
	GUICtrlSetState($Buttonreadinfonv, 128)
	GUICtrlSetState($ButtonReset, 128)
	GUICtrlSetState($ButtonPowerOff, 128)
	GUICtrlSetState($ButtonRebDl, 128)
	GUICtrlSetState($GroupBusqueda, 128)
	GUICtrlSetState($Label1, 128)
	GUICtrlSetState($Search, 128)
	GUICtrlSetState($MEID, 128)
	GUICtrlSetState($LGGrouptools, 128)
	GUICtrlSetState($ComboLGTools, 128)
	GUICtrlSetState($ButtonStartLG, 128)
	GUICtrlSetState($GroupLGSpecial, 128)
	GUICtrlSetState($ComboLGSpecial, 128)
	GUICtrlSetState($ButtonStartLGspecial, 128)
	GUICtrlSetState($Removefrplgdl, 128)
	GUICtrlSetState($ClacLuhnLG, 128)
	GUICtrlSetState($StartIMeifixlg, 128)
	GUICtrlSetState($InputIMEILG, 128)
	GUICtrlSetState($RadioLGFRP, 128)
	GUICtrlSetState($Z835Codes, 128)
	GUICtrlSetState($ZTEcodes, 128)
	GUICtrlSetState($ButtonHuaweimdm, 128)
	GUICtrlSetState($SpecialTools, 128)
	GUICtrlSetState($RadioFRPBypass, 128)
	GUICtrlSetState($ComboSpecialTools, 128)
	GUICtrlSetState($ButtonStartSoecialTools, 128)
	GUICtrlSetState($ComboQcommEDl, 128)
	GUICtrlSetState($ComboZTESideload, 128)
	GUICtrlSetState($ButtonQcommEDL, 128)
	GUICtrlSetState($ButtonFRPSideload, 128)
	GUICtrlSetState($ButtonMoto, 128)
	GUICtrlSetState($ButtonHuaweiSim, 128)
	GUICtrlSetState($ButtonUnlockLG, 128)
	GUICtrlSetState($ComboUnlockLG, 128)
	GUICtrlSetState($n9137root, 128)
	GUICtrlSetState($bladel2, 128)
	GUICtrlSetState($dojob, 128)
	GUICtrlSetState($samsungfrpadb, 128)
	GUICtrlSetState($z981root, 128)
	GUICtrlSetState($rebootedl, 128)
    GUICtrlSetState($Tab1, 128)
    GUICtrlSetState($adb, 128)
	GUICtrlSetState($APNopensettings, 128)
    GUICtrlSetState($rebootsystem, 128)
	GUICtrlSetState($rebootrecovery, 128)
	GUICtrlSetState($ftm2edl, 128)
	GUICtrlSetState($rebootfastboot, 128)
	GUICtrlSetState($rebootdownload, 128)
	GUICtrlSetState($factoryresetadb, 128)
	GUICtrlSetState($factoryresetfastboot, 128)
	GUICtrlSetState($wipeoem, 128)
	GUICtrlSetState($wipesystem, 128)
	GUICtrlSetState($resetgmail, 128)
	GUICtrlSetState($wipepersist, 128)
	GUICtrlSetState($stopsamupdate1, 128)
	GUICtrlSetState($stopsamsungupdate2, 128)
	GUICtrlSetState($stoplgupdate, 128)
    GUICtrlSetState($readinfo, 128)
	GUICtrlSetState($batteycheck, 128)
	GUICtrlSetState($redcheck, 128)
	GUICtrlSetState($rootchecker, 128)
	GUICtrlSetState($htclenguage, 128)
	GUICtrlSetState($huaweilenguage, 128)
	GUICtrlSetState($lenguage, 128)
	GUICtrlSetState($pinadb, 128)
	GUICtrlSetState($removepattern, 128)
	GUICtrlSetState($qcommdiag, 128)
	GUICtrlSetState($frp, 128)
	GUICtrlSetState($frptools, 128)
	GUICtrlSetState($frptools, 128)
	GUICtrlSetState($frpmtkadb, 128)
    GUICtrlSetState($lenovofrp, 128)
    GUICtrlSetState($deepfrp, 128)
	GUICtrlSetState($htcfrp, 128)
	GUICtrlSetState($lgfrpadb, 128)
	GUICtrlSetState($micromaxfrp, 128)
	GUICtrlSetState($Motofrp, 128)
	GUICtrlSetState($alcatelfrp, 128)
	GUICtrlSetState($spdfrpfastboot, 128)
	GUICtrlSetState($start, 128)
	GUICtrlSetState($ZTEFRP, 128)
	GUICtrlSetState($SelectModel, 128)
	GUICtrlSetState($huaweylist, 128)
	GUICtrlSetState($mtpadb, 128)
	GUICtrlSetState($frpremovehuawei, 128)
    GUICtrlSetState($Moto, 128)
	GUICtrlSetState($rootx210, 128)
    GUICtrlSetState($Oneclick, 128)
	GUICtrlSetState($root, 128)
	GUICtrlSetState($samsung, 128)
	GUICtrlSetState($tools, 128)
	GUICtrlSetState($ComboTools, 128)
	GUICtrlSetState($go, 128)
	GUICtrlSetState($GroupNetwork, 128)
	GUICtrlSetState($ComboNetwork, 128)
	GUICtrlSetState($ButtonStartnetwork, 128)
	GUICtrlSetState($Locks, 128)
	GUICtrlSetState($ComboLocks, 128)
	GUICtrlSetState($Buttonstartlocks, 128)
    GUICtrlSetState($GroupRoot, 128)
    GUICtrlSetState($Baseband, 128)
	GUICtrlSetState($Comboroot, 128)
	GUICtrlSetState($Buttonroot, 128)
	GUICtrlSetState($engmodem, 128)
	GUICtrlSetState($engmodemstart, 128)
	GUICtrlSetState($frpdownload, 128)
	GUICtrlSetState($GroupRoot, 128)
	GUICtrlSetState($lggstyloroot, 128)
	GUICtrlSetState($removerexynos, 128)
	GUICtrlSetState($ComboExynos, 128)
	GUICtrlSetState($ComboQcomm, 128)
	GUICtrlSetState($unlocksamsung, 128)
	GUICtrlSetState($unlocksam, 128)
	GUICtrlSetState($ButtonQcomm, 128)
	GUICtrlSetState($process, 128)
    GUICtrlSetState($seleccionar, 128)
	GUICtrlSetState($selectboot, 128)
	GUICtrlSetState($Qcomm, 128)
	GUICtrlSetState($n9560, 128)
	GUICtrlSetState($ftmedl, 128)
	GUICtrlSetState($adbedl, 128)
	GUICtrlSetState($n9137unlock, 128)
	GUICtrlSetState($z982unlock, 128)
	GUICtrlSetState($n9560root, 128)
	GUICtrlSetState($z982sec, 128)
	GUICtrlSetState($coolpad, 128)
	GUICtrlSetState($rebootfastb, 128)
    GUICtrlSetState($modelcheck, 128)
	GUICtrlSetState($miaccount, 128)
	GUICtrlSetState($ButtonLgScreenBypass, 128)
	GUICtrlSetState($codigoxmodelo, 128)
	GUICtrlSetState($fastboot2edl, 128)
	GUICtrlSetState($antirelock, 128)
	GUICtrlSetState($Mediatek, 128)
	GUICtrlSetState($MTK, 128)
	GUICtrlSetState($Group8, 128)
	GUICtrlSetState($Inputmei1mtk, 128)
	GUICtrlSetState($LabelImei1mtk, 128)
	GUICtrlSetState($Inputmtklhun, 128)
	GUICtrlSetState($InputMTKIMEI2, 128)
	GUICtrlSetState($Inputmtklhun2, 128)
	GUICtrlSetState($LabelIMEI2mtk, 128)
	GUICtrlSetState($ButtonrepairADB, 128)
	GUICtrlSetState($ButtonRoo, 128)
	GUICtrlSetState($ButtonRepairImeiMtkCom, 128)
	GUICtrlSetState($ButtonLhunMtk, 128)
	GUICtrlSetState($Buttonmtkadb, 128)
	GUICtrlSetState($ButtonUnlockMtk, 128)

EndFunc

Func DisableButtonsNoLic()

	GUICtrlSetState($Buttonreadinfonv, 128)
	GUICtrlSetState($ButtonReset, 128)
	GUICtrlSetState($ButtonPowerOff, 128)
	GUICtrlSetState($ButtonRebDl, 128)
	GUICtrlSetState($LGGrouptools, 128)
	GUICtrlSetState($ComboLGTools, 128)
	GUICtrlSetState($ButtonStartLG, 128)
	GUICtrlSetState($ButtonMoto, 128)
	GUICtrlSetState($n9137root, 128)
	GUICtrlSetState($bladel2, 128)
	GUICtrlSetState($z981root, 128)
	GUICtrlSetState($rebootedl, 128)
    GUICtrlSetState($adb, 128)
    GUICtrlSetState($rebootsystem, 128)
	GUICtrlSetState($rebootrecovery, 128)
	GUICtrlSetState($ftm2edl, 128)
	GUICtrlSetState($rebootfastboot, 128)
	GUICtrlSetState($rebootdownload, 128)
	GUICtrlSetState($factoryresetadb, 128)
	GUICtrlSetState($factoryresetfastboot, 128)
	GUICtrlSetState($wipeoem, 128)
	GUICtrlSetState($wipesystem, 128)
	GUICtrlSetState($resetgmail, 128)
	GUICtrlSetState($wipepersist, 128)
	GUICtrlSetState($stopsamupdate1, 128)
	GUICtrlSetState($stopsamsungupdate2, 128)
	GUICtrlSetState($stoplgupdate, 128)
    GUICtrlSetState($readinfo, 128)
	GUICtrlSetState($batteycheck, 128)
	GUICtrlSetState($redcheck, 128)
	GUICtrlSetState($rootchecker, 128)
	GUICtrlSetState($htclenguage, 128)
	GUICtrlSetState($huaweilenguage, 128)
	GUICtrlSetState($lenguage, 128)
	GUICtrlSetState($pinadb, 128)
	GUICtrlSetState($removepattern, 128)
	GUICtrlSetState($qcommdiag, 128)
	GUICtrlSetState($frp, 128)
	GUICtrlSetState($huaweylist, 128)
	GUICtrlSetState($mtpadb, 128)
	GUICtrlSetState($frpremovehuawei, 128)
    GUICtrlSetState($Moto, 128)
	GUICtrlSetState($rootx210, 128)
    GUICtrlSetState($Oneclick, 128)
	GUICtrlSetState($root, 128)
	GUICtrlSetState($samsung, 128)
	GUICtrlSetState($tools, 128)
	GUICtrlSetState($ComboTools, 128)
	GUICtrlSetState($go, 128)
    GUICtrlSetState($GroupRoot, 128)
    GUICtrlSetState($Baseband, 128)
	GUICtrlSetState($Comboroot, 128)
	GUICtrlSetState($Buttonroot, 128)
	GUICtrlSetState($engmodem, 128)
	GUICtrlSetState($engmodemstart, 128)
	GUICtrlSetState($frpdownload, 128)
	GUICtrlSetState($GroupRoot, 128)
	GUICtrlSetState($lggstyloroot, 128)
	GUICtrlSetState($removerexynos, 128)
	GUICtrlSetState($ComboExynos, 128)
	GUICtrlSetState($ComboQcomm, 128)
	GUICtrlSetState($ButtonQcomm, 128)
	GUICtrlSetState($process, 128)
    GUICtrlSetState($seleccionar, 128)
	GUICtrlSetState($selectboot, 128)
	GUICtrlSetState($Qcomm, 128)
	GUICtrlSetState($n9560, 128)
	GUICtrlSetState($ftmedl, 128)
	GUICtrlSetState($adbedl, 128)
	GUICtrlSetState($n9137unlock, 128)
	GUICtrlSetState($n9560root, 128)
	GUICtrlSetState($rebootfastb, 128)
    GUICtrlSetState($modelcheck, 128)
	GUICtrlSetState($miaccount, 128)
	GUICtrlSetState($codigoxmodelo, 128)
	GUICtrlSetState($fastboot2edl, 128)
	GUICtrlSetState($antirelock, 128)

EndFunc

Func EnableButtons()

	If $activo == 1 Then
		GUICtrlSetState($Buttonreadinfonv, 64)
		GUICtrlSetState($ButtonReset, 64)
		GUICtrlSetState($ButtonPowerOff, 64)
		GUICtrlSetState($ButtonRebDl, 64)
		GUICtrlSetState($LGGrouptools, 64)
		GUICtrlSetState($ComboLGTools, 64)
		GUICtrlSetState($ButtonStartLG, 64)
		GUICtrlSetState($ButtonMoto, 64)
		GUICtrlSetState($n9137root, 64)
		GUICtrlSetState($bladel2, 64)
		GUICtrlSetState($z981root, 64)
		GUICtrlSetState($rebootedl, 64)
		GUICtrlSetState($adb, 64)
		GUICtrlSetState($rebootsystem, 64)
		GUICtrlSetState($lggstyloroot, 64)
		GUICtrlSetState($rebootrecovery, 64)
		GUICtrlSetState($ftm2edl, 64)
		GUICtrlSetState($rebootfastboot, 64)
		GUICtrlSetState($rebootdownload, 64)
		GUICtrlSetState($factoryresetadb, 64)
		GUICtrlSetState($factoryresetfastboot, 64)
		GUICtrlSetState($wipeoem, 64)
		GUICtrlSetState($wipesystem, 64)
		GUICtrlSetState($resetgmail, 64)
		GUICtrlSetState($wipepersist, 64)
		GUICtrlSetState($stopsamupdate1, 64)
		GUICtrlSetState($stopsamsungupdate2, 64)
		GUICtrlSetState($stoplgupdate, 64)
		GUICtrlSetState($readinfo, 64)
		GUICtrlSetState($batteycheck, 64)
		GUICtrlSetState($redcheck, 64)
		GUICtrlSetState($rootchecker, 64)
		GUICtrlSetState($htclenguage, 64)
		GUICtrlSetState($huaweilenguage, 64)
		GUICtrlSetState($lenguage, 64)
		GUICtrlSetState($pinadb, 64)
		GUICtrlSetState($removepattern, 64)
		GUICtrlSetState($qcommdiag, 64)
		GUICtrlSetState($huaweylist, 64)
		GUICtrlSetState($mtpadb, 64)
		GUICtrlSetState($frpremovehuawei, 64)
		GUICtrlSetState($Moto, 64)
		GUICtrlSetState($rootx210, 64)
		GUICtrlSetState($lggstyloroot, 64)
		GUICtrlSetState($Oneclick, 64)
		GUICtrlSetState($root, 64)
		GUICtrlSetState($samsung, 64)
		GUICtrlSetState($tools, 64)
		GUICtrlSetState($ComboTools, 64)
		GUICtrlSetState($go, 64)
		GUICtrlSetState($GroupRoot, 64)
		GUICtrlSetState($Baseband, 64)
		GUICtrlSetState($Comboroot, 64)
		GUICtrlSetState($Buttonroot, 64)
		GUICtrlSetState($engmodem, 64)
		GUICtrlSetState($engmodemstart, 64)
		GUICtrlSetState($frpdownload, 64)
		GUICtrlSetState($GroupRoot, 64)
		GUICtrlSetState($removerexynos, 64)
		GUICtrlSetState($ComboExynos, 64)
		GUICtrlSetState($ComboQcomm, 64)
		GUICtrlSetState($ButtonQcomm, 64)
		GUICtrlSetState($process, 64)
		GUICtrlSetState($seleccionar, 64)
		GUICtrlSetState($selectboot, 64)
		GUICtrlSetState($Qcomm, 64)
		GUICtrlSetState($n9560, 64)
		GUICtrlSetState($ftmedl, 64)
		GUICtrlSetState($adbedl, 64)
		GUICtrlSetState($n9137unlock, 64)
		GUICtrlSetState($z982unlock, 64)
		GUICtrlSetState($n9560root, 64)
		GUICtrlSetState($rebootfastb, 64)
		GUICtrlSetState($modelcheck, 64)
		GUICtrlSetState($miaccount, 64)
		GUICtrlSetState($codigoxmodelo, 64)
		GUICtrlSetState($fastboot2edl, 64)
		GUICtrlSetState($antirelock, 64)
	EndIf
	GUICtrlSetState($ComboMotoTools, 64)
	GUICtrlSetState($RadioFRPBypass, 64)
	GUICtrlSetState($Buttonmtkadb, 64)
	GUICtrlSetState($ButtonUnlockMtk, 64)
	GUICtrlSetState($GroupQcomQcn, 64)
	GUICtrlSetState($ButtoneadQCNQc, 64)
	GUICtrlSetState($Removefrplgdl, 64)
	GUICtrlSetState($ComboMotoUnlock, 64)
	GUICtrlSetState($ButtonriteQCNQC, 64)
	GUICtrlSetState($ButtonReadQCNZTe, 64)
	GUICtrlSetState($ButtonQriteqcnzte, 64)
	GUICtrlSetState($GroupXiaomi, 64)
	GUICtrlSetState($ComboXiaomi, 64)
	GUICtrlSetState($ButtonXiaomi, 64)
	GUICtrlSetState($NVItems, 64)
	GUICtrlSetState($readwrite, 64)
	GUICtrlSetState($rango, 64)
	GUICtrlSetState($RangoStart, 64)
	GUICtrlSetState($Buttonrootcoolpad, 64)
	GUICtrlSetState($ButtonMotoTools, 64)
	GUICtrlSetState($ButtonMotoUnlock, 64)
	GUICtrlSetState($guion, 64)
	GUICtrlSetState($Tab1, 64)
	GUICtrlSetState($rangofinal, 64)
	GUICtrlSetState($spcqualcom, 64)
	GUICtrlSetState($Inputspc, 64)
	GUICtrlSetState($Buttonleer, 64)
	GUICtrlSetState($Buttonescribir, 64)
	GUICtrlSetState($GroupNVIMEI, 64)
	GUICtrlSetState($Input2, 64)
	GUICtrlSetState($Input3, 64)
	GUICtrlSetState($Buttonluhnqcom, 64)
	GUICtrlSetState($Buttonimieqcom, 64)
	GUICtrlSetState($Buttonmeidqcom, 64)
	GUICtrlSetState($Label2, 64)
	GUICtrlSetState($Inputspcmsl2, 64)
	GUICtrlSetState($GroupBusqueda, 64)
	GUICtrlSetState($Label1, 64)
	GUICtrlSetState($Search, 64)
	GUICtrlSetState($MEID, 64)
	GUICtrlSetState($GroupLGSpecial, 64)
	GUICtrlSetState($ComboLGSpecial, 64)
	GUICtrlSetState($ButtonStartLGspecial, 64)
	GUICtrlSetState($ClacLuhnLG, 64)
	GUICtrlSetState($StartIMeifixlg, 64)
	GUICtrlSetState($InputIMEILG, 64)
	GUICtrlSetState($ButtonLgScreenBypass, 64)
	GUICtrlSetState($Z835Codes, 64)
	GUICtrlSetState($ZTEcodes, 64)
	GUICtrlSetState($ButtonHuaweimdm, 64)
	GUICtrlSetState($SpecialTools, 64)
	GUICtrlSetState($RadioLGFRP, 64)
	GUICtrlSetState($ComboSpecialTools, 64)
	GUICtrlSetState($ButtonStartSoecialTools, 64)
	GUICtrlSetState($ComboQcommEDl, 64)
	GUICtrlSetState($ComboZTESideload, 64)
	GUICtrlSetState($ButtonQcommEDL, 64)
	GUICtrlSetState($ButtonFRPSideload, 64)
	GUICtrlSetState($ButtonHuaweiSim, 64)
	GUICtrlSetState($ButtonUnlockLG, 64)
	GUICtrlSetState($ComboUnlockLG, 64)
	GUICtrlSetState($dojob, 64)
	GUICtrlSetState($samsungfrpadb, 64)
	GUICtrlSetState($APNopensettings, 64)
	GUICtrlSetState($frp, 64)
	GUICtrlSetState($frptools, 64)
	GUICtrlSetState($frpmtkadb, 64)
	GUICtrlSetState($lenovofrp, 64)
	GUICtrlSetState($deepfrp, 64)
	GUICtrlSetState($htcfrp, 64)
	GUICtrlSetState($lgfrpadb, 64)
	GUICtrlSetState($micromaxfrp, 64)
	GUICtrlSetState($Motofrp, 64)
	GUICtrlSetState($alcatelfrp, 64)
	GUICtrlSetState($spdfrpfastboot, 64)
	GUICtrlSetState($start, 64)
	GUICtrlSetState($ZTEFRP, 64)
	GUICtrlSetState($SelectModel, 64)
	GUICtrlSetState($GroupNetwork, 64)
	GUICtrlSetState($ComboNetwork, 64)
	GUICtrlSetState($ButtonStartnetwork, 64)
	GUICtrlSetState($Locks, 64)
	GUICtrlSetState($ComboLocks, 64)
	GUICtrlSetState($Buttonstartlocks, 64)
	GUICtrlSetState($unlocksamsung, 64)
	GUICtrlSetState($unlocksam, 64)
	GUICtrlSetState($z982sec, 64)
	GUICtrlSetState($coolpad, 64)
	GUICtrlSetState($Mediatek, 64)
	GUICtrlSetState($MTK, 64)
	GUICtrlSetState($Group8, 64)
	GUICtrlSetState($Inputmei1mtk, 64)
	GUICtrlSetState($LabelImei1mtk, 64)
	GUICtrlSetState($Inputmtklhun, 64)
	GUICtrlSetState($InputMTKIMEI2, 64)
	GUICtrlSetState($Inputmtklhun2, 64)
	GUICtrlSetState($LabelIMEI2mtk, 64)
	GUICtrlSetState($ButtonrepairADB, 64)
	GUICtrlSetState($ButtonRoo, 64)
	GUICtrlSetState($ButtonRepairImeiMtkCom, 64)
	GUICtrlSetState($ButtonLhunMtk, 64)

EndFunc

Func _webDownloader($sSourceURL, $sTargetName, $sVisibleName, $sTargetDir = @TempDir, $bProgressOff = True, $iEndMsgTime = 2000, $sDownloaderTitle = "Downloader")
	; Declare some general vars
	Local $iMBbytes = 1048576

	; If the target directory doesn't exist -> create the dir
	If Not FileExists($sTargetDir) Then DirCreate($sTargetDir)

	; Get download and target info
	Local $sTargetPath = $sTargetDir & "\" & $sTargetName
	Local $iFileSize = InetGetSize($sSourceURL)
	Local $hFileDownload = InetGet($sSourceURL, $sTargetPath, $INET_LOCALCACHE, $INET_DOWNLOADBACKGROUND)

	; Show progress UI
	ProgressOn($sDownloaderTitle, "Descargando " & $sVisibleName)

	; Keep checking until download completed
	Do
		Sleep(250)

		; Set vars
		Local $iDLPercentage = Round(InetGetInfo($hFileDownload, $INET_DOWNLOADREAD) * 100 / $iFileSize, 0)
		Local $iDLBytes = Round(InetGetInfo($hFileDownload, $INET_DOWNLOADREAD) / $iMBbytes, 2)
		Local $iDLTotalBytes = Round($iFileSize / $iMBbytes, 2)

		; Update progress UI
		If IsNumber($iDLBytes) And $iDLBytes >= 0 Then
			ProgressSet($iDLPercentage, $iDLPercentage & "% - Bajando " & $iDLBytes & " MB de " & $iDLTotalBytes & " MB")
		Else
			ProgressSet(0, "Bajando '" & $sVisibleName & "'")
		EndIf
	Until InetGetInfo($hFileDownload, $INET_DOWNLOADCOMPLETE)

	; If the download was successfull, return the target location
	If InetGetInfo($hFileDownload, $INET_DOWNLOADSUCCESS) Then
		ProgressSet(100, "Descarga '" & $sVisibleName & "' completada")
		If $bProgressOff Then
			Sleep($iEndMsgTime)
			ProgressOff()
		EndIf
		Return $sTargetPath
	; If the download failed, set @error and return False
	Else
		Local $errorCode = InetGetInfo($hFileDownload, $INET_DOWNLOADERROR)
		ProgressSet(0, "Descarga '" & $sVisibleName & "' fallida." & @CRLF & "Error: " & $errorCode)
		If $bProgressOff Then
			Sleep($iEndMsgTime)
			ProgressOff()
		EndIf
		SetError(1, $errorCode, False)
	EndIf
 EndFunc   ;==>_webDownloader

Func GUICtrlCreateStatusBar($gui, $space = 280, $text = 'Developed by MC Team', $copyright = 'MC')
	Local $statusBar = _GUICtrlStatusBar_Create($gui)
	Local $statusBar_PartsWidth[2] = [$space, -1]
	_GUICtrlStatusBar_SetParts($statusBar, $statusBar_PartsWidth)
	_GUICtrlStatusBar_SetText($statusBar, $text, 0)
	_GUICtrlStatusBar_SetText($statusBar, 'Copyright ' & Chr(169) & ' ' & @YEAR & ' ' & $copyright, 1)
	_GUICtrlStatusBar_SetMinHeight($statusBar, 3)
	Return $statusBar
EndFunc

Func GUICtrlCreateStatusBar1($gui, $space = 280, $text = 'Developed by MC Team', $copyright = 'MC')
	Global $licencia = ''
	If $activo == 1 Then
		$licencia = 'Activa'
	Else
		$licencia = 'Inactiva'
	EndIf
	Local $statusBar = _GUICtrlStatusBar_Create($gui)
	Local $statusBar_PartsWidth[2] = [$space, -1]
	_GUICtrlStatusBar_SetParts($statusBar, 5, 175)
	_GUICtrlStatusBar_SetText($statusBar, $text, 0)
	_GUICtrlStatusBar_SetText($statusBar, 'Copyright ' & Chr(169) & ' ' & @YEAR & ' ' & $copyright, 1)
	_GUICtrlStatusBar_SetText($statusBar, 'Usuario: ' & $username, 2)
	_GUICtrlStatusBar_SetText($statusBar, 'Version: ' & $etaelaversion, 3)
	_GUICtrlStatusBar_SetText($statusBar, 'Licencia: ' & $licencia, 4)
	_GUICtrlStatusBar_SetMinHeight($statusBar, 3)
	Return $statusBar
EndFunc

Func Luhn($IMEI1)

        Local $Digit = StringSplit($IMEI1, '')
        Local $one, $two, $three, $four, $five, $six, $seven, $sum
		$one = $Digit[2]*2
		$two = $Digit[4]*2
		$three = $Digit[6]*2
		$four = $Digit[8]*2
		$five = $Digit[10]*2
		$six = $Digit[12]*2
		$seven = $Digit[14]*2
		If StringLen($one) == '2' Then
			Local $one1 = StringSplit($one, '')
			Local $partial1 = $one1[1] + $one1[2]
		Else
		    $partial1 = $one
		EndIf
		If StringLen($two) == '2' Then
			Local $two1 = StringSplit($two, '')
			Local $partial2 = $two1[1] + $two1[2]
		Else
		    $partial2 = $two
		EndIf
		If StringLen($three) == '2' Then
		    Local $three1 = StringSplit($three, '')
			Local $partial3 = $three1[1] + $three1[2]
		Else
		    $partial3 = $three
		EndIf
		If StringLen($four) == '2' Then
			Local $four1 = StringSplit($four, '')
			Local $partial4 = $four1[1] + $four1[2]
		Else
		    $partial4 = $four
		EndIf
		If StringLen($five) == '2' Then
			Local $five1 = StringSplit($five, '')
			Local $partial5 = $five1[1] + $five1[2]
		Else
		    $partial5 = $five
		EndIf
		If StringLen($six) == '2' Then
			Local $six1 = StringSplit($six, '')
			Local $partial6 = $six1[1] + $six1[2]
		Else
		    $partial6 = $six
		EndIf
		If StringLen($seven) == '2' Then
			Local $seven1 = StringSplit($seven, '')
			Local $partial7 = $seven1[1] + $seven1[2]
		Else
		    $partial7 = $seven
		EndIf
		Local $sum = $Digit[1] + $partial1 + $Digit[3] + $partial2 + $Digit[5] + $partial3 + $Digit[7] + $partial4 + $Digit[9] + $partial5 + $Digit[11] + $partial6 + $Digit[13] + $partial7
		Local $number = StringRight($sum, 1)
		Local $luhn = 10 - $number
		If $luhn == '10' Then
			Local $final = '0'
			Return $final
		Else
			 Return $luhn
		EndIf

EndFunc

Func _IsChecked($idControlID)
	Return BitAND(GUICtrlRead($idControlID), $GUI_CHECKED) = $GUI_CHECKED
EndFunc

Func CheckProc($stringtopass)

            Global $str1 = "0x007050e1"
			Global $str2 = "0x0004f0e1"
			Global $str3 = "0x008050e1"
            Global $str4 = "0x008110e1"
            Global $str5 = "0x008120E1"
            Global $str6 = "0x008140e1"
            Global $str7 = "0x0090b0e1"
            Global $str8 = "0x009600e1"
            Global $str9 = "0x009b00e1"
            Global $str10 = "0x008150e1"
            Global $str11 = "0x009610e1"
            Global $str12 = "0x009900e1"
            Global $str13 = "0x000460e1"
            Global $str14 = "0x0006b0e1"
            Global $str15 = "0x008150e1"
            Global $str16 = "0x009690e1"
            Global $str17 = "0x009470e1"
            Global $str18 = "0x0005f0e1"
            Global $str19 = "0x009400e1"
            Global $str20 = "0x007B80E1"
            Global $str21 = "0x008A30E1"
            Global $str22 = "0x0091b0e1"
            Global $str23 = "0x009180e1"
            Global $str24 = "0x008050e2"
            Global $str25 = "0x000560e1"
			Global $str26 = "0x00000010"
            Global $str27 = "0x007b40e1"

		If StringInStr($stringtopass, $str1) <> 0 Or StringInStr($stringtopass, $str26) <> 0 Then
			Return "MSM8916"
		ElseIf StringInStr($stringtopass, $str2) <> 0 Or StringInStr($stringtopass, $str14) <> 0 Then
			Return "MSM8937"
		ElseIf StringInStr($stringtopass, $str3) <> 0 Then
			Return "MSM8926"
		ElseIf StringInStr($stringtopass, $str4) <> 0 Or StringInStr($stringtopass, $str5) <> 0 Or StringInStr($stringtopass, $str10) <> 0 Or StringInStr($stringtopass, $str15) <> 0 Then
			Return "MSM8x10"
		ElseIf StringInStr($stringtopass, $str6) <> 0 Then
			Return "MSM8x12"
		ElseIf StringInStr($stringtopass, $str16) <> 0 Then
			Return "MSM8992"
		ElseIf StringInStr($stringtopass, $str17) <> 0 Or StringInStr($stringtopass, $str18) Then
			Return "MSM8996"
		ElseIf StringInStr($stringtopass, $str19) <> 0 Then
			Return "MSM8994"
		ElseIf StringInStr($stringtopass, $str20) <> 0 Or StringInStr($stringtopass, $str27) <> 0 Then
			Return "MSM8974"
		ElseIf StringInStr($stringtopass, $str21) <> 0 Then
			Return "MSM8930"
		ElseIf StringInStr($stringtopass, $str22) <> 0 Then
			Return "MSM8929"
		ElseIf StringInStr($stringtopass, $str23) <> 0  Then
			Return "MSM8928"
		ElseIf StringInStr($stringtopass, $str24) <> 0 Then
			Return "MSM8926"
		ElseIf StringInStr($stringtopass, $str24) <> 0 Then
			Return "MSM8917"
		ElseIf StringInStr($stringtopass, $str7) <> 0 Then
			Return "MSM8936"
		ElseIf StringInStr($stringtopass, $str13) <> 0 Then
			Return "MSM8953"
		ElseIf StringInStr($stringtopass, $str8) <> 0 Or StringInStr($stringtopass, $str11) <> 0 Then
			Return "MSM8909"
		ElseIf StringInStr($stringtopass, $str12) <> 0 Or StringInStr($stringtopass, $str9) <> 0 Then
			Return "MSM8976"
		Else
			Return "Unknown"
		EndIf

EndFunc

Func CreditAdjust($usuario, $creditnew)

	Local $data = 'username=' & urlEncode($usuario) & _
				'&Creditos=' & urlEncode($creditnew)

	Local $request = _httpRequest($ENDPOINT_CREDIT, 'POST', $data)
	Local $json = Json_Decode($request[2])
	Local $success = Json_Get($json, '["success"]')

EndFunc

Func CreditExistent($usuario)

		Local $data = 'username=' & urlEncode($usuario)
		Local $request = _httpRequest($ENDPOINT_READ, 'POST', $data)
		Local $json = Json_Decode($request[2])
		Local $success = Json_Get($json, '["success"]')
		If $success Then
			Local $creditos = Json_Get($json, '["data"]["Creditos"]')
			Return $creditos
		Else
			$creditos = "Error"
			Return
		EndIf

EndFunc

Func shori($keyword, $llave)

		Local $data = 'username=' & urlEncode($keyword) & _
		'&key=' & urlEncode($llave)
		Local $request = _httpRequest($ENDPOINT_DELIVERCOMMAND, 'POST', $data)
		Local $json = Json_Decode($request[2])
		Local $success = Json_Get($json, '["success"]')
		If $success Then
			Local $shori = Json_Get($json, '["data"]["shori"]')
			Return $shori
		Else
			Return 0
		EndIf

EndFunc

Func _RunWaitGet($sProgram,$nOptions = 0,$sWorkingDir = @SystemDir,$nShowFlag = @SW_SHOW)
    Local $nRunOptFlags = 0,$sStreamOut = "" ; Initialize variables
    ; Determine flags for parent/child interaction
    If BitAND($nOptions,1) Then $nRunOptFlags += $STDOUT_CHILD
    If BitAND($nOptions,2) Then $nRunOptFlags += $STDERR_CHILD
    Local $hRunStream = Run($sProgram,$sWorkingDir,$nShowFlag,$nRunOptFlags) ; Run the process
    If @error Then Return SetError(@error,@extended,0) ; If there was an error code, return it.  Otherwise...
    While 1 ; Loop until the end of the stream, which indicates that the process has closed it (which usually means the process ended)
        If BitAND($nOptions,1) Then ; If user specified to capture STDOUT stream...
            $sStreamOut &= StdoutRead($hRunStream) ; Append new stream contents to existing variable while removing those contents from the stream.
            If @error = 2 And BitAND($nOptions,4) Then ExitLoop ; If stream ended and user specified to return when the stream closes, stop looping.
        EndIf
        If BitAND($nOptions,2) Then ; If user specified to capture STDERR stream...
            $sStreamOut &= StderrRead($hRunStream) ; Append new stream contents to existing variable while removing those contents from the stream.
            If @error = 2 And BitAND($nOptions,4) Then ExitLoop ; If stream ended and user specified to return when the stream closes, stop looping.
        EndIf
        If Not BitAND($nOptions,4) And Not ProcessExists($hRunStream) Then ExitLoop ; If using the default setting and the process ended, stop looping.
        Sleep(100) ; To avoid overloading the CPU
    WEnd
    Return SetError(0,0,$sStreamOut) ; Return the captured contents and @error = 0
EndFunc

Func IsCreditNedded2($id, $llav)
	Global $activo = ""
	Global $shori = ""
    Local $data = 'username=' & urlEncode($username)
	Local $request = _httpRequest($ENDPOINT_READ, 'POST', $data)
	Local $json = Json_Decode($request[2])
	Local $success = Json_Get($json, '["success"]')
	If $success Then
		$activo = Json_Get($json, '["data"]["current_status"]')
	Else
		_showError('Error connecting Server!')
		Return 0
	EndIf
;~ 	If $activo == '1' Then
		Local $data = 'id=' & urlEncode($id) & _
			'&key=' & urlEncode($llav)
		Local $request = _httpRequest($ENDPOINT_DELIVERCOMMANDO, 'POST', $data)
		Local $json = Json_Decode($request[2])
		Local $success = Json_Get($json, '["success"]')
		If $success Then
			Local $shorizo[2]
			$shorizo[0] = Json_Get($json, '["data"]["CreditNeed"]')
			$shorizo[1] = Json_Get($json, '["data"]["username"]')
			Return $shorizo
		EndIf
;~ 	Else
;~ 		_showError('User Not allowed!')
;~ 		Return 0
;~ 	EndIf

EndFunc

Func Cost($Op, $llave)

	Local $data = 'username=' & urlEncode($Op) & _
			'&key=' & urlEncode($llave)
	Local $request = _httpRequest($ENDPOINT_DELIVERCOMMAND, 'POST', $data)
	Local $json = Json_Decode($request[2])
	Local $success = Json_Get($json, '["success"]')
	If $success Then
		Local $shori = Json_Get($json, '["data"]["Cost"]')
		If $shori <> "0" Then
			Global $continuidad = MsgBox(32 + 4, "MCU-Tool", "Esta operacion requiere " &  $shori & " credito/s desea continuar? Si ya realizo este procedimiento al mismo dispositivo no se le cargara nuevamente." & @CRLF & @CRLF & "This operation take " &  $shori & " credit/s, do you wish to continue? If you did this process to this device before wont get charged again.")
				Switch $continuidad
					Case 6
						Return $shori
					Case 7
						Return False
				EndSwitch
		Else
			Return False
		EndIf
	Else
		Return False
	EndIf

EndFunc

Func ButtonSearchClick()

		Local $data = 'username=' & urlEncode($username)
		Local $request = _httpRequest($ENDPOINT_READ, 'POST', $data)
		Local $json = Json_Decode($request[2])
		Local $success = Json_Get($json, '["success"]')
		If $success Then
			Local $user = Json_Get($json, '["data"]["username"]')
			Local $correo = Json_Get($json, '["data"]["email"]')
			Local $hardid = Json_Get($json, '["data"]["hwid"]')
			Local $regdate = Json_Get($json, '["data"]["reg_date"]')
			Local $findate = Json_Get($json, '["data"]["fin_date"]')
			Local $current = Json_Get($json, '["data"]["current_status"]')
			Local $credit = Json_Get($json, '["data"]["Creditos"]')
			Local $ip = Json_Get($json, '["data"]["ip_address"]')
			Local $hwidcounter = Json_Get($json, '["data"]["hwidcounter"]')
			_GUICtrlEdit_SetText($Edit1, "")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Usuario: " & $user & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Correo: " & $correo & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " HWID: " & $hardid & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Fecha de registro: " & $regdate & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Fecha final: " & $findate & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			If $current == "1" Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Licencia: Activa" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Licencia: No Activa" & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Credito: " & $credit & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " IP: " & $ip & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " HWID Counter: " & $hwidcounter & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Else
			MsgBox(16, 'Error', 'Error obteniento datos!')
		EndIf

EndFunc

Func ButtonSamsungSupport($Modelo)

		Local $data = 'Model=' & urlEncode($Modelo)
		Local $request = _httpRequest($ENDPOINT_READSAMSUNG, 'POST', $data)
		Local $json = Json_Decode($request[2])
		Local $success = Json_Get($json, '["success"]')
		If $success Then
			Local $Model = Json_Get($json, '["data"]["Model"]')
			Local $carrier = Json_Get($json, '["data"]["Carrier"]')
			Local $Bits = Json_Get($json, '["data"]["Bits"]')
			Local $Operations = Json_Get($json, '["data"]["Operations"]')
			Local $Methods = Json_Get($json, '["data"]["Methods"]')
			Global $SamArray[5] = [$Model, $carrier, $Bits, $Operations, $Methods]
			Return $SamArray
		Else
			MsgBox(16, 'Error', 'Error obteniento datos!')
		EndIf

EndFunc

Func Password()

    Local $pass = GUICtrlRead($InputpassChange)
	If $pass == "" Then
		MsgBox(64, 'MCU Admin Tool', 'Entre la nueva contrasena' & @CRLF & @CRLF & "Enter new password")
	Else
		Local $data = 'username=' & urlEncode($username) & _
				'&password=' & urlEncode($pass)
		Local $request = _httpRequest($ENDPOINT_PASSWORD, 'POST', $data)
		Local $json = Json_Decode($request[2])
		Local $success = Json_Get($json, '["success"]')
		If $success Then
			MsgBox(64, 'MCU Tool', 'Contrasena cambiada correctamente! Por favor logueese nuevamente' & @CRLF & @CRLF & 'Password change Succesfully! Please Login again!')
			Logout()
			Exit
		EndIf
	EndIf

EndFunc

Func EmailChange()

    Local $email = GUICtrlRead($InputEmail)
	If $email == "" Then
			MsgBox(64, 'MCU Admin Tool', 'Entre el nuevo E-mail que desea asignar' & @CRLF & @CRLF & 'Enter New E-Mail you want to assign' )
	Else
		Local $data = 'username=' & urlEncode($username) & _
				'&email=' & urlEncode($email)
		Local $request = _httpRequest($ENDPOINT_EMAIL, 'POST', $data)
		_ArrayDisplay($request)
		Local $json = Json_Decode($request[2])
		Local $success = Json_Get($json, '["success"]')
		If $success Then
			MsgBox(64, 'MCU Tool', 'E-mail cambiado correctamente' & @CRLF & @CRLF & 'E-mail change Succesfully!')
		Else
			MsgBox(64, 'MCU Tool', 'Error!')
		EndIf
	EndIf
EndFunc

Func hwid()

	Local $hwid = GUICtrlRead($Input1)
	If $hwid == "" Then
			MsgBox(64, 'MCU Admin Tool', 'Entre el nuevo HWID que desea asignar' & @CRLF & @CRLF & 'Enter new HWID you want to assign' )
	Else
		Local $data = 'username=' & urlEncode($username)
		Local $request = _httpRequest($ENDPOINT_READ, 'POST', $data)
		Local $json = Json_Decode($request[2])
		Local $success = Json_Get($json, '["success"]')
		If $success Then
			Local $hwidcounter = Json_Get($json, '["data"]["hwidcounter"]')
			Local $data = 'username=' & urlEncode($username) & _
				'&hwid=' & urlEncode($hwid)
			Local $request = _httpRequest($ENDPOINT_HWID, 'POST', $data)
			Local $json = Json_Decode($request[2])
			Local $success = Json_Get($json, '["success"]')
			If $success Then
				Local $hwidcount = $hwidcounter + 1
				Local $data = 'username=' & urlEncode($username) & _
					'&hwidcounter=' & urlEncode($hwidcount)
				Local $request = _httpRequest($ENDPOINT_HWIDCOUNT, 'POST', $data)
				Local $json = Json_Decode($request[2])
				Local $success = Json_Get($json, '["success"]')
				If $success Then
					MsgBox(64, 'MCU Tool','HWID cambiado correctamente por favor logueese de nuevo' & @CRLF & @CRLF & 'HWID change Succesfully! Please Login again!')
					Logout()
					Exit
				Else
					MsgBox(64, 'MCU Admin Tool', 'Error actualizando contador!' & @CRLF & @CRLF & 'Error updating counter!')
					Return False
				EndIf
			Else
				MsgBox(64, 'MCU Admin Tool', 'Error cambiando HWID!' & @CRLF & @CRLF & 'Error changing HWID!')
				Return False
			EndIf
		Else
			MsgBox(64, 'MCU Admin Tool', 'Error!')
			Return False
		EndIf
	EndIf

EndFunc

Func DeleteG360()

	FileDelete(@ScriptDir & "\1.bat")
	FileDelete(@ScriptDir & "\2.bat")
	FileDelete(@ScriptDir & "\3.bat")
	FileDelete(@ScriptDir & "\Port.bat")
	FileDelete(@ScriptDir & "\G360TDUMPSEC.bat")
	FileDelete(@ScriptDir & "\G530TDUMPSEC.bat")
	FileDelete(@ScriptDir & "\AS.exe")
	FileDelete(@ScriptDir & "\UNLOCKFINAL.bat")
	DirRemove(@ScriptDir & "\TOOLS",$DIR_REMOVE)

EndFunc

Func DeleteTP260()

	FileDelete(@ScriptDir & "\0.exploit")
	FileDelete(@ScriptDir & "\1.exploit")
	FileDelete(@ScriptDir & "\2.exploit")
	FileDelete(@ScriptDir & "\unlock.exe")

EndFunc

Func TendreCreditos($creditorequerido)

	Global $creditosenstock = CreditExistent($username)
	If $creditosenstock >= $creditorequerido Then
		Return True
	Else
		Return False
	EndIf

EndFunc

Func refund($cadena)

	If StringInStr($cadena, "Creditos") <> 0 Or StringInStr($cadena, "Credits") <> 0 Then
		CreditAdjust($username, $creditosenstock)
		If $idiomadelaherramienta == "Espanol" Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Credito refundado!" & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Credit refunded!" & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		EndIf
	EndIf

EndFunc

Func Conection()

Global $iPing = Ping("mcu-tool.com", 500)
	If $iPing Then
		Return True
    ElseIf @error == 1 Then
		MsgBox(16, "MC-U", "Host Offline! Server Error")
		Return False
	ElseIf @error == 2 Then
		MsgBox(16, "MC-U", "Host is unreachable! Server Error")
		Return False
	ElseIf @error == 3 Then
		MsgBox(16, "MC-U", "Bad destination! Server Error")
		Return False
	ElseIf @error == 4 Then
		MsgBox(16, "MC-U", "Unknown Server Error!")
		Return False
	EndIf

EndFunc

Func DeleteM210()

	FileDelete(@ScriptDir & "\D.img")
	FileDelete(@ScriptDir & "\ya")
	FileDelete(@ScriptDir & "\ssin")

EndFunc

Func FastbootImei()

	Global $imei = ''
	If Not FileExists(@TempDir & "\fastbootinfo.bat") Then
		FileInstall("fastbootinfo.bat", @TempDir & "\fastbootinfo.bat", $FC_OVERWRITE)
	EndIf
	If Not FileExists(@TempDir & "\fastboot.exe") Then
		FileInstall("fastboot.exe", @TempDir & "\fastboot.exe", $FC_OVERWRITE)
	EndIf
	$ipid = ShellExecute("fastbootinfo.bat", "", @TempDir, "", @SW_HIDE)
	ProcessWaitClose($ipid)
	If FileExists(@TempDir & "\temp.txt") = 1 Then
		Global $count = _FileCountLines(@TempDir & "\temp.txt")
		For $i = 1 To $count - 1
			Global $newline = StringReplace(FileReadLine(@TempDir & "\temp.txt", $i), "(bootloader) ", " ")
			If StringInStr($newline, "INFO") <> 0 Then
				Global $newline1 = StringReplace($newline, "INFO", " ")
			Else
				Global $newline1 = $newline
			EndIf
			If StringInStr($newline, "imei:") <> 0 Then
				$imei = StringReplace(StringReplace($newline1, "imei:", ""), " ", "")
				Return $imei
				Sleep(100)
			EndIf
		Next
		FileDelete(@TempDir & "\temp.txt")
		FileDelete(@TempDir & "\fastbootinfo.bat")
	Else
		FileDelete(@TempDir & "\fastbootinfo.bat")
		FileDelete(@TempDir & "\fastboot.exe")
	EndIf

EndFunc

Func FastbootReadInfo()

	If Not FileExists(@TempDir & "\fastbootinfo.bat") Then
		FileInstall("fastbootinfo.bat", @TempDir & "\fastbootinfo.bat", $FC_OVERWRITE)
	EndIf
	If Not FileExists(@TempDir & "\fastboot.exe") Then
		FileInstall("fastboot.exe", @TempDir & "\fastboot.exe", $FC_OVERWRITE)
	EndIf
	$ipid = ShellExecute("fastbootinfo.bat", "", @TempDir, "", @SW_HIDE)
	ProcessWaitClose($ipid)
	If FileExists(@TempDir & "\temp.txt") = 1 Then
		Global $count = _FileCountLines(@TempDir & "\temp.txt")
		For $i = 1 To $count - 1
			Global $newline = StringReplace(FileReadLine(@TempDir & "\temp.txt", $i), "(bootloader) ", " ")
			If StringInStr($newline, "INFO") <> 0 Then
				Global $newline1 = StringReplace($newline, "INFO", " ")
			Else
				Global $newline1 = $newline
			EndIf
			If StringInStr($newline, "version-bootloader:") <> 0 Or StringInStr($newline, "product:") <> 0 Or StringInStr($newline, "board:") <> 0 Or StringInStr($newline, "storage-type:") <> 0 Or StringInStr($newline, "emmc:") <> 0 Or StringInStr($newline, "ram:") <> 0 Or StringInStr($newline, "cpu:") <> 0 Or StringInStr($newline, "serialno:") <> 0 Or StringInStr($newline, "cid:") <> 0 Or StringInStr($newline, "securestate:") <> 0 Or StringInStr($newline, "iswarrantyvoid:") <> 0 Or StringInStr($newline, "imei:") <> 0 Or StringInStr($newline, "meid:") <> 0 Or StringInStr($newline, "date:") <> 0 Or StringInStr($newline, "sku:") <> 0 Or StringInStr($newline, "carrier_sku:") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $newline1 & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Sleep(100)
			EndIf
			If StringInStr($newline, "ro.build.fingerprint[0]:") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & "ro.build.fingerprint: ")
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & StringReplace($newline1, "ro.build.fingerprint[0]: ", "") )
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
			If StringInStr($newline, "ro.build.fingerprint[1]:") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & StringReplace($newline1, "ro.build.fingerprint[1]: ", "") )
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
			If StringInStr($newline, "ro.build.fingerprint[2]:") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & StringReplace($newline1, "ro.build.fingerprint[2]: ", "") & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
		Next
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		FileDelete(@TempDir & "\temp.txt")
		FileDelete(@TempDir & "\fastbootinfo.bat")
	Else
		FileDelete(@TempDir & "\fastbootinfo.bat")
		FileDelete(@TempDir & "\fastboot.exe")
	EndIf

EndFunc

Func FastbootDetect()

	If Not FileExists(@TempDir & "\fastbootdevices.bat") Then
		FileInstall("fastbootdevices.bat", @TempDir & "\fastbootdevices.bat", $FC_OVERWRITE)
	EndIf
	If Not FileExists(@TempDir & "\fastboot.exe") Then
		FileInstall("fastboot.exe", @TempDir & "\fastboot.exe", $FC_OVERWRITE)
	EndIf
	$ipid = ShellExecute("fastbootdevices.bat","", @TempDir, "", @SW_HIDE)
	ProcessWaitClose($ipid)
	Sleep(500)
	If FileExists(@TempDir & "\device.txt") Then
		Global $fastbootdetect = FileRead(@TempDir & "\device.txt")
		If StringInStr($fastbootdetect, "fastboot") <> 0 Then
			Global $returndevice = StringReplace(StringReplace(StringReplace($fastbootdetect, "fastboot", ""), " ", ""), @CRLF, "")
			FileDelete(@TempDir & "\device.txt")
			FileDelete(@TempDir & "\fastbootdevices.bat")
			FileDelete(@TempDir & "\fastboot.exe")
			Return $returndevice
		Else
			FileDelete(@TempDir & "\device.txt")
			FileDelete(@TempDir & "\fastbootdevices.bat")
			FileDelete(@TempDir & "\fastboot.exe")
			Return 0
		EndIf
	Else
		FileDelete(@TempDir & "\fastbootdevices.bat")
		FileDelete(@TempDir & "\fastboot.exe")
		Return 0
	EndIf

EndFunc

Func XiaomiFastbootInfo()

	If Not FileExists(@TempDir & "\fastbootinfo.bat") Then
		FileInstall("fastbootinfo.bat", @TempDir & "\fastbootinfo.bat", $FC_OVERWRITE)
	EndIf
	If Not FileExists(@TempDir & "\fastboot.exe") Then
		FileInstall("fastboot.exe", @TempDir & "\fastboot.exe", $FC_OVERWRITE)
	EndIf
	$ipid = ShellExecute("fastbootinfo.bat", "", @TempDir, "", @SW_HIDE)
	ProcessWaitClose($ipid)
	If FileExists(@TempDir & "\temp.txt") = 1 Then
		Global $countlines = _FileCountLines(@TempDir & "\temp.txt")
		For $i = 1 To $countlines
			Global $newline = StringReplace(FileReadLine(@TempDir & "\temp.txt", $i), "(bootloader) ", " ")
			If StringInStr($newline, "INFO") <> 0 Then
				Global $newline1 = StringReplace($newline, "INFO", " ")
			Else
				Global $newline1 = $newline
			EndIf
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $newline1 & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Sleep(100)
		Next
		FileDelete(@TempDir & "\temp.txt")
		FileDelete(@TempDir & "\fastbootinfo.bat")
	Else
		FileDelete(@TempDir & "\fastbootinfo.bat")
		FileDelete(@TempDir & "\fastboot.exe")
	EndIf

EndFunc

Func ReadCodesZ835($imei, $key)

	Local $data = 'imeizte=' & urlEncode($imei) & _
			'&key=' & urlEncode($key)
	Local $request = _httpRequest($ENDPOINT_ZTEZ835, 'POST', $data)
	Local $json = Json_Decode($request[2])
	Local $success = Json_Get($json, '["success"]')
	If $success Then
		Local $code = Json_Get($json, '["data"]["Unlock code"]')
		Return $code
	Else
		Return 0
	EndIf

EndFunc

Func ReadCodesZTEMX($imei, $key)

	Local $data = 'imeiztemx=' & urlEncode($imei)  & _
			'&key=' & urlEncode($key)
	Local $request = _httpRequest($ENDPOINT_ZTEMX, 'POST', $data)
	Local $json = Json_Decode($request[2])
	Local $success = Json_Get($json, '["success"]')
	If $success Then
		Local $code = Json_Get($json, '["data"]["Unlock code"]')
		Local $model = Json_Get($json, '["data"]["MODELO"]')
		Return $code & ","  & $model
	Else
		Return 0
	EndIf

EndFunc

Func deletefrplg()

	FileDelete(@ScriptDir & "\ne")
	FileDelete(@ScriptDir & "\nz")
	FileDelete(@ScriptDir & "\te")
	FileDelete(@ScriptDir & "\vb")
	FileDelete(@ScriptDir & "\leave")
	FileDelete(@ScriptDir & "\Send_Command.exe")
	FileDelete(@ScriptDir & "\cat.exe")

EndFunc

Func WrongKey($imeizte)

	If $idiomadelaherramienta == "Espanol" Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Wrong Key" & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Llave incorrecta" & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	EndIf
	refund(GUICtrlRead($Edit1))
	DeleteRecurrencia($imeizte)
	firma()
	EnableButtons()

EndFunc

Func WrongKeyNoCred()

	If $idiomadelaherramienta == "Espanol" Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Wrong Key" & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Llave incorrecta" & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	EndIf
	firma()
	EnableButtons()

EndFunc

Func Error0002($imeizte)

	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 0002" & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	refund(GUICtrlRead($Edit1))
	DeleteRecurrencia($imeizte)
	firma()
	EnableButtons()

EndFunc

Func Error0002NoCred()

	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Error 0002" & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	firma()
	EnableButtons()

EndFunc

Func BootComplete()

	Global $star = TimerInit()
	Do
		Global $ipid = Run("adb shell getprop sys.boot_completed", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
		Sleep(100)
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "1") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 10000

EndFunc

Func ReadInfoLG()

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("readinfolgdles")
		If $checklen == 1 Then
			DownloadLanresource("readinfolgdles")
			SetLanguageProcess("readinfolgdles")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("readinfolgdlen")
		If $checklen == 1 Then
			DownloadLanresource("readinfolgdlen")
			SetLanguageProcess("readinfolgdlen")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\t35.exe") Then
		FileInstall("t35.exe", @ScriptDir & "\t35.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("t35.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until StringInStr($soutput, "No") <> 0 Or StringInStr($soutput, "Wrong") <> 0 Or StringInStr($soutput, "COM") <> 0
	If StringInStr($soutput, "No") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	ElseIf StringInStr($soutput, "Wrong") == 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		ProcessWaitClose($ipid)
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "ok") <> 0 Then
			Global $datarray = StringSplit($soutput, @LF)
			If @error Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4]  & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Else
				Global $Rows = UBound($datarray, $UBOUND_ROWS)
				For $i = 1 to $Rows
					If StringInStr($datarray[$i], "Model") <> 0 Or StringInStr($datarray[$i], "Android") <> 0 Or StringInStr($datarray[$i], "REV") <> 0 Or StringInStr($datarray[$i], "IMEI") <> 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $datarray[$i] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						If StringInStr($datarray[$i], "REV") <> 0 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						EndIf
						Sleep(100)
						If StringInStr($datarray[$i], "IMEI") <> 0 Then
							ExitLoop
						EndIf
					ElseIf StringInStr($datarray[$i], "Finish ok") <> 0 Then
						ExitLoop
					EndIf
				Next
;~ 				DeleteExes()
				Return 1
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 0
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func WipeSec2()

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("lgwipedles")
		If $checklen == 1 Then
			DownloadLanresource("lgwipedles")
			SetLanguageProcess("lgwipedles")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("lgwipedlen")
		If $checklen == 1 Then
			DownloadLanresource("lgwipedlen")
			SetLanguageProcess("lgwipedlen")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\Twipe.exe") Then
		FileInstall("Twipe.exe", @ScriptDir & "\Twipe.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("Twipe.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until StringInStr($soutput, "No") <> 0 Or StringInStr($soutput, "COM") <> 0 Or StringInStr($soutput, "Wrong") <> 0
	If StringInStr($soutput, "No") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	ElseIf StringInStr($soutput, "Wrong") == 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "opened") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 5000
		If StringInStr($soutput, "opened") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Sleep(1000)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "Listo!") <> 0 Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 120000
			If StringInStr($soutput, "Listo!") <> 0 Then
				DeleteExes()
				Return 1
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				DeleteExes()
				Return 0
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 2
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 3
	EndIf

EndFunc

Func HiddenM($commt)

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("hiddenmes")
		If $checklen == 1 Then
			DownloadLanresource("hiddenmes")
			SetLanguageProcess("hiddenmes")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("hiddenmen")
		If $checklen == 1 Then
			DownloadLanresource("hiddenmen")
			SetLanguageProcess("hiddenmen")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\Thidden.exe") Then
		FileInstall("Thidden.exe", @ScriptDir & "\Thidden.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("Thidden.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until StringInStr($soutput, "Iniciando") <> 0 Or StringInStr($soutput, "Wrong") <> 0
	If StringInStr($soutput, "Wrong") == 0 Then
		StdinWrite($ipid, $commt & @LF )
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "opened") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 5000
		If StringInStr($soutput, "opened") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Sleep(1000)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "Listo!") <> 0 Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 5000
			If StringInStr($soutput, "Listo!") <> 0 Then
				DeleteExes()
				Return 1
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				DeleteExes()
				Return 0
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 2
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 3
	EndIf

EndFunc

Func PayjoyMDM()

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("payjosides")
		If $checklen == 1 Then
			DownloadLanresource("payjosides")
			SetLanguageProcess("payjosides")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("payjosiden")
		If $checklen == 1 Then
			DownloadLanresource("payjosiden")
			SetLanguageProcess("payjosiden")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\Tside.exe") Then
		FileInstall("Tside.exe", @ScriptDir & "\Tside.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("Tside.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until StringInStr($soutput, "Iniciando") <> 0 Or StringInStr($soutput, "Wrong") <> 0
	If StringInStr($soutput, "Wrong") == 0 Then
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "Total xfer: 1.00x") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 15000
		If StringInStr($soutput, "Total xfer: 1.00x") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 0
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 1
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func Met1()

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("payjosides")
		If $checklen == 1 Then
			DownloadLanresource("payjosides")
			SetLanguageProcess("payjosides")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("payjosiden")
		If $checklen == 1 Then
			DownloadLanresource("payjosiden")
			SetLanguageProcess("payjosiden")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\Tmet1.exe") Then
		FileInstall("Tmet1.exe", @ScriptDir & "\Tmet1.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("Tmet1.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until StringInStr($soutput, "Iniciando") <> 0 Or StringInStr($soutput, "Wrong") <> 0
	If StringInStr($soutput, "Wrong") == 0 Then
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "Total xfer: 1.00x") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 15000
		If StringInStr($soutput, "Total xfer: 1.00x") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 0
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 1
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func Met2()

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("payjosides")
		If $checklen == 1 Then
			DownloadLanresource("payjosides")
			SetLanguageProcess("payjosides")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("payjosiden")
		If $checklen == 1 Then
			DownloadLanresource("payjosiden")
			SetLanguageProcess("payjosiden")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\Tmet2.exe") Then
		FileInstall("Tmet2.exe", @ScriptDir & "\Tmet2.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("Tmet2.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until StringInStr($soutput, "Iniciando") <> 0 Or StringInStr($soutput, "Wrong") <> 0
	If StringInStr($soutput, "Wrong") == 0 Then
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "Total xfer: 1.00x") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 15000
		If StringInStr($soutput, "Total xfer: 1.00x") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 0
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 1
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func FRPLGDL()

	Global $markersuccess = 0
	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("lgfrpdles")
		If $checklen == 1 Then
			DownloadLanresource("lgfrpdles")
			SetLanguageProcess("lgfrpdles")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("lgfrpdlen")
		If $checklen == 1 Then
			DownloadLanresource("lgfrpdlen")
			SetLanguageProcess("lgfrpdlen")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\t37.exe") Then
		FileInstall("t37.exe", @ScriptDir & "\t37.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("t37.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Wrong Key") <> 0 Then
			ExitLoop
		ElseIf StringInStr($soutput, "Eliminando Cuenta FRP") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Eliminando Cuenta FRP...") == 0 and StringInStr($soutput, "Wrong Key") == 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	ElseIf StringInStr($soutput, "Wrong Key") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Sleep(500)
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "Done") <> 0 Then
				ExitLoop
			ElseIf StringInStr($soutput, "Terminando") <> 0 Then
				Global $markersuccess = 1
			EndIf
			If $soutput <> "" And StringInStr($soutput, "Done") == 0 And StringInStr($soutput, "OK") == 0 And StringInStr($soutput, "Fallido") == 0 And StringInStr($soutput, "Reiniciando") == 0 And StringInStr($soutput, "Reseteo") == 0 And StringInStr($soutput, "Iniciando") == 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ElseIf StringInStr($soutput, "Reiniciando") <> 0 Or StringInStr($soutput, "Reseteo") <> 0 Or StringInStr($soutput, "Terminando") <> 0 And StringInStr($soutput, "Done") == 0  Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ElseIf StringInStr($soutput, "Iniciando") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ElseIf StringInStr($soutput, "Okey") <> 0 or StringInStr($soutput, "Fallido") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput  & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
		Until StringInStr($soutput, "Done") <> 0
		DeleteExes()
		If $markersuccess = 1 Then
			Return 1
		Else
			Return 0
		EndIf
	EndIf

EndFunc

Func LGSPRDL()

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("lgsprdles")
		If $checklen == 1 Then
			DownloadLanresource("lgsprdles")
			SetLanguageProcess("lgsprdles")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("lgsprdlen")
		If $checklen == 1 Then
			DownloadLanresource("lgsprdlen")
			SetLanguageProcess("lgsprdlen")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\t45.exe") Then
		FileInstall("t45.exe", @ScriptDir & "\t45.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("t45.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Desbloqueando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Desbloqueando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If $soutput <> "" Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
		Until StringInStr($soutput, "Proceso terminado!") <> 0
		DeleteExes()
	Else
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If $soutput <> "" Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
		Until StringInStr($soutput, "Proceso terminado!") <> 0
		DeleteExes()
	EndIf

EndFunc

Func LGREBDL()

	If $idiomadelaherramienta == "Espanol" Then
		Global $checkle = " Detectando LG USB Mobile Serial Port..."
	Else
		Global $checkle = " Detecting LG USB Mobile Serial Port..."
	EndIf
	If Not FileExists(@ScriptDir & "\t36.exe") Then
		FileInstall("t36.exe", @ScriptDir & "\t36.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("t36.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $checkle)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until StringInStr($soutput, "No") <> 0 Or StringInStr($soutput, "Wrong") <> 0 Or StringInStr($soutput, "COM") <> 0 Or StringInStr($soutput, "Fail") <> 0
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If $soutput <> "" and StringInStr($soutput, "OK") == 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		ElseIf StringInStr($soutput, "OK") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		EndIf
	Until StringInStr($soutput, "Proceso Terminado") <> 0
	DeleteExes()

EndFunc

Func MeidLG($spc, $meidin)

	If $idiomadelaherramienta == "Espanol" Then
		Global $checkle = " Mandando clave..."
	Else
		Global $checkle = " Sending Key..."
	EndIf
	If Not FileExists(@ScriptDir & "\t33.exe") Then
		FileInstall("t33.exe", @ScriptDir & "\t33.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("t33.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $checkle)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Desbloqueando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Desbloqueando") <> 0 Then
		StdinWrite($ipid, $spc & @LF )
		Sleep(1000)
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If $soutput <> "" Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
		Until StringInStr($soutput, "Inicializando datos") <> 0
		StdinWrite($ipid, $meidin & @LF )
		Sleep(1000)
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If $soutput <> "" Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
		Until StringInStr($soutput, "Proceso terminado") <> 0
		DeleteExes()
		Return 1
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func SPCLGADB()

	Global $ejec = IsCreditNedded2("6", $key)
	Global $var = shori($ejec[1], $key)
	If $var == 0 Then
		Return 0
	Else
		MsgBox(65, "MCU Tool", "Por favor marque ##3424#, ahora haga click en Aceptar para continuar" & @CRLF & @CRLF & "Please deal ##3424#, now click OK in softwrae to continue")
		$ipid = Run('adb wait-for-device', "", @SW_HIDE)
		ProcessWaitClose($ipid)
		$ipid = Run($var, "", @SW_HIDE, $stderr_child + $stdout_child)
		ProcessWaitClose($ipid)
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "< OEM_HOOK_RAW") <> 0 Then
			Global $spcarray = StringSplit($soutput, "< OEM_HOOK_RAW")
			If @error Then
				Return 2
			Else
				Global $iRows = UBound($spcarray, $UBOUND_ROWS)
				For $i = 1 to $iRows
					If StringInStr($spcarray[$i], "[") <> 0 Then
						Global $comparative = StringReplace($spcarray[$i], "[", "")
						Global $comparative2 = StringSplit($comparative, "]")
						If @error Then ExitLoop
						Global $comparative3 = StringReplace($comparative2[1], " ", "")
						If StringLen($comparative3) == 20 And StringIsDigit($comparative3) == 1 Then
							Global $comparative4 = StringTrimLeft($comparative3, 9)
							Global $spclg = StringSplit($comparative4, "")
							If @error Then ExitLoop
							Global $spclgfinal = $spclg[1] & $spclg[3] & $spclg[5] & $spclg[7] & $spclg[9] & $spclg[11]
							ExitLoop
						EndIf
					EndIf
				Next
				If $spclgfinal <> "" Then
					Return $spclgfinal
				Else
					Return 3
				EndIf
			EndIf
		Else
			Return 1
		EndIf
	EndIf

EndFunc

Func ReadSecLG()

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("readseclges")
		If $checklen == 1 Then
			DownloadLanresource("readseclges")
			SetLanguageProcess("readseclges")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("readseclgen")
		If $checklen == 1 Then
			DownloadLanresource("readseclgen")
			SetLanguageProcess("readseclgen")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\t39.exe") Then
		FileInstall("t39.exe", @ScriptDir & "\t39.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("t39.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Inicio") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Inicio") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "envio de bytes") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ElseIf $soutput <> "" Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
		Until StringInStr($soutput, "Chequeando lectura") <> 0
		DeleteExes()
		Return 1
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func WipeSecLG()

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("readseclges")
		If $checklen == 1 Then
			DownloadLanresource("readseclges")
			SetLanguageProcess("readseclges")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("readseclgen")
		If $checklen == 1 Then
			DownloadLanresource("readseclgen")
			SetLanguageProcess("readseclgen")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\t38.exe") Then
		FileInstall("t38.exe", @ScriptDir & "\t38.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("t38.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Iniciando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Iniciando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "envio de bytes") <> 0 or StringInStr($soutput, "High") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ElseIf $soutput <> "" Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
		Until StringInStr($soutput, "Reiniciando") <> 0
		DeleteExes()
		Return 1
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf


EndFunc

Func Rebot2normaLG()

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("downloadtonormales")
		If $checklen == 1 Then
			DownloadLanresource("downloadtonormales")
			SetLanguageProcess("downloadtonormales")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("downloadtonormalen")
		If $checklen == 1 Then
			DownloadLanresource("downloadtonormalen")
			SetLanguageProcess("downloadtonormalen")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\Treset.exe") Then
		FileInstall("Treset.exe", @ScriptDir & "\Treset.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("Treset.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	$pro = GUICtrlRead($Edit1)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Iniciando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Iniciando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3])
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "[") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Do
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					Sleep(100)
				Until StringInStr($soutput, "Done") <> 0
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ElseIf StringInStr($soutput, "Fail") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
		Until StringInStr($soutput, "Listo") <> 0 or StringInStr($soutput, "Fail") <> 0
		DeleteExes()
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
	EndIf

EndFunc

Func UnlockOld($commselected)

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("unlockoldes")
		If $checklen == 1 Then
			DownloadLanresource("unlockoldes")
			SetLanguageProcess("unlockoldes")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("unlockolden")
		If $checklen == 1 Then
			DownloadLanresource("unlockolden")
			SetLanguageProcess("unlockolden")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\Tunlock.exe") Then
		FileInstall("Tunlock.exe", @ScriptDir & "\Tunlock.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("Tunlock.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until StringInStr($soutput, "Wrong") <> 0 Or StringInStr($soutput, "Iniciando") <> 0
	If StringInStr($soutput, "Wrong") == 0 Then
		StdinWrite($ipid, $commselected & @LF )
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "opened") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 5000
		If StringInStr($soutput, "opened") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Sleep(1000)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "Listo!") <> 0 Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 180000
			If StringInStr($soutput, "Listo!") <> 0 Then
				DeleteExes()
				Return 1
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				DeleteExes()
				Return 0
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 2
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 3
	EndIf

EndFunc

Func MSLQC($commselected)

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("mslqces")
		If $checklen == 1 Then
			DownloadLanresource("mslqces")
			SetLanguageProcess("mslqces")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("mslqcen")
		If $checklen == 1 Then
			DownloadLanresource("mslqcen")
			SetLanguageProcess("mslqcen")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\Tmsl.exe") Then
		FileInstall("Tmsl.exe", @ScriptDir & "\Tmsl.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("Tmsl.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until StringInStr($soutput, "Wrong") <> 0 Or StringInStr($soutput, "Iniciando") <> 0
	If StringInStr($soutput, "Wrong") == 0 Then
		StdinWrite($ipid, $commselected & @LF )
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "opened") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 5000
		If StringInStr($soutput, "opened") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Sleep(1000)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "Listo!") <> 0 Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 180000
			If StringInStr($soutput, "Listo!") <> 0 Then
				DeleteExes()
				Return 1
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				DeleteExes()
				Return 0
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 2
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 3
	EndIf

EndFunc

Func WriteSecLG($path)

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("readseclges")
		If $checklen == 1 Then
			DownloadLanresource("readseclges")
			SetLanguageProcess("readseclges")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("readseclgen")
		If $checklen == 1 Then
			DownloadLanresource("readseclgen")
			SetLanguageProcess("readseclgen")
		EndIf
	EndIf
	If Not FileExists(@ScriptDir & "\t40.exe") Then
		FileInstall("t40.exe", @ScriptDir & "\t40.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("t40.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Iniciando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Iniciando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		StdinWrite($ipid, $path & @LF )
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "bytes") <> 0 or StringInStr($soutput, "Escribiendo") <> 0 or StringInStr($soutput, "Terminando") <> 0 or StringInStr($soutput, "Chequeando") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ElseIf $soutput <> "" Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
		Until StringInStr($soutput, "Reiniciando") <> 0
		DeleteExes()
		Return 1
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func Secguardados()

	Global $iResult = ""
	Local $hSearch = FileFindFirstFile(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\" & "*.sec")
	If $hSearch = -1 Then
		Return $iResult
	Else
		Local $sFileName = ""
		Local $aArray_Base[2] = ["", ""]
		Local $aArray = $aArray_Base
		For $i = 0 To 1000
			$sFileName = FileFindNextFile($hSearch)
			If @error Then ExitLoop
			_ArrayInsert($aArray,$i,$sFileName)
		Next
		$iResult = _ArrayToString($aArray, "|")
		Return $iResult
	EndIf

EndFunc

Func SecguardadosFRP()

	Global $iResult = ""
	Local $hSearch = FileFindFirstFile(@MyDocumentsDir & "\Backup_MCU\FRP_SEC\" & "*.mcu")
	If $hSearch = -1 Then
		Return $iResult
	Else
		Local $sFileName = ""
		Local $aArray_Base[2] = ["", ""]
		Local $aArray = $aArray_Base
		For $i = 0 To 1000
			$sFileName = FileFindNextFile($hSearch)
			If @error Then ExitLoop
			_ArrayInsert($aArray,$i,$sFileName)
		Next
		$iResult = _ArrayToString($aArray, "|")
		Return $iResult
	EndIf

EndFunc

Func SecguardadosDATA()

	Global $iResult = ""
	Local $hSearch = FileFindFirstFile(@MyDocumentsDir & "\Backup_MCU\DATA_SEC\" & "*.mcu")
	If $hSearch = -1 Then
		Return $iResult
	Else
		Local $sFileName = ""
		Local $aArray_Base[2] = ["", ""]
		Local $aArray = $aArray_Base
		For $i = 0 To 1000
			$sFileName = FileFindNextFile($hSearch)
			If @error Then ExitLoop
			_ArrayInsert($aArray,$i,$sFileName)
		Next
		$iResult = _ArrayToString($aArray, "|")
		Return $iResult
	EndIf

EndFunc

Func SecguardadosMetroUnlock()

	Global $iResult = ""
	Local $hSearch = FileFindFirstFile(@MyDocumentsDir & "\Backup_MCU\LG_SEC\" & "*.mcu")
	If $hSearch = -1 Then
		Return $iResult
	Else
		Local $sFileName = ""
		Local $aArray_Base[2] = ["", ""]
		Local $aArray = $aArray_Base
		For $i = 0 To 1000
			$sFileName = FileFindNextFile($hSearch)
			If @error Then ExitLoop
			_ArrayInsert($aArray,$i,$sFileName)
		Next
		$iResult = _ArrayToString($aArray, "|")
		Return $iResult
	EndIf

EndFunc

Func SecguardadosADB()

	Global $iResult = ""
	Local $hSearch = FileFindFirstFile(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\" & "*.mcu")
	If $hSearch = -1 Then
		Return $iResult
	Else
		Local $sFileName = ""
		Local $aArray_Base[2] = ["", ""]
		Local $aArray = $aArray_Base
		For $i = 0 To 1000
			$sFileName = FileFindNextFile($hSearch)
			If @error Then ExitLoop
			_ArrayInsert($aArray,$i,$sFileName)
		Next
		$iResult = _ArrayToString($aArray, "|")
		Return $iResult
	EndIf

EndFunc

Func SecguardadosZTE()

	Global $iResult = ""
	Local $hSearch = FileFindFirstFile(@MyDocumentsDir & "\Backup_MCU\ZTE\" & "*.mcu")
	If $hSearch = -1 Then
		Return $iResult
	Else
		Local $sFileName = ""
		Local $aArray_Base[2] = ["", ""]
		Local $aArray = $aArray_Base
		For $i = 0 To 1000
			$sFileName = FileFindNextFile($hSearch)
			If @error Then ExitLoop
			_ArrayInsert($aArray,$i,$sFileName)
		Next
		$iResult = _ArrayToString($aArray, "|")
		Return $iResult
	EndIf

EndFunc

Func creditprocess2($dime, $imei, $opt, $codend)

	Global $checklen = SetLanguageProcessCred("credit" & $indicator)
	If $checklen == 1 Then
		DownloadLanresource("credit" & $indicator)
		SetLanguageProcessCred("credit" & $indicator)
	EndIf
	If $dime == "1" Then
		If $activo == "1" Then
			Global $precio = Cost($opt, $key)
		Else
			Global $precio = $opt
			Global $continuidad = MsgBox(32 + 4, "MC-U Tool", "Esta operacion requiere " &  $precio & " credito/s desea continuar? Si ya realizo este procedimiento al mismo dispositivo no se le cargara nuevamente." & @CRLF & @CRLF & "This operation take " &  $precio & " credit/s, do you wish to continue? If you did this process to this device before wont get charged again.")
			Switch $continuidad
				Case 7
					$precio = False
			EndSwitch
		EndIf
		If $precio == "False" Then
			$precio = "NO"
			Return $precio
		Else
			If StringReplace(Recheck($imei & $codend), " ", "") <> StringReplace($username, " ", "") Or Recheck($imei & $codend) == "False" Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPC[1] )
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Global $seguire = TendreCreditos($precio)
				If $seguire == "False" Then
					MsgBox(16, "MC-U Tool", "No tiene suficiente credito, necesita recargar su cuenta!" & @CRLF & @CRLF & "Not enough credit, need to charge account!")
					$precio = "NO"
					Return $precio
				Else
					Global $creditosenstock = CreditExistent($username)
					Global $credremain = $creditosenstock - $precio
					CreditAdjust($username, $credremain)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPC[2] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Recurrencia($imei & $codend, $pro)
					Return $precio
				EndIf
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayPC[3] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Return 1
			EndIf
		EndIf
	Else
		Return 'yes'
	EndIf

EndFunc

Func SamModCheck()
	$ipid = Run("adb shell getprop ro.product.model", "", @SW_HIDE, $stderr_child + $stdout_child)
	ProcessWaitClose($ipid)
	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	Return $soutput
EndFunc

Func BackupSecLGMetro($imeilgback)

	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("backseclgmes")
		If $checklen == 1 Then
			DownloadLanresource("backseclgmes")
			SetLanguageProcess("backseclgmes")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("backseclgmen")
		If $checklen == 1 Then
			DownloadLanresource("backseclgmen")
			SetLanguageProcess("backseclgmen")
		EndIf
	EndIf
	Global $ipid = Run("adb shell", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Sleep(1000)
	StdinWrite($ipid, "su" & @LF)
	Sleep(1000)
	Global $ejec = IsCreditNedded2("55", $key)
	Global $var = shori($ejec[1], $key)
	Global $back1 = StringSplit($var, "{")
	Global $ejec2 = IsCreditNedded2("56", $key)
	Global $var2 = shori($ejec2[1], $key)
	Global $back2 = StringSplit($var2, "{")
	Global $ejec3 = IsCreditNedded2("57", $key)
	Global $var3 = shori($ejec3[1], $key)
	Global $back3 = StringSplit($var3, "{")
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $back1[1] & @LF ) ;1
	Sleep(2000)
	StdinWrite($ipid, $back1[2] & @LF ) ;2
	Sleep(2000)
	StdinWrite($ipid, $back1[3] & @LF ) ;3
	Sleep(2000)
	StdinWrite($ipid, $back1[4] & @LF );4
	Sleep(2000)
	StdinWrite($ipid, $back1[5] & @LF );5
	Sleep(2000)
	StdinWrite($ipid, $back1[6] & @LF );6
	Sleep(2000)
	StdinWrite($ipid, $back1[7] & @LF );7
	Sleep(3000)
	Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	StdinWrite($ipid, $back1[8] & @LF );8
	Sleep(1000)
	Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	If StringInStr($soutput, "0p23") <> 0 Or StringInStr($soutput, "0p24") <> 0 Or StringInStr($soutput, "0p25") <> 0 Or StringInStr($soutput, "0p26") <> 0 Or StringInStr($soutput, "0p28") <> 0 Or StringInStr($soutput, "0p46") <> 0 Or StringInStr($soutput, "0p1") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		StdinWrite($ipid, $back1[9] & @LF ) ;9
		Sleep(1000)
		StdinWrite($ipid, $back1[10] & @LF );10
		Sleep(1000)
		StdinWrite($ipid, $back1[11] & @LF ) ;11
		Sleep(1000)
		StdinWrite($ipid, $back1[12] & @LF ) ;12 (1)
		Sleep(1000)
		StdinWrite($ipid, $back2[1] & @LF ) ;1
		Sleep(1000)
		StdinWrite($ipid, $back2[2] & @LF ) ;2
		Sleep(1000)
		StdinWrite($ipid, $back2[3] & @LF ) ;3
		Sleep(1000)
		ProcessClose($ipid)
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Global $ipid = Run($back2[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
		ProcessWaitClose($ipid)
		Global $ipid = Run($back2[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;5
		ProcessWaitClose($ipid)
		Global $ipid = Run($back2[6], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD);6
		ProcessWaitClose($ipid)
		Global $ipid = Run($back2[7], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD);7
		ProcessWaitClose($ipid)
		Global $ipid = Run($back2[8], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD);8
		ProcessWaitClose($ipid)
		Global $ipid = Run($back2[9], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD);9
		ProcessWaitClose($ipid)
		Global $ipid = Run($back2[10], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD);10
		ProcessWaitClose($ipid)
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Global $ipid = Run($back2[11], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;11
		ProcessWaitClose($ipid)
		Global $ipid = Run($back2[12], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD);12
		ProcessWaitClose($ipid)
		Global $ipid = Run($back2[13], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD);13
		ProcessWaitClose($ipid)
		Global $ipid = Run($back2[14], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD);14
		ProcessWaitClose($ipid)
		Global $ipid = Run($back2[15], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;15
		ProcessWaitClose($ipid)
		Global $ipid = Run($back2[16], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD);16
		ProcessWaitClose($ipid)
		Global $ipid = Run($back3[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
		ProcessWaitClose($ipid)
		If FileExists(@ScriptDir & "\0p23") Or FileExists(@ScriptDir & "\0p24") Or FileExists(@ScriptDir & "\0p25") Or FileExists(@ScriptDir & "\0p26") Or FileExists(@ScriptDir & "\0p28") Or FileExists(@ScriptDir & "\0p46") Or FileExists(@ScriptDir & "\0p1") Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			FileMove(@ScriptDir & "\0p23", @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p23", $FC_OVERWRITE + $FC_CREATEPATH)
			FileMove(@ScriptDir & "\0p24", @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p24", $FC_OVERWRITE + $FC_CREATEPATH)
			FileMove(@ScriptDir & "\0p25", @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p25", $FC_OVERWRITE + $FC_CREATEPATH)
			FileMove(@ScriptDir & "\0p26", @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p26", $FC_OVERWRITE + $FC_CREATEPATH)
			FileMove(@ScriptDir & "\0p28", @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p28", $FC_OVERWRITE + $FC_CREATEPATH)
			FileMove(@ScriptDir & "\0p46", @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p46", $FC_OVERWRITE + $FC_CREATEPATH)
			FileMove(@ScriptDir & "\0p1", @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p1", $FC_OVERWRITE + $FC_CREATEPATH)
			Global $sfilename = _Zip_Create(@MyDocumentsDir & "\Backup_MCU\LG_SEC\LGSEC_" & $imeilgback & ".zip")
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p23") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p23", 1)
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p24") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p24", 1)
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p25") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p25", 1)
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p26") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p26", 1)
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p28") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p28", 1)
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p46") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p46", 1)
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p1") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LG_SEC\0p1", 1)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p23") Then FileDelete(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p23")
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p24") Then FileDelete(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p24")
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p25") Then FileDelete(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p25")
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p26") Then FileDelete(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p26")
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p28") Then FileDelete(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p28")
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p46") Then FileDelete(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p46")
			if FileExists(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p1") Then FileDelete(@MyDocumentsDir & "\Backup_MCU\LG_SEC\0p1")
			Sleep(1000)
			$ipid = _Crypt_EncryptFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LG_SEC\LGSEC_" & $imeilgback & ".mcu", $decrypt, $iAlgorithm)
			ProcessWaitClose($ipid)
			FileDelete(@MyDocumentsDir & "\Backup_MCU\LG_SEC\LGSEC_" & $imeilgback & ".zip")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & " " & @MyDocumentsDir & "\Backup_MCU\LG_SEC\LGSEC_" & $imeilgback & ".mcu" & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	EndIf

EndFunc

Func RestoreSecLGMetro()

	Global $ejec = IsCreditNedded2("59", $key)
	Global $var = shori($ejec[1], $key)
	Global $restoreadb = StringSplit($var, "{")
	Global $ejecu = IsCreditNedded2("60", $key)
	Global $vari = shori($ejecu[1], $key)
	Global $restoreadb2 = StringSplit($vari, "{")
	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("restoreseclges")
		If $checklen == 1 Then
			DownloadLanresource("restoreseclges")
			SetLanguageProcess("restoreseclges")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("restoreseclgen")
		If $checklen == 1 Then
			DownloadLanresource("restoreseclgen")
			SetLanguageProcess("restoreseclgen")
		EndIf
	EndIf
	Global $esult = SecguardadosMetroUnlock()
	#Region ### START Koda GUI section ### Form=
	Global $Security = GUICreate($iArrayP[7], 312, 164, -1, -1)
	Global $Group1 = GUICtrlCreateGroup($iArrayP[8], 16, 8, 281, 137)
	Global $Combo1 = GUICtrlCreateCombo("", 64, 48, 177, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
	GUICtrlSetData($Combo1, $esult)
	Global $Button1 = GUICtrlCreateButton($iArrayP[9], 112, 96, 75, 25)
	GUICtrlCreateGroup("", -99, -99, 1, 1)
	GUISetState(@SW_SHOW)
	#EndRegion ### END Koda GUI section ###
	While 1
		$nMsg = GUIGetMsg()
		Switch $nMsg
			Case $GUI_EVENT_CLOSE
				GUIDelete($Security)
				ExitLoop

			Case $Button1
				Global $lectura = GUICtrlRead($Combo1)
				GUIDelete($Security)
				If $lectura <> "" Then
					If FileExists(@ScriptDir & "\lgback.zip") Then FileDelete(@ScriptDir & "\lgback.zip")
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = _Crypt_DecryptFile(@MyDocumentsDir & "\Backup_MCU\LG_SEC\" & $lectura, @ScriptDir & "\lgback.zip", $decrypt, $iAlgorithm)
					ProcessWaitClose($ipid)
					If FileExists(@ScriptDir & "\0p23") Then FileDelete(@ScriptDir & "\0p23")
					If FileExists(@ScriptDir & "\0p24") Then FileDelete(@ScriptDir & "\0p24")
					If FileExists(@ScriptDir & "\0p25") Then FileDelete(@ScriptDir & "\0p25")
					If FileExists(@ScriptDir & "\0p26") Then FileDelete(@ScriptDir & "\0p26")
					If FileExists(@ScriptDir & "\0p28") Then FileDelete(@ScriptDir & "\0p28")
					If FileExists(@ScriptDir & "\0p46") Then FileDelete(@ScriptDir & "\0p46")
					If FileExists(@ScriptDir & "\0p1") Then FileDelete(@ScriptDir & "\0p1")
					$ipid = _Zip_UnzipAll(@ScriptDir & "\lgback.zip", @ScriptDir, 1)
					ProcessWaitClose($ipid)
					FileDelete(@ScriptDir & "\lgback.zip")
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					If FileExists(@ScriptDir & "\0p23") Then
						$ipid= Run($restoreadb[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;1
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\0p24") Then
						$ipid= Run($restoreadb[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\0p25") Then
						$ipid= Run($restoreadb[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\0p26") Then
						$ipid= Run($restoreadb[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\0p28") Then
						$ipid= Run($restoreadb[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;5
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\0p46") Then
						$ipid= Run($restoreadb[6], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;6
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\0p1") Then
						$ipid= Run($restoreadb[7], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;7
						ProcessWaitClose($ipid)
					EndIf
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					If FileExists(@ScriptDir & "\0p23") Then
						$ipid= Run($restoreadb[8], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;8
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\0p24") Then
						$ipid= Run($restoreadb[9], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;9
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\0p25") Then
						$ipid= Run($restoreadb[10], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;10
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\0p26") Then
						$ipid= Run($restoreadb[11], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;11
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\0p28") Then
						$ipid= Run($restoreadb2[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;1
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\0p46") Then
						$ipid= Run($restoreadb2[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\0p1") Then
						$ipid= Run($restoreadb2[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
						ProcessWaitClose($ipid)
					EndIf
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $ipid = Run($restoreadb2[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
					ProcessWaitClose($ipid)
					Global $ipid = Run($restoreadb2[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;5
					ProcessWaitClose($ipid)
					Global $ipid = Run($restoreadb2[6], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;6
					ProcessWaitClose($ipid)
					Global $ipid = Run($restoreadb2[7], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;7
					ProcessWaitClose($ipid)
					Global $ipid = Run($restoreadb2[8], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;8
					ProcessWaitClose($ipid)
					Global $ipid = Run($restoreadb2[9], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;9
					ProcessWaitClose($ipid)
					Global $ipid = Run($restoreadb2[10], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;10
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $ipid = Run("adb reboot", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
					ProcessWaitClose($ipid)
					If FileExists(@ScriptDir & "\0p23") Then FileDelete(@ScriptDir & "\0p23")
					If FileExists(@ScriptDir & "\0p24") Then FileDelete(@ScriptDir & "\0p24")
					If FileExists(@ScriptDir & "\0p25") Then FileDelete(@ScriptDir & "\0p25")
					If FileExists(@ScriptDir & "\0p26") Then FileDelete(@ScriptDir & "\0p26")
					If FileExists(@ScriptDir & "\0p28") Then FileDelete(@ScriptDir & "\0p28")
					If FileExists(@ScriptDir & "\0p46") Then FileDelete(@ScriptDir & "\0p46")
					If FileExists(@ScriptDir & "\0p1") Then FileDelete(@ScriptDir & "\0p1")
					ExitLoop
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ExitLoop
				EndIf
		EndSwitch
	WEnd

EndFunc

Func RestoreSecADB()

	Global $ejec = IsCreditNedded2("58", $key)
	Global $var = shori($ejec[1], $key)
	Global $restoreadb = StringSplit($var, "{")
	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("restoresecadbes")
		If $checklen == 1 Then
			DownloadLanresource("restoresecadbes")
			SetLanguageProcess("restoresecadbes")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("restoresecadben")
		If $checklen == 1 Then
			DownloadLanresource("restoresecadben")
			SetLanguageProcess("restoresecadben")
		EndIf
	EndIf
	Global $esult = SecguardadosADB()
	#Region ### START Koda GUI section ### Form=
	Global $Security = GUICreate($iArrayP[7], 312, 164, -1, -1)
	Global $Group1 = GUICtrlCreateGroup($iArrayP[8], 16, 8, 281, 137)
	Global $Combo1 = GUICtrlCreateCombo("", 64, 48, 177, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
	GUICtrlSetData($Combo1, $esult)
	Global $Button1 = GUICtrlCreateButton($iArrayP[9], 112, 96, 75, 25)
	GUICtrlCreateGroup("", -99, -99, 1, 1)
	GUISetState(@SW_SHOW)
	#EndRegion ### END Koda GUI section ###
	While 1
		$nMsg = GUIGetMsg()
		Switch $nMsg
			Case $GUI_EVENT_CLOSE
				GUIDelete($Security)
				ExitLoop

			Case $Button1
				Global $lectura = GUICtrlRead($Combo1)
				GUIDelete($Security)
				If $lectura <> "" Then
					If FileExists(@ScriptDir & "\lgback.zip") Then FileDelete(@ScriptDir & "\lgback.zip")
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = _Crypt_DecryptFile(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\" & $lectura, @ScriptDir & "\lgback.zip", $decrypt, $iAlgorithm)
					ProcessWaitClose($ipid)
					If FileExists(@ScriptDir & "\modemst1") Then FileDelete(@ScriptDir & "\modemst1")
					If FileExists(@ScriptDir & "\modemst2") Then FileDelete(@ScriptDir & "\modemst2")
					If FileExists(@ScriptDir & "\fsg") Then FileDelete(@ScriptDir & "\fsg")
					if FileExists(@ScriptDir & "\fsgadd.txt") Then FileDelete(@ScriptDir & "\fsgadd.txt")
					if FileExists(@ScriptDir & "\mod1add.txt") Then FileDelete(@ScriptDir & "\mod1add.txt")
					if FileExists(@ScriptDir & "\mod2add.txt") Then FileDelete(@ScriptDir & "\mod2add.txt")
					$ipid = _Zip_UnzipAll(@ScriptDir & "\lgback.zip", @ScriptDir, 1)
					ProcessWaitClose($ipid)
					FileDelete(@ScriptDir & "\lgback.zip")
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					If FileExists(@ScriptDir & "\modemst1") Then
						$ipid= Run($restoreadb[1], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;1
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\modemst2") Then
						$ipid= Run($restoreadb[2], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;2
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\fsg") Then
						$ipid= Run($restoreadb[3], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;3
						ProcessWaitClose($ipid)
					EndIf
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					If FileExists(@ScriptDir & "\modemst1") and FileExists(@ScriptDir & "\mod1add.txt") Then
						Global $commandtorestore = FileRead(@ScriptDir & "\mod1add.txt")
						$ipid= Run($commandtorestore, "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\modemst2") and FileExists(@ScriptDir & "\mod2add.txt") Then
						Global $commandtorestore = FileRead(@ScriptDir & "\mod2add.txt")
						$ipid= Run($commandtorestore, "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
						ProcessWaitClose($ipid)
					EndIf
					If FileExists(@ScriptDir & "\fsg") and FileExists(@ScriptDir & "\fsgadd.txt") Then
						Global $commandtorestore = FileRead(@ScriptDir & "\fsgadd.txt")
						$ipid= Run($commandtorestore, "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
						ProcessWaitClose($ipid)
					EndIf
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $ipid = Run($restoreadb[4], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;4
					ProcessWaitClose($ipid)
					Global $ipid = Run($restoreadb[5], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;5
					ProcessWaitClose($ipid)
					Global $ipid = Run($restoreadb[6], "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD) ;6
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $ipid = Run("adb reboot", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
					ProcessWaitClose($ipid)
					If FileExists(@ScriptDir & "\modemst1") Then FileDelete(@ScriptDir & "\modemst1")
					If FileExists(@ScriptDir & "\modemst2") Then FileDelete(@ScriptDir & "\modemst2")
					If FileExists(@ScriptDir & "\fsg") Then FileDelete(@ScriptDir & "\fsg")
					If FileExists(@ScriptDir & "\fsgadd.txt") Then FileDelete(@ScriptDir & "\fsgadd.txt")
					If FileExists(@ScriptDir & "\mod1add.txt") Then FileDelete(@ScriptDir & "\mod1add.txt")
					If FileExists(@ScriptDir & "\mod2add.txt") Then FileDelete(@ScriptDir & "\mod2add.txt")
					ExitLoop
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ExitLoop
				EndIf
		EndSwitch
	WEnd

EndFunc

Func BackupSecLG($imeilgbackol)

	Global $ejec = IsCreditNedded2("52", $key)
	Global $var = shori($ejec[1], $key)
	Global $qcadb = StringSplit($var, "{")
	Global $ejec1 = IsCreditNedded2("53", $key)
	Global $var1 = shori($ejec1[1], $key)
	Global $qcadb2 = StringSplit($var1, "{")
	Global $adbsuono = "shell su -c"
	If $idiomadelaherramienta == "Espanol" Then
		Global $checklen = SetLanguageProcess("backmetrolges")
		If $checklen == 1 Then
			DownloadLanresource("backmetrolges")
			SetLanguageProcess("backmetrolges")
		EndIf
	Else
		Global $checklen = SetLanguageProcess("backmetrolgen")
		If $checklen == 1 Then
			DownloadLanresource("backmetrolgen")
			SetLanguageProcess("backmetrolgen")
		EndIf
	EndIf
	Global $esult = SecguardadosADB()
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[1], "", @SW_HIDE, $stderr_child + $stdout_child) ;1
	ProcessWaitClose($ipid)
	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	If StringInStr($soutput, "No such file or directory") <> 0 Then
		$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[2], "", @SW_HIDE, $stderr_child + $stdout_child) ;2
		ProcessWaitClose($ipid)
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "No such file or directory") <> 0 Then
			$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[3], "", @SW_HIDE, $stderr_child + $stdout_child) ;
			ProcessWaitClose($ipid)
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "No such file or directory") <> 0 Then
				$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[4], "", @SW_HIDE, $stderr_child + $stdout_child) ;4
				ProcessWaitClose($ipid)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "No such file or directory") <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb " & $adbsuono & ' "dd if=' & $soutput & ' of=/data/local/tmp/modemst1"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
					ProcessWaitClose($ipid)
					Global $create = FileOpen(@ScriptDir & "\mod1add.txt", $FC_OVERWRITE)
					Global $write = FileWrite($create, "adb shell su -c dd if=/data/local/tmp/modemst1 of=" & $soutput)
					$ipid = Run("adb " & $adbsuono & ' chmod 777 /data/local/tmp/modemst1', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
					ProcessWaitClose($ipid)
					$ipid = Run('adb pull /data/local/tmp/modemst1', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
					ProcessWaitClose($ipid)
				EndIf
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = Run("adb " & $adbsuono & ' "dd if=' & $soutput & ' of=/data/local/tmp/modemst1"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
				ProcessWaitClose($ipid)
				Global $create = FileOpen(@ScriptDir & "\mod1add.txt", $FC_OVERWRITE)
				Global $write = FileWrite($create, "adb shell su -c dd if=/data/local/tmp/modemst1 of=" & $soutput)
				$ipid = Run("adb " & $adbsuono & ' chmod 777 /data/local/tmp/modemst1', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
				ProcessWaitClose($ipid)
				$ipid = Run('adb pull /data/local/tmp/modemst1', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
				ProcessWaitClose($ipid)
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			$ipid = Run("adb " & $adbsuono & ' "dd if=' & $soutput & ' of=/data/local/tmp/modemst1"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
			ProcessWaitClose($ipid)
			Global $create = FileOpen(@ScriptDir & "\mod1add.txt", $FC_OVERWRITE)
			Global $write = FileWrite($create, "adb shell su -c dd if=/data/local/tmp/modemst1 of=" & $soutput)
			$ipid = Run("adb " & $adbsuono & ' chmod 777 /data/local/tmp/modemst1', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
			ProcessWaitClose($ipid)
			$ipid = Run('adb pull /data/local/tmp/modemst1', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
			ProcessWaitClose($ipid)
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$ipid = Run("adb " & $adbsuono & ' "dd if=' & $soutput & ' of=/data/local/tmp/modemst1"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
		ProcessWaitClose($ipid)
		Global $create = FileOpen(@ScriptDir & "\mod1add.txt", $FC_OVERWRITE)
		Global $write = FileWrite($create, "adb shell su -c dd if=/data/local/tmp/modemst1 of=" & $soutput)
		$ipid = Run("adb " & $adbsuono & ' chmod 777 /data/local/tmp/modemst1', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
		ProcessWaitClose($ipid)
		$ipid = Run('adb pull /data/local/tmp/modemst1', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
		ProcessWaitClose($ipid)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] )
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[6], "", @SW_HIDE, $stderr_child + $stdout_child) ;6
	ProcessWaitClose($ipid)
	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	If StringInStr($soutput, "No such file or directory") <> 0 Then
		$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[7], "", @SW_HIDE, $stderr_child + $stdout_child) ;7
		ProcessWaitClose($ipid)
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "No such file or directory") <> 0 Then
			$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[8], "", @SW_HIDE, $stderr_child + $stdout_child) ;8
			ProcessWaitClose($ipid)
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "No such file or directory") <> 0 Then
				$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[9], "", @SW_HIDE, $stderr_child + $stdout_child) ;9
				ProcessWaitClose($ipid)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "No such file or directory") <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb " & $adbsuono & ' "dd if=' & $soutput & ' of=/data/local/tmp/modemst2"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
					ProcessWaitClose($ipid)
					Global $create = FileOpen(@ScriptDir & "\mod2add.txt", $FC_OVERWRITE)
					Global $write = FileWrite($create, "adb shell su -c dd if=/data/local/tmp/modemst2 of=" & $soutput)
					$ipid = Run("adb " & $adbsuono & ' chmod 777 /data/local/tmp/modemst2', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
					ProcessWaitClose($ipid)
					$ipid = Run('adb pull /data/local/tmp/modemst2', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
					ProcessWaitClose($ipid)
				EndIf
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = Run("adb " & $adbsuono & ' "dd if=' & $soutput & ' of=/data/local/tmp/modemst2"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
				ProcessWaitClose($ipid)
				Global $create = FileOpen(@ScriptDir & "\mod2add.txt", $FC_OVERWRITE)
				Global $write = FileWrite($create, "adb shell su -c dd if=/data/local/tmp/modemst2 of=" & $soutput)
				$ipid = Run("adb " & $adbsuono & ' chmod 777 /data/local/tmp/modemst2', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
				ProcessWaitClose($ipid)
				$ipid = Run('adb pull /data/local/tmp/modemst2', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
				ProcessWaitClose($ipid)
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			$ipid = Run("adb " & $adbsuono & ' "dd if=' & $soutput & ' of=/data/local/tmp/modemst2"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
			ProcessWaitClose($ipid)
			Global $create = FileOpen(@ScriptDir & "\mod2add.txt", $FC_OVERWRITE)
			Global $write = FileWrite($create, "adb shell su -c dd if=/data/local/tmp/modemst2 of=" & $soutput)
			$ipid = Run("adb " & $adbsuono & ' chmod 777 /data/local/tmp/modemst2', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
			ProcessWaitClose($ipid)
			$ipid = Run('adb pull /data/local/tmp/modemst2', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
			ProcessWaitClose($ipid)
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$ipid = Run("adb " & $adbsuono & ' "dd if=' & $soutput & ' of=/data/local/tmp/modemst2"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
		ProcessWaitClose($ipid)
		Global $create = FileOpen(@ScriptDir & "\mod2add.txt", $FC_OVERWRITE)
		Global $write = FileWrite($create, "adb shell su -c dd if=/data/local/tmp/modemst2 of=" & $soutput)
		$ipid = Run("adb " & $adbsuono & ' chmod 777 /data/local/tmp/modemst2', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
		ProcessWaitClose($ipid)
		$ipid = Run('adb pull /data/local/tmp/modemst2', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
		ProcessWaitClose($ipid)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[10], "", @SW_HIDE, $stderr_child + $stdout_child) ;10
	ProcessWaitClose($ipid)
	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	If StringInStr($soutput, "No such file or directory") <> 0 Then
		$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[11], "", @SW_HIDE, $stderr_child + $stdout_child) ;11
		ProcessWaitClose($ipid)
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "No such file or directory") <> 0 Then
			$ipid = Run("adb " & $adbsuono & ' ' & $qcadb[12], "", @SW_HIDE, $stderr_child + $stdout_child) ;12
			ProcessWaitClose($ipid)
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "No such file or directory") <> 0 Then
				$ipid = Run("adb " & $adbsuono & ' ' & $qcadb2[1], "", @SW_HIDE, $stderr_child + $stdout_child) ;13
				ProcessWaitClose($ipid)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "No such file or directory") <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb " & $adbsuono & ' "dd if=' & $soutput & ' of=/data/local/tmp/fsg"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
					ProcessWaitClose($ipid)
					Global $create = FileOpen(@ScriptDir & "\fsgadd.txt", $FC_OVERWRITE)
					Global $write = FileWrite($create, "adb shell su -c dd if=/data/local/tmp/fsg of=" & $soutput)
					$ipid = Run("adb " & $adbsuono & ' chmod 777 /data/local/tmp/fsg', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
					ProcessWaitClose($ipid)
					$ipid = Run('adb pull /data/local/tmp/fsg', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
					ProcessWaitClose($ipid)
				EndIf
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				$ipid = Run("adb " & $adbsuono & ' "dd if=' & $soutput & ' of=/data/local/tmp/fsg"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
				ProcessWaitClose($ipid)
				Global $create = FileOpen(@ScriptDir & "\fsgadd.txt", $FC_OVERWRITE)
				Global $write = FileWrite($create, "adb shell su -c dd if=/data/local/tmp/fsg of=" & $soutput)
				$ipid = Run("adb " & $adbsuono & ' chmod 777 /data/local/tmp/fsg', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
				ProcessWaitClose($ipid)
				$ipid = Run('adb pull /data/local/tmp/fsg', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
				ProcessWaitClose($ipid)
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			$ipid = Run("adb " & $adbsuono & ' "dd if=' & $soutput & ' of=/data/local/tmp/fsg"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
			ProcessWaitClose($ipid)
			Global $create = FileOpen(@ScriptDir & "\fsgadd.txt", $FC_OVERWRITE)
			Global $write = FileWrite($create, "adb shell su -c dd if=/data/local/tmp/fsg of=" & $soutput)
			$ipid = Run("adb " & $adbsuono & ' chmod 777 /data/local/tmp/fsg', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
			ProcessWaitClose($ipid)
			$ipid = Run('adb pull /data/local/tmp/fsg', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
			ProcessWaitClose($ipid)
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$ipid = Run("adb " & $adbsuono & ' "dd if=' & $soutput & ' of=/data/local/tmp/fsg"', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
		ProcessWaitClose($ipid)
		Global $create = FileOpen(@ScriptDir & "\fsgadd.txt", $FC_OVERWRITE)
		Global $write = FileWrite($create, "adb shell su -c dd if=/data/local/tmp/fsg of=" & $soutput)
		$ipid = Run("adb " & $adbsuono & ' chmod 777 /data/local/tmp/fsg', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
		ProcessWaitClose($ipid)
		$ipid = Run('adb pull /data/local/tmp/fsg', "", @SW_HIDE, $stderr_child + $stdout_child) ;5
		ProcessWaitClose($ipid)
	EndIf
	Global $ipid = Run("adb shell rm /data/local/tmp/modemst1", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	ProcessWaitClose($ipid)
	Global $ipid = Run("adb shell rm /data/local/tmp/modemst2", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	ProcessWaitClose($ipid)
	Global $ipid = Run("adb shell rm /data/local/tmp/fsg", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	ProcessWaitClose($ipid)
	If FileExists(@ScriptDir & "\modemst1") Or FileExists(@ScriptDir & "\modemst2") Or FileExists(@ScriptDir & "\fsg") Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		FileMove(@ScriptDir & "\modemst1", @MyDocumentsDir & "\Backup_MCU\LGSECURITY\modemst1", $FC_OVERWRITE + $FC_CREATEPATH)
		FileMove(@ScriptDir & "\modemst2", @MyDocumentsDir & "\Backup_MCU\LGSECURITY\modemst2", $FC_OVERWRITE + $FC_CREATEPATH)
		FileMove(@ScriptDir & "\fsg", @MyDocumentsDir & "\Backup_MCU\LGSECURITY\fsg", $FC_OVERWRITE + $FC_CREATEPATH)
		FileMove(@ScriptDir & "\fsgadd.txt", @MyDocumentsDir & "\Backup_MCU\LGSECURITY\fsgadd.txt", $FC_OVERWRITE + $FC_CREATEPATH)
		FileMove(@ScriptDir & "\mod1add.txt", @MyDocumentsDir & "\Backup_MCU\LGSECURITY\mod1add.txt", $FC_OVERWRITE + $FC_CREATEPATH)
		FileMove(@ScriptDir & "\mod2add.txt", @MyDocumentsDir & "\Backup_MCU\LGSECURITY\mod2add.txt", $FC_OVERWRITE + $FC_CREATEPATH)
		Global $sfilename = _Zip_Create(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\LGSEC_" & $imeilgbackol & ".zip")
		if FileExists(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\modemst1") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LGSECURITY\modemst1", 1)
		if FileExists(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\modemst2") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LGSECURITY\modemst2", 1)
		if FileExists(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\fsg") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LGSECURITY\fsg", 1)
		if FileExists(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\fsgadd.txt") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LGSECURITY\fsgadd.txt", 1)
		if FileExists(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\mod1add.txt") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LGSECURITY\mod1add.txt", 1)
		if FileExists(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\mod2add.txt") Then _Zip_AddFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LGSECURITY\mod2add.txt", 1)
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		if FileExists(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\modemst1") Then FileDelete(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\modemst1")
		if FileExists(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\modemst2") Then FileDelete(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\modemst2")
		if FileExists(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\fsg") Then FileDelete(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\fsg")
		if FileExists(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\fsgadd.txt") Then FileDelete(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\fsgadd.txt")
		if FileExists(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\mod1add.txt") Then FileDelete(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\mod1add.txt")
		if FileExists(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\mod2add.txt") Then FileDelete(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\mod2add.txt")
		Sleep(1000)
		$ipid = _Crypt_EncryptFile($sfilename, @MyDocumentsDir & "\Backup_MCU\LGSECURITY\LGSEC_" & $imeilgbackol & ".mcu", $decrypt, $iAlgorithm)
		ProcessWaitClose($ipid)
		FileDelete(@MyDocumentsDir & "\Backup_MCU\LGSECURITY\LGSEC_" & $imeilgbackol & ".zip")
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & " " & @MyDocumentsDir & "\Backup_MCU\LGSECURITY\LGSEC_" & $imeilgbackol & ".mcu" & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	EndIf

EndFunc

Func rebootsqcom2($puert, $spcs, $orden)

 	If $idiomadelaherramienta == "Espanol" Then
 		Global $checklen = SetLanguageProcess("trebootes")
		If $checklen == 1 Then
			DownloadLanresource("trebootes")
			SetLanguageProcess("trebootes")
		EndIf
 	Else
 		Global $checklen = SetLanguageProcess("trebooten")
		If $checklen == 1 Then
			DownloadLanresource("trebooten")
			SetLanguageProcess("trebooten")
		EndIf
 	EndIf
	If Not FileExists(@ScriptDir & "\Treboots.exe") Then
		FileInstall("Treboots.exe", @ScriptDir & "\Treboots.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("Treboots.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	If $orden = "reboot" Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	ElseIf $orden = "off" Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	EndIf
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Iniciando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Iniciando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & " " & $puert & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		StdinWrite($ipid, $puert & @LF )
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			Sleep(100)
		Until StringInStr($soutput, "Conectado") <> 0 Or StringInStr($soutput, "Puerto Incorrecto") <> 0
		If StringInStr($soutput, "Conectado") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & " " & $spcs & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			StdinWrite($ipid, $spcs & @LF )
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				Sleep(100)
			Until StringInStr($soutput, "SPC Aceptado") <> 0 Or StringInStr($soutput, "SPC incorrecto") <> 0
			If StringInStr($soutput, "SPC Aceptado") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[13] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[16] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
			If $orden == "reboot" Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				StdinWrite($ipid, $orden & @LF )
			ElseIf $orden == "off" Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				StdinWrite($ipid, $orden & @LF )
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				StdinWrite($ipid, $orden & @LF )
			EndIf
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				Sleep(100)
			Until StringInStr($soutput, "Ok") <> 0 Or StringInStr($soutput, "No") <> 0
			If StringInStr($soutput, "Ok") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[14] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 0
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[15] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func readinfodiag($puert, $spcs)

 	If $idiomadelaherramienta == "Espanol" Then
 		Global $checklen = SetLanguageProcess("readinfonves")
		If $checklen == 1 Then
			DownloadLanresource("readinfonves")
			SetLanguageProcess("readinfonves")
		EndIf
 	Else
 		Global $checklen = SetLanguageProcess("readinfonven")
		If $checklen == 1 Then
			DownloadLanresource("readinfonven")
			SetLanguageProcess("readinfonven")
		EndIf
 	EndIf
	If Not FileExists(@ScriptDir & "\Tnv.exe") Then
		FileInstall("Tnv.exe", @ScriptDir & "\Tnv.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("Tnv.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Iniciando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Iniciando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & " " & $puert & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		StdinWrite($ipid, $puert & @LF )
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			Sleep(100)
		Until StringInStr($soutput, "Conectado") <> 0 Or StringInStr($soutput, "Puerto Incorrecto") <> 0
		If StringInStr($soutput, "Conectado") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & " " & $spcs & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			StdinWrite($ipid, $spcs & @LF )
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				Sleep(100)
			Until StringInStr($soutput, "SPC Aceptado") <> 0 Or StringInStr($soutput, "SPC incorrecto") <> 0
			If StringInStr($soutput, "SPC Aceptado") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "Leyendo") == 0 And StringInStr($soutput, "Okey") == 0 And $soutput <> '' Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " " & $soutput & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				EndIf
				Sleep(100)
			Until StringInStr($soutput, "Okey") <> 0
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 0
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func readinv($puert, $spcs, $inicio, $finale)

 	If $idiomadelaherramienta == "Espanol" Then
 		Global $checklen = SetLanguageProcess("lecturanves")
		If $checklen == 1 Then
			DownloadLanresource("lecturanves")
			SetLanguageProcess("lecturanves")
		EndIf
 	Else
 		Global $checklen = SetLanguageProcess("lecturanven")
		If $checklen == 1 Then
			DownloadLanresource("lecturanven")
			SetLanguageProcess("lecturanven")
		EndIf
 	EndIf
	Global $progresbarlong = $finale - $inicio
	Global $iSavPos = ''
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	If FileExists(@ScriptDir & "\pricequote.txt") Then FileDelete(@ScriptDir & "\pricequote.txt")
	If Not FileExists(@ScriptDir & "\Tnv2.exe") Then
		FileInstall("Tnv2.exe", @ScriptDir & "\Tnv2.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("Tnv2.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Iniciando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Iniciando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & " " & $puert & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		StdinWrite($ipid, $puert & @LF )
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			Sleep(100)
		Until StringInStr($soutput, "Conectado") <> 0 Or StringInStr($soutput, "Puerto Incorrecto") <> 0
		If StringInStr($soutput, "Conectado") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & " " & $spcs & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			StdinWrite($ipid, $spcs & @LF )
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				Sleep(100)
			Until StringInStr($soutput, "SPC Aceptado") <> 0 Or StringInStr($soutput, "SPC incorrecto") <> 0
			If StringInStr($soutput, "SPC Aceptado") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			GUICtrlSetState($Progress1,@SW_SHOW)
			StdinWrite($ipid, $inicio & @LF )
			Sleep(200)
			StdinWrite($ipid, $finale & @LF )
			Global $i = 1
			Do
				$iSavPos = 100 - ((($progresbarlong - $i)/$progresbarlong)*100)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If $soutput <> "" And StringInStr($soutput, "Done") == 0 Then
					GUICtrlSetData($Progress1, $iSavPos)
					$i += 1
				EndIf
			Until StringInStr($soutput, "Done") <> 0
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			GUICtrlDelete($Progress1)
			DeleteExes()
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 0
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func ProcesarLecturaNV()

	If FileExists(@ScriptDir & "\pricequote.txt") Then
		Global $sHandle = FileOpen(@ScriptDir & "\pricequote.txt")
		Global $countlines2 = _FileCountLines($sHandle)
	EndIf
	If $countlines2 >= 4 Then
		Global $_array = FileReadToArray($sHandle)
		Global $counter = 0
		For $i = 1 To UBound($_array, $UBOUND_ROWS) - 1
			If StringInStr($_array[$i], "OK") Then
				$counter += 1
			EndIf
		Next
		_FileWriteToLine(@ScriptDir & "\pricequote.txt", 2,  "[Complete items - " & $counter & ", Items size - 128]", True)
		Global $NvPath = FileSaveDialog("NV Items", @MyDocumentsDir, "Text (*.txt)")
		FileMove(@ScriptDir & "\pricequote.txt", $NvPath)
		FileClose(@ScriptDir & "\pricequote.txt")
		FileDelete(@ScriptDir & "\pricequote.txt")
		Return 1
	Else
		Return 0
	EndIf

EndFunc

Func repairimeinv($puert, $spcs, $orden, $imeiormeid)

 	If $idiomadelaherramienta == "Espanol" Then
 		Global $checklen = SetLanguageProcess("repararimeiomeides")
		If $checklen == 1 Then
			DownloadLanresource("repararimeiomeides")
			SetLanguageProcess("repararimeiomeides")
		EndIf
 	Else
 		Global $checklen = SetLanguageProcess("repararimeiomeiden")
		If $checklen == 1 Then
			DownloadLanresource("repararimeiomeiden")
			SetLanguageProcess("repararimeiomeiden")
		EndIf
 	EndIf
	If Not FileExists(@ScriptDir & "\Tnvimeimeid.exe") Then
		FileInstall("Tnvimeimeid.exe", @ScriptDir & "\Tnvimeimeid.exe", $FC_OVERWRITE)
	EndIf
	Global $ipid = Run("Tnvimeimeid.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	If $orden = "imei" Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	ElseIf $orden = "meid" Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	EndIf
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Iniciando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Iniciando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayP[3] & " " & $puert & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		StdinWrite($ipid, $puert & @LF )
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			Sleep(100)
		Until StringInStr($soutput, "Conectado") <> 0 Or StringInStr($soutput, "Puerto Incorrecto") <> 0
		If StringInStr($soutput, "Conectado") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayP[4] & " " & $spcs & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			StdinWrite($ipid, $spcs & @LF )
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				Sleep(100)
			Until StringInStr($soutput, "SPC Aceptado") <> 0 Or StringInStr($soutput, "SPC incorrecto") <> 0
			If StringInStr($soutput, "SPC Aceptado") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			StdinWrite($ipid, $orden & @LF )
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				Sleep(100)
			Until StringInStr($soutput, "Reparando") <> 0
			StdinWrite($ipid, $imeiormeid & @LF )
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				Sleep(100)
			Until StringInStr($soutput, "Okey") <> 0
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayP[6] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayP[7] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayP[9] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 0
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayP[10] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func writenv($puert, $spcs)

 	If $idiomadelaherramienta == "Espanol" Then
 		Global $checklen = SetLanguageProcess("writenvitemses")
		If $checklen == 1 Then
			DownloadLanresource("writenvitemses")
			SetLanguageProcess("writenvitemses")
		EndIf
 	Else
 		Global $checklen = SetLanguageProcess("writenvitemsen")
		If $checklen == 1 Then
			DownloadLanresource("writenvitemsen")
			SetLanguageProcess("writenvitemsen")
		EndIf
 	EndIf
	Global $iSavPos = ''
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	If Not FileExists(@ScriptDir & "\Tnv3.exe") Then
		FileInstall("Tnv3.exe", @ScriptDir & "\Tnv3.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("Tnv3.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Global $addr = FileOpenDialog("Select NV Items", @MyDocumentsDir, "Text (*.txt)")
	Global $lineofinteress = FileReadLine($addr,2)
	Global $finale = StringReplace(StringTrimLeft($lineofinteress, 18), ", Items size - 128]", "")
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Iniciando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Iniciando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & " " & $puert & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		StdinWrite($ipid, $puert & @LF )
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			Sleep(100)
		Until StringInStr($soutput, "Conectado") <> 0 Or StringInStr($soutput, "Puerto Incorrecto") <> 0
		If StringInStr($soutput, "Conectado") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & " " & $spcs & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			StdinWrite($ipid, $spcs & @LF )
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				Sleep(100)
			Until StringInStr($soutput, "SPC Aceptado") <> 0 Or StringInStr($soutput, "SPC incorrecto") <> 0
			If StringInStr($soutput, "SPC Aceptado") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[16] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[15] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			GUICtrlSetState($Progress1,@SW_SHOW)
			StdinWrite($ipid, $addr & @LF )
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $i = 1
			Do
				$iSavPos = 100 - ((($finale - $i)/$finale)*100)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If $soutput <> "" And StringInStr($soutput, "Done") == 0 Then
					GUICtrlSetData($Progress1, $iSavPos)
					$i += 1
				EndIf
			Until StringInStr($soutput, "Done") <> 0 Or StringInStr($soutput, "Invalid") <> 0
			If StringInStr($soutput, "Invalid") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				GUICtrlDelete($Progress1)
				DeleteExes()
				Return 0
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[14] & " " & $finale & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				GUICtrlDelete($Progress1)
				DeleteExes()
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 0
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[13] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func writenvj327p($com)

	If $idiomadelaherramienta == "Espanol" Then
 		Global $checklen = SetLanguageProcess("j327pu42es")
		If $checklen == 1 Then
			DownloadLanresource("j327pu42es")
			SetLanguageProcess("j327pu42es")
		EndIf
 	Else
 		Global $checklen = SetLanguageProcess("j327pu42en")
		If $checklen == 1 Then
			DownloadLanresource("j327pu42en")
			SetLanguageProcess("j327pu42en")
		EndIf
 	EndIf
	Global $iSavPos = ''
	If Not FileExists(@ScriptDir & "\Tj3nv.exe") Then
		FileInstall("Tj3nv.exe", @ScriptDir & "\Tj3nv.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("Tj3nv.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Global $finale = 1081
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Iniciando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Iniciando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & " " & $com & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		StdinWrite($ipid, $com & @LF )
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			Sleep(100)
		Until StringInStr($soutput, "Conectado") <> 0 Or StringInStr($soutput, "Puerto Incorrecto") <> 0
		If StringInStr($soutput, "Conectado") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			GUICtrlSetState($Progress1,@SW_SHOW)
			Global $i = 1
			Do
				$iSavPos = 100 - ((($finale - $i)/$finale)*100)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If $soutput <> "" And StringInStr($soutput, "Done") == 0 Then
					GUICtrlSetData($Progress1, $iSavPos)
					$i += 1
				EndIf
			Until StringInStr($soutput, "Done") <> 0 Or StringInStr($soutput, "Invalid") <> 0
			If StringInStr($soutput, "Invalid") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				GUICtrlDelete($Progress1)
				DeleteExes()
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				DeleteExes()
				Return 0
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 0
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func writenvj727p($com, $spcs)

	If $idiomadelaherramienta == "Espanol" Then
 		Global $checklen = SetLanguageProcess("j727punlocknves")
		If $checklen == 1 Then
			DownloadLanresource("j727punlocknves")
			SetLanguageProcess("j727punlocknves")
		EndIf
 	Else
 		Global $checklen = SetLanguageProcess("j727punlocknven")
		If $checklen == 1 Then
			DownloadLanresource("j727punlocknven")
			SetLanguageProcess("j727punlocknven")
		EndIf
 	EndIf
	Global $iSavPos = ''
	If Not FileExists(@ScriptDir & "\Tj7nv.exe") Then
		FileInstall("Tj7nv.exe", @ScriptDir & "\Tj7nv.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("Tj7nv.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Global $finale = 1081
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Iniciando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Iniciando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & " " & $com & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		StdinWrite($ipid, $com & @LF )
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			Sleep(100)
		Until StringInStr($soutput, "Conectado") <> 0 Or StringInStr($soutput, "Puerto Incorrecto") <> 0
		If StringInStr($soutput, "Conectado") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & " " & $spcs & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			StdinWrite($ipid, $spcs & @LF )
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				Sleep(100)
			Until StringInStr($soutput, "SPC Aceptado") <> 0 Or StringInStr($soutput, "SPC incorrecto") <> 0
			If StringInStr($soutput, "SPC Aceptado") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				GUICtrlSetState($Progress1,@SW_SHOW)
				Global $i = 1
				Do
					$iSavPos = 100 - ((($finale - $i)/$finale)*100)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If $soutput <> "" And StringInStr($soutput, "Done") == 0 Then
						GUICtrlSetData($Progress1, $iSavPos)
						$i += 1
					EndIf
				Until StringInStr($soutput, "Done") <> 0 Or StringInStr($soutput, "Invalid") <> 0
				If StringInStr($soutput, "Invalid") <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					GUICtrlDelete($Progress1)
					DeleteExes()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					DeleteExes()
					Return 0
				EndIf
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				DeleteExes()
				Return 0
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
			Return 0
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
		Return 0
	EndIf

EndFunc

Func J327PU4NV()

	If $idiomadelaherramienta == "Espanol" Then
 		Global $checklen = SetLanguageProcess("j327pu41es")
		If $checklen == 1 Then
			DownloadLanresource("j327pu41es")
			SetLanguageProcess("j327pu41es")
		EndIf
 	Else
 		Global $checklen = SetLanguageProcess("j327pu41en")
		If $checklen == 1 Then
			DownloadLanresource("j327pu41en")
			SetLanguageProcess("j327pu41en")
		EndIf
 	EndIf
	If Not FileExists(@ScriptDir & "\Resources\J327PU4.mcu") Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$sDownloaderTitle = "Descargando Resources"
		$url            = "http://mcu-tool.com/MCU-Tool Resources/J327PU4/J327PU4.mcu"
		$file           = "J327PU4.mcu"
		$name           = "J327PU4.mcu"
		$dir            = @ScriptDir & "\Resources\"
		_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
	EndIf
	If FileExists(@ScriptDir & "\Resources\J327PU4.mcu") Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\J327PU4.mcu", @ScriptDir & "\Resources\J327PU4.zip", $decrypt, $iAlgorithm)
		ProcessWaitClose($ipid)
		$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\J327PU4.zip", @ScriptDir, 1)
		ProcessWaitClose($ipid)
		FileDelete(@ScriptDir & "\Resources\J327PU4.zip")
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$ipid = Run("adb reboot download", "", @SW_HIDE)
		ProcessWaitClose($ipid)
		Sleep(10000)
		Global $dtet = ""
		Global $dldetect = DetectSamDownload()
		If $dldetect = 1 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			$ipid = Run('dm flash --MODEM modem.bin --CARRIER carrier.img.ext4', '', @SW_HIDE)
			ProcessWaitClose($ipid)
			FileDelete(@ScriptDir & "\modem.bin")
			FileDelete(@ScriptDir & "\carrier.img.ext4")
			MsgBox(64, 'MCU Tool', 'Espere a que el dispositivo Bootee completamente y luego active DM+MODEM+ADB, una vez hecho presione Aceptar para continuar' & @CRLF & @CRLF & 'Wait for device to boot completely and activate DM+MODEM+ADB, click OK to continue when done')
			BootComplete()
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			#Region ### START Koda GUI section ### Form=
			Global $FormCOM = GUICreate("Com Ports Selection", 544, 130, -1, -1)
			Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
			Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25)
			GUICtrlSetData($Combo1, _CommListPorts(1))
			GUICtrlCreateGroup("", -99, -99, 1, 1)
			Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
			Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
			Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
			Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
			Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
			Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
			GUISetState(@SW_SHOW)
			#EndRegion ### END Koda GUI section ###
			While 1
				$nMsg = GUIGetMsg()
				Switch $nMsg
					Case $GUI_EVENT_CLOSE
						GUIDelete($FormCOM)
						EnableButtons()
						ExitLoop

					Case $OpenDeviceMGM
						OpenDevMenu()

					Case $ButtonrefreshComm
						GUICtrlSetData($Combo1,"")
						GUICtrlSetData($Combo1, _CommListPorts(1))

					Case $ButtonSelectCom
						Global $commselected = GUICtrlRead($Combo1)
						GUIDelete($FormCOM)
						writenvj327p($commselected)
						ExitLoop
				EndSwitch
			WEnd
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	EndIf

EndFunc

Func J727PU4NV()

	If $idiomadelaherramienta == "Espanol" Then
 		Global $checklen = SetLanguageProcess("J727Pu4unlocknves")
		If $checklen == 1 Then
			DownloadLanresource("J727Pu4unlocknves")
			SetLanguageProcess("J727Pu4unlocknves")
		EndIf
 	Else
 		Global $checklen = SetLanguageProcess("J727Pu4unlocknven")
		If $checklen == 1 Then
			DownloadLanresource("J727Pu4unlocknven")
			SetLanguageProcess("J727Pu4unlocknven")
		EndIf
 	EndIf
	If Not FileExists(@ScriptDir & "\Resources\J727PU4.mcu") Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$sDownloaderTitle = "Descargando Resources"
		$url            = "http://mcu-tool.com/MCU-Tool Resources/J727PU4/J727PU4.mcu"
		$file           = "J727PU4.mcu"
		$name           = "J727PU4.mcu"
		$dir            = @ScriptDir & "\Resources\"
		_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
	EndIf
	If FileExists(@ScriptDir & "\Resources\J727PU4.mcu") Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\J727PU4.mcu", @ScriptDir & "\Resources\J727PU4.zip", $decrypt, $iAlgorithm)
		ProcessWaitClose($ipid)
		$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\J727PU4.zip", @ScriptDir, 1)
		ProcessWaitClose($ipid)
		FileDelete(@ScriptDir & "\Resources\J727PU4.zip")
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$ipid = Run("adb reboot download", "", @SW_HIDE)
		ProcessWaitClose($ipid)
		Sleep(10000)
		Global $dldetect = DetectSamDownload()
		If $dldetect = 1 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			$ipid = Run('dm flash --CARRIER carrier.img.ext4', '', @SW_HIDE)
			ProcessWaitClose($ipid)
			FileDelete(@ScriptDir & "\carrier.img.ext4")
			MsgBox(64, 'MC-U Tool', 'Espere a que el dispositivo Bootee completamente y luego marque ##3424#, una vez hecho presione Aceptar para continuar' & @CRLF & @CRLF & 'Wait for device to boot completely and dial ##3424#, click OK to continue when done')
			BootComplete()
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $ejec = IsCreditNedded2("5", $key)
			Global $var = shori($ejec[1], $key)
			$ipid = Run($var, "", @SW_HIDE, $stderr_child + $stdout_child)
			ProcessWaitClose($ipid)
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			Global $spcarray = StringSplit($soutput, "MSL_Checker:")
			Global $spcfinal = 000000
			If @error Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Else
				Global $iRows = UBound($spcarray, $UBOUND_ROWS)
				Global $spc = $spcarray[$iRows - 1]
				Global $spcfinal = StringReplace($spc, " ", "")
				Local $len = StringLen($spcfinal)
				If StringIsDigit($spcfinal) == 1 And $len == 6 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & $spcfinal & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				EndIf
			EndIf
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Sleep(3000)
			#Region ### START Koda GUI section ### Form=
			Global $FormCOM = GUICreate("Com Ports Selection", 544, 130, -1, -1)
			Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
			Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25)
			GUICtrlSetData($Combo1, _CommListPorts(1))
			GUICtrlCreateGroup("", -99, -99, 1, 1)
			Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
			Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
			Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
			Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
			Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
			Global $Input1 = GUICtrlCreateInput($spcfinal, 152, 96, 57, 21)
			Global $Label4 = GUICtrlCreateLabel("SPC", 112, 96, 25, 17)
			Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
			GUISetState(@SW_SHOW)
			#EndRegion ### END Koda GUI section ###
			While 1
				$nMsg = GUIGetMsg()
				Switch $nMsg
					Case $GUI_EVENT_CLOSE
						GUIDelete($FormCOM)
						EnableButtons()
						ExitLoop

					Case $OpenDeviceMGM
						OpenDevMenu()

					Case $ButtonrefreshComm
						GUICtrlSetData($Combo1,"")
						GUICtrlSetData($Combo1, _CommListPorts(1))

					Case $ButtonSelectCom
						Global $commselected = GUICtrlRead($Combo1)
						GUIDelete($FormCOM)
						writenvj727p($commselected, $spcfinal)
						ExitLoop
				EndSwitch
			WEnd
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[13] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	EndIf

EndFunc

Func DownloadLanresource($resource)

	If Not FileExists(@ScriptDir & "\Idioma\Functions\" & $resource & ".ini.mcu") Then
		$sDownloaderTitle = "Descargando Recursos"
		$url            = "http://mcu-tool.com/MCU-Tool Resources/Idioma/Functions/" & $resource & ".ini.mcu"
		$file           = $resource & ".ini.mcu"
		$name           = $resource & ".ini.mcu"
		$dir            = @ScriptDir & "\Idioma\Functions\"
		_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
	EndIf

EndFunc

Func DetectSamDownload()

	If $idiomadelaherramienta == "Espanol" Then
 		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detectando Dispositivo en Modo Download...")
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
 	Else
 		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Detecting Device in Download Mode...")
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
 	EndIf
	Global $marker = 0
	Global $star = TimerInit()
	Do
		$ipid = Run("dm detect", "", @SW_HIDE, $stderr_child + $stdout_child)
		ProcessWaitClose($ipid)
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Device detected") <>  0 Then
			$marker = 1
			ExitLoop
		Else
			$marker = 0
		EndIf
	Until TimerDiff($star) > 5000
	If $marker == 1 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " Ok" & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Return 1
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & " No" & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Return  0
	EndIf

EndFunc

Func OpenDevMenu()
	$ipid = ShellExecute("devmgmt.msc")
	ProcessWaitClose($ipid)
EndFunc

Func SetProcLanDefinitive($identificadordelenguaje)

	Global $checklen = SetLanguageProcessNoFunc($identificadordelenguaje)
	If $checklen == 1 Then
		DownloadLanresource($identificadordelenguaje)
		SetLanguageProcess($identificadordelenguaje)
	EndIf

EndFunc

Func SetProcLanDefinitiveFunc($identificadordelan)

	Global $checklen = SetLanguageProcess($identificadordelan)
	If $checklen == 1 Then
		DownloadLanresource($identificadordelan)
		SetLanguageProcess($identificadordelan)
	EndIf

EndFunc

Func unlock1056($com)

	If $idiomadelaherramienta == "Espanol" Then
 		Global $checklen = SetLanguageProcess("unlockxt1056es")
		If $checklen == 1 Then
			DownloadLanresource("unlockxt1056es")
			SetLanguageProcess("unlockxt1056es")
		EndIf
 	Else
 		Global $checklen = SetLanguageProcess("unlockxt1056en")
		If $checklen == 1 Then
			DownloadLanresource("unlockxt1056en")
			SetLanguageProcess("unlockxt1056en")
		EndIf
 	EndIf
	Global $iSavPos = ''
	Global $variant = ''
	If Not FileExists(@ScriptDir & "\T1056.exe") Then
		FileInstall("T1056.exe", @ScriptDir & "\T1056.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("T1056.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Global $finale = 4
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Iniciando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Iniciando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & " " & $com & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		StdinWrite($ipid, $com & @LF )
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			Sleep(100)
		Until StringInStr($soutput, "Conectado") <> 0 Or StringInStr($soutput, "Puerto Incorrecto") <> 0
		If StringInStr($soutput, "Conectado") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3])
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				Sleep(100)
			Until StringInStr($soutput, "NOT") <> 0 Or StringInStr($soutput, "SPC") <> 0 Or StringInStr($soutput, "Sending")
			If StringInStr($soutput, "NOT") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Sleep(3000)
				#Region ### START Koda GUI section ### Form=
				Global $SPC = GUICreate("SPC", 202, 137, -1, -1)
				Global $TypeSPC = GUICtrlCreateGroup("Type SPC", 8, 8, 185, 73)
				Global $InputSPC = GUICtrlCreateInput("", 40, 32, 121, 21, BitOR($GUI_SS_DEFAULT_INPUT,$ES_NUMBER))
				GUICtrlCreateGroup("", -99, -99, 1, 1)
				Global $ButtonSPC = GUICtrlCreateButton("OK", 64, 96, 75, 25)
				GUISetState(@SW_SHOW)
				#EndRegion ### END Koda GUI section ###

				While 1
					$nMsg = GUIGetMsg()
					Switch $nMsg
						Case $GUI_EVENT_CLOSE
							GUIDelete($SPC)
							DeleteExes()
							Global $variant = 0
							ExitLoop

						Case $ButtonSPC
							Global $SPCMOTO = GUICtrlRead($InputSPC)
							If $SPCMOTO = '' Then
								Global $variant = 0
								MsgBox(64, "MC-U Tool", "Incorrect SPC Number!")
							Else
								GUIDelete($SPC)
								Global $variant = 1
								ExitLoop
							EndIf

					EndSwitch
				WEnd
				If $variant = 0 Then
					Return 0
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & $SPCMOTO & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					StdinWrite($ipid, $SPCMOTO & @LF )
				EndIf
			ElseIf StringInStr($soutput, "SPC") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & StringReplace($soutput, "SPC: ", "") & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				Sleep(100)
			Until StringInStr($soutput, "SPC Aceptado") <> 0 Or StringInStr($soutput, "SPC incorrecto!") <> 0
			If StringInStr($soutput, "SPC incorrecto!") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			EndIf
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			GUICtrlSetState($Progress1,@SW_SHOW)
			Global $i = 1
			Do
				$iSavPos = 100 - ((($finale - $i)/$finale)*100)
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If $soutput <> "" And StringInStr($soutput, "Done") == 0 Then
					GUICtrlSetData($Progress1, $iSavPos)
					$i += 1
				EndIf
			Until StringInStr($soutput, "Done") <> 0 Or StringInStr($soutput, "Invalid") <> 0
			If StringInStr($soutput, "Invalid") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[13] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[14] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				GUICtrlDelete($Progress1)
				DeleteExes()
			Else
				GUICtrlDelete($Progress1)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[15] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Sleep(2000)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[16] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				DeleteExes()
				Return 1
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[17] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DeleteExes()
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[18] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DeleteExes()
	EndIf

EndFunc

Func DetectPresentsBands()

	Global $ejec = IsCreditNedded2("66", $key)
	Global $var = shori($ejec[1], $key)
	Global $q = 0
	Global $sarray[]= [""]
	$ipid = Run($var, "", @SW_HIDE, $stderr_child + $stdout_child)
	ProcessWaitClose($ipid)
	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	Global $arraybandpresents = StringSplit($soutput, @CRLF)
	For $i = 1 To $arraybandpresents[0]
		If StringInStr($arraybandpresents[$i], "preferred_network_mode") Then
			_ArrayAdd($sarray, StringSplit($arraybandpresents[$i], "=")[1])
			$q = 1
		EndIf
	Next
	If $q <> 0 Then
		Return $sarray
	Else
		Return False
	EndIf

EndFunc

Func SamsungFrpAdb($pasamelmodelo)

	If $idiomadelaherramienta == "Espanol" Then
 		Global $checklen = SetLanguageProcess("samsungnewfrpes")
		If $checklen == 1 Then
			DownloadLanresource("samsungnewfrpes")
			SetLanguageProcess("samsungnewfrpes")
		EndIf
 	Else
 		Global $checklen = SetLanguageProcess("samsungnewfrpen")
		If $checklen == 1 Then
			DownloadLanresource("samsungnewfrpen")
			SetLanguageProcess("samsungnewfrpen")
		EndIf
 	EndIf
	_GUICtrlEdit_SetText ($Edit1, "")
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & " " & $pasamelmodelo & @CRLF)
	$pro = GUICtrlRead($Edit1)
	If Not FileExists(@ScriptDir & "\Resources\" & $pasamelmodelo & ".mcu") Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$sDownloaderTitle = "Descargando Resources"
		$url            = "http://mcu-tool.com/MCU-Tool Resources/ADB/" & $pasamelmodelo & ".mcu"
		$file           = $pasamelmodelo & ".mcu"
		$name           = $pasamelmodelo & ".mcu"
		$dir            = @ScriptDir & "\Resources\"
		_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Sleep(2000)
	If FileExists(@ScriptDir & "\boot.img") Then
		FileDelete(@ScriptDir & "\boot.img")
	EndIf
	If FileExists(@ScriptDir & "\Resources\" & $pasamelmodelo & ".mcu") Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\" & $pasamelmodelo & ".mcu", @ScriptDir & "\Resources\" & $pasamelmodelo & ".zip", $decrypt, $iAlgorithm)
		ProcessWaitClose($ipid)
		$ipid = _Zip_UnzipAll(@ScriptDir & "\Resources\" & $pasamelmodelo & ".zip", @ScriptDir, 1)
		ProcessWaitClose($ipid)
		FileDelete(@ScriptDir & "\Resources\" & $pasamelmodelo & ".zip")
		Sleep(1000)
		Global $dldetect = DetectSamDownload()
		If $dldetect = 1 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			If StringInStr($pasamelmodelo, "G532M") <> 0 Then
				$soutput = _RunWaitGet(@ComSpec & ' /k ' & 'dm flash --boot boot.img',1,"",@SW_HIDE)
			Else
				$soutput = _RunWaitGet(@ComSpec & ' /k ' & 'dm flash --BOOT boot.img',1,"",@SW_HIDE)
			EndIf
			If StringInStr($soutput, "successful") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				FileDelete(@ScriptDir & "\boot.img")
				MsgBox(64, "MC-U Tool", " Espere a que su dispositivo Bootee completamente, active depuracion y haga click en Aceptar para continuar" & @CRLF & @CRLF & " Wait till your device boots completly, enable usb debug and Click OK to continue")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				BootComplete()
				$dejaver = ReadInfoprocess()
				If $dejaver == 1 then
					If $idiomadelaherramienta == "Espanol" Then
						Global $checklen = SetLanguageProcess("samsungnewfrpes")
					Else
						Global $checklen = SetLanguageProcess("samsungnewfrpen")
					EndIf
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					$ipid = Run("adb shell content insert --uri content://settings/secure --bind name:s:user_setup_complete --bind value:s:1", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell am start -n com.google.android.gsf.login/", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					$ipid = Run("adb shell am start -n com.google.android.gsf.login.LoginActivity", "", @SW_HIDE)
					ProcessWaitClose($ipid)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					 MsgBox(64, '', 'Haga un hard reset desde los ajustes para terminar el proceso' & @CRLF & @CRLF & 'Make a hard reset to finish process')
					firma()
					AddLog()
					logs()
					EnableButtons()
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					firma()
					AddLog()
					logs()
					EnableButtons()
					FileDelete(@ScriptDir & "\boot.img")
				EndIf
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[13] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				firma()
				AddLog()
				logs()
				EnableButtons()
				FileDelete(@ScriptDir & "\boot.img")
			EndIf
		Else
			EnableButtons()
			FileDelete(@ScriptDir & "\boot.img")
		EndIf
	Else
		MsgBox(16, "Error", "Achivos de Recursos no encontrados" & @CRLF & @CRLF & 'Error resources not found')
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[14] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		firma()
		AddLog()
		logs()
		EnableButtons()
	EndIf

EndFunc

Func FailDump()

	SetProcLanDefinitiveFunc("faildump" & $indicator)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	If Not FileExists(@ScriptDir & "\FAILDUMP") Then
		FileInstall("FAILDUMP", @ScriptDir & "\FAILDUMP", $FC_OVERWRITE)
	EndIf
	$ipid = Run("adb push FAILDUMP /data/local/tmp/temp", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	ProcessWaitClose($ipid)
	FileDelete(@ScriptDir & "\FAILDUMP")
	Global $rootcheck = _Android_HasRootAccess()
	$ipid = Run("adb shell chmod 0777 /data/local/tmp/temp", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	ProcessWaitClose($ipid)
	$ipid = Run("adb shell", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Sleep(1000)
	If $rootcheck == "True" Then
		StdinWrite($ipid, "su" & @LF )
		Sleep(2000)
	EndIf
	StdinWrite($ipid, "/data/local/tmp/temp" & @LF )
	Sleep(1000)
	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	If Not FileExists(@TempDir & "\FAILDUMPK") Then
		FileInstall("FAILDUMPK", @TempDir & "\FAILDUMPK", $FC_OVERWRITE)
	EndIf
	If StringInStr($soutput, "Enter") == 0 Then
	 	FileDelete(@TempDir & "\FAILDUMPK")
		$ipid = Run("adb shel rm /data/local/tmp/temp", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
		ProcessWaitClose($ipid)
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Return 1
	Else
		Global $array = StringSplit($soutput, ":")
		Global $Rows = UBound($array, $UBOUND_ROWS)
		For $i = 1 to $Rows - 1
			If StringInStr($array[$i], "Error") <> 0 Then
				Global $lallave = 0
				ExitLoop
			ElseIf StringLen($array[$i]) >= 60 And StringInStr($array[$i], "Enter") == 0 Then
				Global $lallave = StringReplace($array[$i], " ", "")
				ExitLoop
			Else
				Global $lallave = 0
			EndIf
		Next
		Global $ahorasitengolallave = _Interpreterdump($lallave)
		If StringInStr($ahorasitengolallave, "Error") == 0 Then
			Sleep(1000)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4])
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			$ver = StdinWrite($ipid, $ahorasitengolallave & @LF )
			Global $star = TimerInit()
			Do
				$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				Sleep(100)
				If StringInStr($soutput1, 'Error') <> 0 Then
					ExitLoop
				ElseIf StringInStr($soutput1, 'Done') <> 0 Then
					ExitLoop
				EndIf
			Until TimerDiff($star) > 60000
			If StringInStr($soutput1, 'Error') <> 0 or $soutput1 == "" then
				FileDelete(@TempDir & "\FAILDUMPK")
				ProcessClose($ipid)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Return 1
			Else
				ProcessClose($ipid)
				FileDelete(@TempDir & "\FAILDUMPK")
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Return 0
			EndIf
		Else
			FileDelete(@TempDir & "\FAILDUMPK")
			$ipid = Run("adb shell rm /data/local/tmp/temp", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
			ProcessWaitClose($ipid)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Return 1
		EndIf
	EndIf

EndFunc

Func FailDump2()

	SetProcLanDefinitiveFunc("faildump2" & $indicator)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	$ipid = Run("adb kill-server", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	ProcessWaitClose($ipid)
	$ipid = Run("adb start-server", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	ProcessWaitClose($ipid)
	$ipid = Run("adb devices", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	ProcessWaitClose($ipid)
	If Not FileExists(@ScriptDir & "\ATC") Then
		FileInstall("ATC", @ScriptDir & "\ATC", $FC_OVERWRITE)
	EndIf
	$ipid = Run("adb push ATC /data/local/tmp/temp", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	ProcessWaitClose($ipid)
	FileDelete(@ScriptDir & "\ATC")
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	$ipid = Run("adb shell chmod 0777 /data/local/tmp/temp", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	ProcessWaitClose($ipid)
	$ipid = Run("adb shell", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Sleep(1000)
	Global $rootcheck = _Android_HasRootAccess()
	If $rootcheck == "True" Then
		StdinWrite($ipid, "su" & @LF )
		Sleep(2000)
	EndIf
	StdinWrite($ipid, "/data/local/tmp/temp" & @LF )
	Sleep(2000)
	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	If StringInStr($soutput, "Enter") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3])
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Sleep(1000)
		$ver = StdinWrite($ipid, "" & @LF)
		Sleep(3000)
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "#") <> 0 Then
			$ver = StdinWrite($ipid, "AT+FAILDUMP=0,1" & @LF)
			Global $star = TimerInit()
			Do
				$soutput1 = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput1, "$") <> 0 Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 10000
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Return 0
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Return 1
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Return 1
	EndIf

EndFunc

Func ReadRamDump($model)

	SetProcLanDefinitiveFunc("readram" & $indicator)
	If Not FileExists(@ScriptDir & "\t60.exe") Then
		FileInstall("t60.exe", @ScriptDir & "\t60.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("t60.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Searching") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Searching") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2])
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "[") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 120000
		If StringInStr($soutput, "[") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			StdinWrite($ipid, $model & @LF )
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "Generando Ram Dump") <> 0 Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 120000
			If StringInStr($soutput, "Generando") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Global $star = TimerInit()
				Do
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If StringInStr($soutput, "Reiniciando a modo normal") <> 0 Then
						ExitLoop
					EndIf
					Sleep(100)
				Until TimerDiff($star) > 120000
				If StringInStr($soutput, "Reiniciando") <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6])
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $star = TimerInit()
					Do
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						If StringInStr($soutput, "Fallo generando Ram Dump!") <> 0 Or StringInStr($soutput, "Listo!") <> 0 Then
							ExitLoop
						EndIf
						Sleep(100)
					Until TimerDiff($star) > 120000
					If StringInStr($soutput, "Listo!") <> 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FileDelete(@ScriptDir & "\t60.exe")
						Return 0
					ElseIf StringInStr($soutput, "Fallo generando Ram Dump!") <> 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FileDelete(@ScriptDir & "\t60.exe")
						Return 1
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						FileDelete(@ScriptDir & "\t60.exe")
						Return 1
					EndIf
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					FileDelete(@ScriptDir & "\t60.exe")
					Return 1
				EndIf
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				FileDelete(@ScriptDir & "\t60.exe")
				Return 1
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			FileDelete(@ScriptDir & "\t60.exe")
			Return 1
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		FileDelete(@ScriptDir & "\t60.exe")
		Return 1
	EndIf

EndFunc

Func ReadQCNXiaomi($model, $imeiqcn)

	SetProcLanDefinitiveFunc("qcnxiaomi" & $indicator)
	Global $finale = 80
	If Not FileExists(@ScriptDir & "\t51.exe") Then
		FileInstall("t51.exe", @ScriptDir & "\t51.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("t51.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Searching") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Searching") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2])
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "[") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 120000
		If StringInStr($soutput, "[") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3])
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "Iniciando") <> 0 Or StringInStr($soutput, "Fail") <> 0 Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 30000
			If StringInStr($soutput, "Iniciando") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				StdinWrite($ipid, $model & @LF )
				Sleep(1000)
				StdinWrite($ipid, $imeiqcn & @LF )
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Global $i = 1
				Do
					$iSavPos = 100 - ((($finale - $i)/$finale)*100)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If $soutput <> "" And StringInStr($soutput, "OK") == 0 Then
						GUICtrlSetData($Progress1, $iSavPos)
						$i = $soutput
					EndIf
				Until StringInStr($soutput, "Done") <> 0
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("t51.exe")
				FileDelete(@ScriptDir & "\t51.exe")
				Return 0
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("t51.exe")
				FileDelete(@ScriptDir & "\t51.exe")
				Return 1
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			FileDelete(@ScriptDir & "\t51.exe")
			Return 1
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		FileDelete(@ScriptDir & "\t51.exe")
		Return 1
	EndIf

EndFunc

Func WriteQCNXiaomi($filein)

	SetProcLanDefinitiveFunc("xiaomiqcnwrite" & $indicator)
	If Not FileExists(@ScriptDir & "\Trestqcnxi.exe") Then
		FileInstall("Trestqcnxi.exe", @ScriptDir & "\Trestqcnxi.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("Trestqcnxi.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Searching") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Searching") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2])
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "[") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 120000
		If StringInStr($soutput, "[") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3])
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "Authorizing") <> 0 Or StringInStr($soutput, "FAIL") <> 0 Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 30000
			If StringInStr($soutput, "Authorizing") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				StdinWrite($ipid, $filein & @LF )
				Sleep(1000)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Do
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					Sleep(100)
				Until StringInStr($soutput, "FAIL Restoring") <> 0 Or StringInStr($soutput, "Syncronizing") <> 0
				If StringInStr($soutput, "Syncronizing") <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7])
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Do
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						Sleep(100)
					Until StringInStr($soutput, "OK!") <> 0
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("t51.exe")
					FileDelete(@ScriptDir & "\t51.exe")
					ProcessClose("Trestqcnxi.exe")
					FileDelete(@ScriptDir & "\Trestqcnxi.exe")
					Return 0
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("t51.exe")
					FileDelete(@ScriptDir & "\t51.exe")
					ProcessClose("Trestqcnxi.exe")
					FileDelete(@ScriptDir & "\Trestqcnxi.exe")
					Return 1
				EndIf
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("t51.exe")
				FileDelete(@ScriptDir & "\t51.exe")
				ProcessClose("Trestqcnxi.exe")
				FileDelete(@ScriptDir & "\Trestqcnxi.exe")
				Return 1
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("t51.exe")
			FileDelete(@ScriptDir & "\t51.exe")
			ProcessClose("Trestqcnxi.exe")
			FileDelete(@ScriptDir & "\Trestqcnxi.exe")
			Return 1
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		ProcessClose("t51.exe")
		FileDelete(@ScriptDir & "\t51.exe")
		ProcessClose("Trestqcnxi.exe")
		FileDelete(@ScriptDir & "\Trestqcnxi.exe")
		Return 1
	EndIf

EndFunc

Func WriteQCNZTE($filein)

	SetProcLanDefinitiveFunc("writeqcnzte" & $indicator)
	If Not FileExists(@ScriptDir & "\TrestQCNZTE.exe") Then
		FileInstall("TrestQCNZTE.exe", @ScriptDir & "\TrestQCNZTE.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("TrestQCNZTE.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Searching") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Searching") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2])
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "[") <> 0 Or StringInStr($soutput, "No port detected!") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 120000
		If StringInStr($soutput, "[") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3])
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "Authorizing") <> 0 Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 30000
			If StringInStr($soutput, "Authorizing") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				StdinWrite($ipid, $filein & @LF )
				Sleep(1000)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Do
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					Sleep(100)
				Until StringInStr($soutput, "FAIL Restoring") <> 0 Or StringInStr($soutput, "Syncronizing") <> 0
				If StringInStr($soutput, "Syncronizing") <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7])
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Do
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						Sleep(100)
					Until StringInStr($soutput, "OK!") <> 0
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("TrestQCNZTE.exe")
					FileDelete(@ScriptDir & "\TrestQCNZTE.exe")
					Return 0
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("TrestQCNZTE.exe")
					FileDelete(@ScriptDir & "\TrestQCNZTE.exe")
					Return 1
				EndIf
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("TrestQCNZTE.exe")
				FileDelete(@ScriptDir & "\TrestQCNZTE.exe")
				Return 1
			EndIf
		ElseIf StringInStr($soutput, "No port detected!") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("TrestQCNZTE.exe")
			FileDelete(@ScriptDir & "\TrestQCNZTE.exe")
			Return 1
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("TrestQCNZTE.exe")
			FileDelete(@ScriptDir & "\TrestQCNZTE.exe")
			Return 1
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[13] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		ProcessClose("TrestQCNZTE.exe")
		FileDelete(@ScriptDir & "\TrestQCNZTE.exe")
		Return 1
	EndIf

EndFunc

Func WriteQCNQC($filein)

	SetProcLanDefinitiveFunc("writeqcnqc" & $indicator)
	Global $portqc = ''
	If Not FileExists(@ScriptDir & "\TrestQCNQC.exe") Then
		FileInstall("TrestQCNQC.exe", @ScriptDir & "\TrestQCNQC.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("TrestQCNQC.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Input") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Input") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		#Region ### START Koda GUI section ### Form=
		Global $ComPortsSelector = GUICreate("Com Ports Selection", 544, 130, -1, -1)
		Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
		Global $inputcomport = GUICtrlCreateCombo("", 32, 40, 233, 25)
		GUICtrlSetData($inputcomport, _CommListPorts(1))
		GUICtrlCreateGroup("", -99, -99, 1, 1)
		Global $continuar = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
		Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
		Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
		Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
		Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
		Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
		GUISetState(@SW_SHOW)
		#EndRegion ### END Koda GUI section ###

		While 1
			$nMsg = GUIGetMsg()
			Switch $nMsg
				Case $GUI_EVENT_CLOSE
					GUIDelete($ComPortsSelector)
					ExitLoop

				Case $ButtonrefreshComm
					GUICtrlSetData($inputcomport,"")
					GUICtrlSetData($inputcomport, _CommListPorts(1))

				Case $OpenDeviceMGM
					OpenDevMenu()
				Case $continuar
					$portqc = GUICtrlRead($inputcomport)
					GUIDelete($ComPortsSelector)
					ExitLoop
			EndSwitch
		WEnd
		If $portqc <> '' Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & $portqc & "]... ")
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			StdinWrite($ipid, $portqc & @LF )
			Sleep(1000)
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "Authorizing NV access") <> 0 Or StringInStr($soutput, "FAIL Connecting") <> 0 Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 30000
			If StringInStr($soutput, "Authorizing NV access") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				StdinWrite($ipid, $filein & @LF )
				Sleep(1000)
				Global $star = TimerInit()
				Do
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If StringInStr($soutput, "FAIL Restoring!") <> 0 Or StringInStr($soutput, "Syncronizing") <> 0 Then
						ExitLoop
					EndIf
					Sleep(100)
				Until TimerDiff($star) > 30000
				If StringInStr($soutput, "Syncronizing") <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6])
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Do
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						Sleep(100)
					Until StringInStr($soutput, "OK!") <> 0
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("TrestQCNQC.exe")
					FileDelete(@ScriptDir & "\TrestQCNQC.exe")
					Return 0
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("TrestQCNQC.exe")
					FileDelete(@ScriptDir & "\TrestQCNQC.exe")
					Return 1
				EndIf
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("TrestQCNQC.exe")
				FileDelete(@ScriptDir & "\TrestQCNQC.exe")
				Return 1
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("TrestQCNQC.exe")
			FileDelete(@ScriptDir & "\TrestQCNQC.exe")
			Return 1
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		ProcessClose("TrestQCNQC.exe")
		FileDelete(@ScriptDir & "\TrestQCNQC.exe")
		Return 1
	EndIf

EndFunc

Func ReadQCNZTE($model, $imeiqcn)

	SetProcLanDefinitiveFunc("readqcnzte" & $indicator)
	Global $finale = 80
	If Not FileExists(@ScriptDir & "\tqcnzte.exe") Then
		FileInstall("tqcnzte.exe", @ScriptDir & "\tqcnzte.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("tqcnzte.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Searching") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Searching") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2])
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "[") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 120000
		If StringInStr($soutput, "[") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3])
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "Iniciando") <> 0 Or StringInStr($soutput, "Fail") <> 0 Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 30000
			If StringInStr($soutput, "Iniciando") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				StdinWrite($ipid, $model & @LF )
				Sleep(1000)
				Global $star = TimerInit()
				Do
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If StringInStr($soutput, "Connecting") <> 0 Then
						ExitLoop
					EndIf
					Sleep(100)
				Until TimerDiff($star) > 300000
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				StdinWrite($ipid, $imeiqcn & @LF )
				Global $i = 1
				Do
					$iSavPos = 100 - ((($finale - $i)/$finale)*100)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If $soutput <> "" And StringInStr($soutput, "OK") == 0 Then
						GUICtrlSetData($Progress1, $iSavPos)
						$i = $soutput
					EndIf
				Until StringInStr($soutput, "Done") <> 0
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("t51.exe")
				FileDelete(@ScriptDir & "\t51.exe")
				ProcessClose("tqcnzte.exe")
				FileDelete(@ScriptDir & "\tqcnzte.exe")
				Return 0
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("t51.exe")
				FileDelete(@ScriptDir & "\t51.exe")
				ProcessClose("tqcnzte.exe")
				FileDelete(@ScriptDir & "\tqcnzte.exe")
				Return 1
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			FileDelete(@ScriptDir & "\t51.exe")
			ProcessClose("tqcnzte.exe")
			FileDelete(@ScriptDir & "\tqcnzte.exe")
			Return 1
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		FileDelete(@ScriptDir & "\t51.exe")
		ProcessClose("tqcnzte.exe")
		FileDelete(@ScriptDir & "\tqcnzte.exe")
		Return 1
	EndIf

EndFunc

Func ReadQCNQCOMM($model, $imeiqcn)

	SetProcLanDefinitiveFunc("readqcnqc" & $indicator)
	Global $finale = 80
	Global $portqc = ''
	If Not FileExists(@ScriptDir & "\tqcomqcn.exe") Then
		FileInstall("tqcomqcn.exe", @ScriptDir & "\tqcomqcn.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("tqcomqcn.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Input") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Input") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		#Region ### START Koda GUI section ### Form=
		Global $ComPortsSelector = GUICreate("Com Ports Selection", 544, 130, -1, -1)
		Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
		Global $inputcomport = GUICtrlCreateCombo("", 32, 40, 233, 25)
		GUICtrlSetData($inputcomport, _CommListPorts(1))
		GUICtrlCreateGroup("", -99, -99, 1, 1)
		Global $continuar = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
		Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
		Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
		Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
		Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
		Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
		GUISetState(@SW_SHOW)
		#EndRegion ### END Koda GUI section ###

		While 1
			$nMsg = GUIGetMsg()
			Switch $nMsg
				Case $GUI_EVENT_CLOSE
					GUIDelete($ComPortsSelector)
					ExitLoop

				Case $ButtonrefreshComm
					GUICtrlSetData($inputcomport,"")
					GUICtrlSetData($inputcomport, _CommListPorts(1))

				Case $OpenDeviceMGM
					OpenDevMenu()
				Case $continuar
					$portqc = GUICtrlRead($inputcomport)
					GUIDelete($ComPortsSelector)
					ExitLoop
			EndSwitch
		WEnd
		If $portqc <> '' Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & $portqc & "]... ")
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			StdinWrite($ipid, $portqc & @LF )
			Sleep(1000)
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "Iniciando") <> 0 Or StringInStr($soutput, "Fail") <> 0 Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 30000
			If StringInStr($soutput, "Iniciando") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				StdinWrite($ipid, $model & @LF )
				Sleep(1000)
				StdinWrite($ipid, $imeiqcn & @LF )
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Global $i = 1
				Do
					$iSavPos = 100 - ((($finale - $i)/$finale)*100)
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If $soutput <> "" And StringInStr($soutput, "OK") == 0 Then
						GUICtrlSetData($Progress1, $iSavPos)
						$i = $soutput
					EndIf
				Until StringInStr($soutput, "Done") <> 0
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("t51.exe")
				FileDelete(@ScriptDir & "\t51.exe")
				ProcessClose("tqcomqcn.exe")
				FileDelete(@ScriptDir & "\tqcomqcn.exe")
				Return 0
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("t51.exe")
				FileDelete(@ScriptDir & "\t51.exe")
				ProcessClose("tqcomqcn.exe")
				FileDelete(@ScriptDir & "\tqcomqcn.exe")
				Return 1
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("t51.exe")
			FileDelete(@ScriptDir & "\t51.exe")
			ProcessClose("tqcomqcn.exe")
			FileDelete(@ScriptDir & "\tqcomqcn.exe")
			Return 1
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		ProcessClose("t51.exe")
		FileDelete(@ScriptDir & "\t51.exe")
		ProcessClose("tqcomqcn.exe")
		FileDelete(@ScriptDir & "\tqcomqcn.exe")
		Return 1
	EndIf

EndFunc

Func SendSPC()

	SetProcLanDefinitiveFunc("sendspc" & $indicator)
	Global $flag = 0
	Global $commselected = ''
	Global $spcs = ''
	If Not FileExists(@ScriptDir & "\Tsendspc.exe") Then
		FileInstall("Tsendspc.exe", @ScriptDir & "\Tsendspc.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("Tsendspc.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Iniciando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Iniciando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		#Region ### START Koda GUI section ### Form=
		Global $FormCOM = GUICreate("Com Ports Selection", 544, 130, -1, -1)
		Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
		Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25)
		GUICtrlSetData($Combo1, _CommListPorts(1))
		GUICtrlCreateGroup("", -99, -99, 1, 1)
		Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 232, 96, 75, 25)
		Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
		Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
		Global $Label3 = GUICtrlCreateLabel("SELECT DIAG PORT.", 312, 80, 126, 17)
		Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 8, 96, 75, 25)
		Global $Input1 = GUICtrlCreateInput("000000", 152, 96, 57, 21)
		Global $Label4 = GUICtrlCreateLabel("SPC", 112, 96, 25, 17)
		GUISetState(@SW_SHOW)
		#EndRegion ### END Koda GUI section ###
		While 1
			$nMsg = GUIGetMsg()
			Switch $nMsg
				Case $GUI_EVENT_CLOSE
					GUIDelete($FormCOM)
					$flag = 1
					ExitLoop

				Case $ButtonrefreshComm
					GUICtrlSetData($Combo1,"")
					GUICtrlSetData($Combo1, _CommListPorts(1))

				Case $ButtonSelectCom
					Global $commselected = GUICtrlRead($Combo1)
					Global $spcs = GUICtrlRead($Input1)
					GUIDelete($FormCOM)
					ExitLoop
			EndSwitch
		WEnd
		If $flag == 0 And $commselected <> '' and $spcs <> '' Then
			StdinWrite($ipid, $commselected & @LF )
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "Conectado") <> 0 Or StringInStr($soutput, "Puerto Incorrecto") <> 0 Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 10000
			If StringInStr($soutput, "Conectado") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				StdinWrite($ipid, $spcs & @LF )
				Global $star = TimerInit()
				Do
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If StringInStr($soutput, "SPC Aceptado") <> 0 Or StringInStr($soutput, "SPC incorrecto!") <> 0 Then
						ExitLoop
					EndIf
					Sleep(100)
				Until TimerDiff($star) > 10000
				If StringInStr($soutput, "SPC Aceptado") <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("Tsendspc.exe")
					ProcessClose("Twipe.exe")
					FileDelete(@ScriptDir & "\Tsendspc.exe")
					FileDelete(@ScriptDir & "\Twipe.exe")
					Return $spcs
				ElseIf StringInStr($soutput, "SPC incorrecto") <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("Tsendspc.exe")
					ProcessClose("Twipe.exe")
					FileDelete(@ScriptDir & "\Tsendspc.exe")
					FileDelete(@ScriptDir & "\Twipe.exe")
					Return False
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("Tsendspc.exe")
					ProcessClose("Twipe.exe")
					FileDelete(@ScriptDir & "\Tsendspc.exe")
					FileDelete(@ScriptDir & "\Twipe.exe")
					Return False
				EndIf
			ElseIf StringInStr($soutput, "Puerto Incorrecto") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("Tsendspc.exe")
				ProcessClose("Twipe.exe")
				FileDelete(@ScriptDir & "\Tsendspc.exe")
				FileDelete(@ScriptDir & "\Twipe.exe")
				Return False
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("Tsendspc.exe")
				ProcessClose("Twipe.exe")
				FileDelete(@ScriptDir & "\Tsendspc.exe")
				FileDelete(@ScriptDir & "\Twipe.exe")
				Return False
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("Tsendspc.exe")
			ProcessClose("Twipe.exe")
			FileDelete(@ScriptDir & "\Tsendspc.exe")
			FileDelete(@ScriptDir & "\Twipe.exe")
			Return False
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		ProcessClose("Tsendspc.exe")
		ProcessClose("Twipe.exe")
		FileDelete(@ScriptDir & "\Tsendspc.exe")
		FileDelete(@ScriptDir & "\Twipe.exe")
		Return False
	EndIf

EndFunc

Func ReadQCNSamsung($modelqcnsam, $imeiqcnsam)

	Global $spcqcnsam = SendSPC()
	If $spcqcnsam <> False Then
	 	SetProcLanDefinitiveFunc("readqcnsamsung" & $indicator)
		Global $finale = 80
		If Not FileExists(@ScriptDir & "\TqcnSam.exe") Then
			FileInstall("TqcnSam.exe", @ScriptDir & "\TqcnSam.exe", $FC_OVERWRITE)
		EndIf
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		If ProcessExists("Twipe.exe") Then
			ProcessClose("Twipe.exe")
		EndIf
		Global $ipid = Run("TqcnSam.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
		Do
			Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			Sleep(5)
		Until $soutput <> ""
		Global $crypted = DecryptKey($soutput)
		StdinWrite($ipid, $crypted & @LF )
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "Searching") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 5000
		If StringInStr($soutput, "Searching") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2])
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "[") <> 0 Or StringInStr($soutput, "FAIL") <> 0  Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 120000
			If StringInStr($soutput, "[") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				StdinWrite($ipid, $modelqcnsam & @LF )
				Sleep(1000)
				StdinWrite($ipid, $imeiqcnsam & @LF )
				Sleep(1000)
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Global $star = TimerInit()
				Do
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If StringInStr($soutput, "FAIL CONNECTING!") <> 0 Or StringInStr($soutput, "Authorizing NV access") <> 0  Then
						ExitLoop
					EndIf
					Sleep(100)
				Until TimerDiff($star) > 120000
				If StringInStr($soutput, "FAIL CONNECTING!") <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("TqcnSam.exe")
					ProcessClose("t50.exe")
					FileDelete(@ScriptDir & "\TqcnSam.exe")
					FileDelete(@ScriptDir & "\t50.exe")
					Return False
				ElseIf StringInStr($soutput, "Authorizing") <> 0 Then
					StdinWrite($ipid, $spcqcnsam & @LF )
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6])
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $i = 0
					Do
						$iSavPos = 100 - ((($finale - $i)/$finale)*100)
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						If $soutput <> "" And StringInStr($soutput, "Read Ok!") == 0 Then
							GUICtrlSetData($Progress1, $iSavPos)
							$i = $soutput
						EndIf
					Until StringInStr($soutput, "Done") <> 0
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("TqcnSam.exe")
					ProcessClose("t50.exe")
					FileDelete(@ScriptDir & "\TqcnSam.exe")
					FileDelete(@ScriptDir & "\t50.exe")
					Return 0
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("TqcnSam.exe")
					ProcessClose("t50.exe")
					FileDelete(@ScriptDir & "\TqcnSam.exe")
					FileDelete(@ScriptDir & "\t50.exe")
					Return False
				EndIf
			ElseIf StringInStr($soutput, "FAIL") <> 0 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("TqcnSam.exe")
				ProcessClose("t50.exe")
				FileDelete(@ScriptDir & "\TqcnSam.exe")
				FileDelete(@ScriptDir & "\t50.exe")
				Return False
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("TqcnSam.exe")
				ProcessClose("t50.exe")
				FileDelete(@ScriptDir & "\TqcnSam.exe")
				FileDelete(@ScriptDir & "\t50.exe")
				Return False
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("TqcnSam.exe")
			ProcessClose("t50.exe")
			FileDelete(@ScriptDir & "\TqcnSam.exe")
			FileDelete(@ScriptDir & "\t50.exe")
			Return False
		EndIf
	Else
		Return False
	EndIf

EndFunc

Func SamGetSerial()

	$ipid = Run("adb shell getprop ril.serialnumber", "", @SW_HIDE, $stderr_child + $stdout_child)
	ProcessWaitClose($ipid)
	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	Return $soutput

EndFunc

Func ReadQCNLG($modelqcnlg, $imeiqcnlg) ;check

	Global $spcqcnlg = SendSPC()
	Global $flag1 = 0
	If $spcqcnlg <> False Then
	 	SetProcLanDefinitiveFunc("readqcn" & $indicator)
		Global $finale = 80
		If Not FileExists(@ScriptDir & "\t50.exe") Then
			FileInstall("t50.exe", @ScriptDir & "\t50.exe", $FC_OVERWRITE)
		EndIf
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Global $ipid = Run("t50.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
		Do
			Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			Sleep(5)
		Until $soutput <> ""
		Global $crypted = DecryptKey($soutput)
		StdinWrite($ipid, $crypted & @LF )
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "Searching") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 5000
		If StringInStr($soutput, "Searching") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2])
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "fail opening Port!") <> 0 Or StringInStr($soutput, "Fail Activating Port!") <> 0 Or StringInStr($soutput, "Exception!") <> 0 Or StringInStr($soutput, "No Port!") <> 0 Then
					Global $flag1 = 1
					ExitLoop
				ElseIf StringInStr($soutput, "DIAG Active!") <> 0 Or StringInStr($soutput, "OK!") <> 0 Then
					Global $flag1 = 2
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 120000
			If $flag1 = 2 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Global $star = TimerInit()
				Do
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If StringInStr($soutput, "[") <> 0 Then
						Global $flag1 = 1
						ExitLoop
					EndIf
					Sleep(100)
				Until TimerDiff($star) > 120000
				If StringInStr($soutput, "[") <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $star = TimerInit()
					Do
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						If StringInStr($soutput, "Fallo de conexion!") <> 0 Or StringInStr($soutput, "Iniciando") <> 0  Then
							ExitLoop
						EndIf
						Sleep(100)
					Until TimerDiff($star) > 120000
					If StringInStr($soutput, "Iniciando") <> 0  Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4])
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						StdinWrite($ipid, $modelqcnlg & @LF )
						Sleep(1000)
						StdinWrite($ipid, $imeiqcnlg & @LF )
						Sleep(1000)
						StdinWrite($ipid, $spcqcnlg & @LF )
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(500)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6])
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						StdinWrite($ipid, $spcqcnsam & @LF )
						Global $i = 1
						Do
							$iSavPos = 100 - ((($finale - $i)/$finale)*100)
							$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
							If $soutput <> "" And StringInStr($soutput, "Read Ok!") == 0 Then
								GUICtrlSetData($Progress1, $iSavPos)
								$i = $soutput
							EndIf
						Until StringInStr($soutput, "Backup QCN successful") <> 0
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						ProcessClose("t50.exe")
						FileDelete(@ScriptDir & "\t50.exe")
						Return 0
					ElseIf StringInStr($soutput, "Fallo de conexion!") <> 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						ProcessClose("t50.exe")
						FileDelete(@ScriptDir & "\t50.exe")
						Return False
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						ProcessClose("t50.exe")
						FileDelete(@ScriptDir & "\t50.exe")
						Return False
					EndIf
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("t50.exe")
					FileDelete(@ScriptDir & "\t50.exe")
					Return False
				EndIf
			ElseIf $flag1 = 1 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("t50.exe")
				FileDelete(@ScriptDir & "\t50.exe")
				Return False
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("t50.exe")
				FileDelete(@ScriptDir & "\t50.exe")
				Return False
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[13] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("t50.exe")
			FileDelete(@ScriptDir & "\t50.exe")
			Return False
		EndIf
	Else
		Return False
	EndIf

EndFunc

Func WriteQCNLG($filein) ;check

	Global $spcqcnlg = SendSPC()
	Global $flag1 = 0
	If $spcqcnlg <> False Then
	 	SetProcLanDefinitiveFunc("writeqcnlg" & $indicator)
		Global $finale = 80
		If Not FileExists(@ScriptDir & "\TrestQCNLG.exe") Then
			FileInstall("TrestQCNLG.exe", @ScriptDir & "\TrestQCNLG.exe", $FC_OVERWRITE)
		EndIf
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) &  $iArrayP[1] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Global $ipid = Run("TrestQCNLG.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
		Do
			Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			Sleep(5)
		Until $soutput <> ""
		Global $crypted = DecryptKey($soutput)
		StdinWrite($ipid, $crypted & @LF )
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "Searching") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 5000
		If StringInStr($soutput, "Searching") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2])
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "fail opening Port!") <> 0 Or StringInStr($soutput, "Fail Activating Port!") <> 0 Or StringInStr($soutput, "Exception!") <> 0 Or StringInStr($soutput, "No Port!") <> 0 Then
					Global $flag1 = 1
					ExitLoop
				ElseIf StringInStr($soutput, "DIAG Active!") <> 0 Or StringInStr($soutput, "OK!") <> 0 Then
					Global $flag1 = 2
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 120000
			If $flag1 = 2 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Global $star = TimerInit()
				Do
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If StringInStr($soutput, "[") <> 0 Then
						Global $flag1 = 1
						ExitLoop
					EndIf
					Sleep(100)
				Until TimerDiff($star) > 120000
				If StringInStr($soutput, "[") <> 0 Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Global $star = TimerInit()
					Do
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						If StringInStr($soutput, "Fallo de conexion!") <> 0 Or StringInStr($soutput, "Authorizing") <> 0  Then
							ExitLoop
						EndIf
						Sleep(100)
					Until TimerDiff($star) > 120000
					If StringInStr($soutput, "Authorizing") <> 0  Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4])
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						StdinWrite($ipid, $spcqcnlg & @LF )
						Sleep(1000)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Sleep(500)
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6])
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						StdinWrite($ipid, $filein & @LF )
						Sleep(1000)
						Do
							$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
							Sleep(100)
						Until StringInStr($soutput, "Fail Writing!") <> 0 Or StringInStr($soutput, "Syncronizing") <> 0
						If StringInStr($soutput, "Syncronizing") <> 0 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8])
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Do
								$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
								Sleep(100)
							Until StringInStr($soutput, "OK!") <> 0
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							ProcessClose("t51.exe")
							FileDelete(@ScriptDir & "\t51.exe")
							ProcessClose("TrestQCNLG.exe")
							FileDelete(@ScriptDir & "\TrestQCNLG.exe")
							Return 0
						ElseIf StringInStr($soutput, "Fail Writing!") <> 0 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							ProcessClose("t51.exe")
							FileDelete(@ScriptDir & "\t51.exe")
							ProcessClose("TrestQCNLG.exe")
							FileDelete(@ScriptDir & "\TrestQCNLG.exe")
							Return False
						EndIf
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						ProcessClose("t51.exe")
						FileDelete(@ScriptDir & "\t51.exe")
						ProcessClose("TrestQCNLG.exe")
						FileDelete(@ScriptDir & "\TrestQCNLG.exe")
						Return False
					EndIf
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("t51.exe")
					FileDelete(@ScriptDir & "\t51.exe")
					ProcessClose("TrestQCNLG.exe")
					FileDelete(@ScriptDir & "\TrestQCNLG.exe")
					Return False
				EndIf
			ElseIf $flag1 = 1 Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[13] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("t51.exe")
				FileDelete(@ScriptDir & "\t51.exe")
				ProcessClose("TrestQCNLG.exe")
				FileDelete(@ScriptDir & "\TrestQCNLG.exe")
				Return False
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[14] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("t51.exe")
				FileDelete(@ScriptDir & "\t51.exe")
				ProcessClose("TrestQCNLG.exe")
				FileDelete(@ScriptDir & "\TrestQCNLG.exe")
				Return False
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[15] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("t51.exe")
			FileDelete(@ScriptDir & "\t51.exe")
			ProcessClose("TrestQCNLG.exe")
			FileDelete(@ScriptDir & "\TrestQCNLG.exe")
			Return False
		EndIf
	Else
		Return False
	EndIf

EndFunc

Func WriteQCNSAM($filein)

	Global $spcqcnsam = SendSPC()
	Global $flag1 = 0
	If $spcqcnlg <> False Then
	 	SetProcLanDefinitiveFunc("writeqcnsam" & $indicator)
		Global $finale = 80
		If Not FileExists(@ScriptDir & "\Trestqcnsam.exe") Then
			FileInstall("Trestqcnsam.exe", @ScriptDir & "\Trestqcnsam.exe", $FC_OVERWRITE)
		EndIf
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Global $ipid = Run("Trestqcnsam.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
		Do
			Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			Sleep(5)
		Until $soutput <> ""
		Global $crypted = DecryptKey($soutput)
		StdinWrite($ipid, $crypted & @LF )
		Global $star = TimerInit()
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "Searching") <> 0 Then
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 5000
		If StringInStr($soutput, "Searching") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2])
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $star = TimerInit()
			Do
				$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
				If StringInStr($soutput, "[") <> 0 Or StringInStr($soutput, "FAIL!") <> 0  Then
					ExitLoop
				EndIf
				Sleep(100)
			Until TimerDiff($star) > 120000
			If StringInStr($soutput, "[") <> 0  Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $soutput & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3])
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				Global $star = TimerInit()
				Do
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					If StringInStr($soutput, "FAIL Connecting Port") <> 0 Or StringInStr($soutput, "Authorizing NV access") <> 0  Then
						ExitLoop
					EndIf
					Sleep(100)
				Until TimerDiff($star) > 120000
				If StringInStr($soutput, "Authorizing NV access") <> 0  Then
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] )
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					StdinWrite($ipid, $spcqcnsam & @LF )
					Sleep(1000)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					Sleep(500)
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7])
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					StdinWrite($ipid, $filein & @LF )
					Sleep(1000)
					Do
						$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
						Sleep(100)
					Until StringInStr($soutput, "FAIL Restoring") <> 0 Or StringInStr($soutput, "Syncronizing") <> 0
					If StringInStr($soutput, "Syncronizing") <> 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9])
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Do
							$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
							Sleep(100)
						Until StringInStr($soutput, "OK!") <> 0
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						ProcessClose("Trestqcnsam.exe")
						FileDelete(@ScriptDir & "\Trestqcnsam.exe")
						Return 0
					ElseIf StringInStr($soutput, "FAIL Restoring") <> 0 Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						ProcessClose("Trestqcnsam.exe")
						FileDelete(@ScriptDir & "\Trestqcnsam.exe")
						Return False
					EndIf
				Else
					_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
					_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
					ProcessClose("Trestqcnsam.exe")
					FileDelete(@ScriptDir & "\Trestqcnsam.exe")
					Return False
				EndIf
			ElseIf StringInStr($soutput, "FAIL!") <> 0  Then
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[13] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("Trestqcnsam.exe")
				FileDelete(@ScriptDir & "\Trestqcnsam.exe")
				Return False
			Else
				_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[14] & @CRLF)
				_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
				ProcessClose("Trestqcnsam.exe")
				FileDelete(@ScriptDir & "\Trestqcnsam.exe")
				Return False
			EndIf
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[15] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("Trestqcnsam.exe")
			FileDelete(@ScriptDir & "\Trestqcnsam.exe")
			Return False
		EndIf
	Else
		Return False
	EndIf

EndFunc

Func AnalyzeSec()

	SetProcLanDefinitiveFunc("analyzesec" & $indicator)
	Local $hSearch = FileFindFirstFile(@ScriptDir & "\Backup\" & "*.bin")
	$sFileName = FileFindNextFile($hSearch)
	FileMove(@ScriptDir & "\Backup\" & $sFileName, @ScriptDir & "\" & $sFileName)
	If Not FileExists(@ScriptDir & "\Read Ram Dump Bin.exe") Then
		FileInstall("Read Ram Dump Bin.exe", @ScriptDir & "\Read Ram Dump Bin.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	Global $ipid = Run("Read Ram Dump Bin.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Reading") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Reading") <> 0 Then
		StdinWrite($ipid, $sFileName & @LF )
		Sleep(10000)
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		ProcessClose("Read Ram Dump Bin.exe")
		FileDelete(@ScriptDir & "\Read Ram Dump Bin.exe")
		Sleep(500)
		FileMove(@ScriptDir & "\" & $sFileName, @ScriptDir & "\Backup\" & $sFileName)
		Return $soutput
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		FileDelete(@ScriptDir & "\Read Ram Dump Bin.exe")
		Sleep(500)
		FileMove(@ScriptDir & "\" & $sFileName, @ScriptDir & "\Backup\" & $sFileName)
		Return 1
	EndIf


EndFunc

Func ImeiSamsungAt()

	SetProcLanDefinitiveFunc("imeisamat" & $indicator)
	#Region ### START Koda GUI section ### Form=
	Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
	Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
	Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
	GUICtrlSetData($Combo1, _CommListPorts(1))
	GUICtrlCreateGroup("", -99, -99, 1, 1)
	Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
	Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
	Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
	Global $Label3 = GUICtrlCreateLabel("SELECT MODEM PORT.", 312, 80, 126, 17)
	Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
	Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
	GUISetState(@SW_SHOW)
	#EndRegion ### END Koda GUI section ###
	While 1
		$nMsg = GUIGetMsg()
		Switch $nMsg
			Case $GUI_EVENT_CLOSE
				GUIDelete($FormCOM)
				EnableButtons()
				ExitLoop

			Case $OpenDeviceMGM
				OpenDevMenu()

			Case $ButtonrefreshComm
				GUICtrlSetData($Combo1,"")
				GUICtrlSetData($Combo1, _CommListPorts(1))

			Case $ButtonSelectCom
				Global $commselected = GUICtrlRead($Combo1)
				Global $finalcom = StringTrimLeft($commselected, 3)
				If $commselected == "" Then
					MsgBox(16, "Error", "No CommPort Selected!")
				Else
					GUIDelete($FormCOM)
					Global $err = ""
					_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
					If $err == "" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] )
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Global $star = TimerInit()
						Do
							_CommSendString("AT" & @CR, 1)
							$instrcheck = _commGetLine(@CR, 20, 200)
							Sleep(20)
							If $instrcheck == "" Then
								Global $Com = 1
							Else
								$Com = 0
								ExitLoop
							EndIf
						Until TimerDiff($star) > 3000
						If $Com == 1 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Return False
							ExitLoop
						Else
							While 1
								$instr = _commGetLine(@CR, 20, 200)
								If StringInStr($instr, "OK") <> 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF )
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_CommSendString("AT+DEVCONINFO" & @CR, 1)
									$instr = ''
									Global $star = TimerInit()
									Global $hardimei = False
									Do
										$instr = _commGetLine("#", 0, 200)
										if StringInStr($instr, "IMEI") <> 0 Then
											Global $arraydedatos = StringSplit(StringSplit($instr, ":")[2], ";")
											For $i = 1 To UBound($arraydedatos, $UBOUND_ROWS) - 1
												If StringInStr($arraydedatos[$i], 'IMEI') Then
													Global $hardimei = StringReplace(StringReplace(StringReplace($arraydedatos[$i], "IMEI", ""), "(", ""), ")", "")
												EndIf
											Next
											ExitLoop
										EndIf
									Until TimerDiff($star) > 10000
									If $hardimei = False Then
										$instr = ''
										Global $hardimei = ''
										_CommSendString("AT+GSN" & @CR, 1)
										Sleep(3000)
										Global $star = TimerInit()
										Do
											$instr = _commGetLine(@CR, 20, 200)
											If StringInStr($instr, 'AT') == 0 and StringInStr($instr, 'OK') == 0 And StringLen($instr) >= 15 Then
												Global $hardimei = $instr
												ExitLoop
											EndIf
										Until TimerDiff($star) > 3000
										If $hardimei <> '' Then
											Return $hardimei
											ExitLoop
										Else
											Return False
											ExitLoop
										EndIf
									Else
										Return $hardimei
										ExitLoop
									EndIf
								ElseIf StringInStr($instr, "ERROR") <> 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Return False
									ExitLoop
								EndIf
							WEnd
							ExitLoop
						EndIf
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Return False
						ExitLoop
					EndIf
				EndIf
		EndSwitch
	WEnd

EndFunc

Func CheckNolicense($operation)

	Local $data = 'operation=' & urlEncode($operation)
	Local $request = _httpRequest($ENDPOINT_READNOCRED, 'POST', $data)
	Local $json = Json_Decode($request[2])
	Local $success = Json_Get($json, '["success"]')

	If $success Then
		Global $cost = Json_Get($json, '["data"]["Cost"]')
		Return $cost
	Else
		Return False
	EndIf

EndFunc

Func CredNoLicense($proce, $num)

	If $activo <> '1' Then
		Global $showme = CheckNolicense($proce)
		If $showme = False Then
			Return False
		Else
			$pro = $proce
			$imei = IxxxProcess(GUICtrlRead($Edit1))
			If StringLen($imei) <> 15 Then
				MsgBox(64, "MC-U Tool", "No Valid IMEI")
				Return True
			EndIf
			Global $checkluhn2 = Luhn(StringTrimRight($imei, 1))
			If $checkluhn2 <> StringRight($imei, 1) Or $imei == "000000000000000" Then
				MsgBox(64, "MC-U Tool", "No Valid IMEI")
				Return True
			Else
				Global $confirm = creditprocess2(1, $imei, $showme, $num)
				If $confirm == "NO" Then
					Return True
				Else
					Return $showme
				EndIf
			EndIf
		EndIf
	EndIf

EndFunc

Func ReadINfoAT()

	SetProcLanDefinitiveFunc("readinfoat" & $indicator)
	#Region ### START Koda GUI section ### Form=
	Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
	Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
	Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
	GUICtrlSetData($Combo1, _CommListPorts(1))
	GUICtrlCreateGroup("", -99, -99, 1, 1)
	Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
	Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
	Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
	Global $Label3 = GUICtrlCreateLabel("SELECT MODEM PORT.", 312, 80, 126, 17)
	Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
	Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
	GUISetState(@SW_SHOW)
	#EndRegion ### END Koda GUI section ###
	While 1
		$nMsg = GUIGetMsg()
		Switch $nMsg
			Case $GUI_EVENT_CLOSE
				GUIDelete($FormCOM)
				Return 0
				ExitLoop

			Case $OpenDeviceMGM
				OpenDevMenu()

			Case $ButtonrefreshComm
				GUICtrlSetData($Combo1,"")
				GUICtrlSetData($Combo1, _CommListPorts(1))

			Case $ButtonSelectCom
				Global $commselected = GUICtrlRead($Combo1)
				Global $finalcom = StringTrimLeft($commselected, 3)
				If $commselected == "" Then
					MsgBox(16, "Error", "No CommPort Selected!")
				Else
					GUIDelete($FormCOM)
					Global $err = ""
					_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
					If $err == "" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] )
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Global $star = TimerInit()
						Do
							_CommSendString("AT" & @CR, 1)
							$instrcheck = _commGetLine(@CR, 20, 200)
							Sleep(20)
							If $instrcheck == "" Then
								Global $Com = 1
							Else
								$Com = 0
								ExitLoop
							EndIf
							Sleep(100)
						Until TimerDiff($star) > 3000
						If $Com == 1 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Return 2
							ExitLoop
						Else
							While 1
								$instr = _commGetLine(@CR, 20, 200)
								If StringInStr($instr, "OK") <> 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_CommSendString("AT+DEVCONINFO" & @CR, 1)
									$instr = ''
									Global $star = TimerInit()
									Global $arraydedatos = False
									Do
										$instr = _commGetLine("#", 0, 200)
										if StringInStr($instr, "IMEI") <> 0 Then
											Global $arraydedatos = StringSplit(StringSplit($instr, ":")[2], ";")
											For $i = 1 To UBound($arraydedatos, $UBOUND_ROWS) - 1
												If StringInStr($arraydedatos[$i], 'MN(') Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "MN", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($arraydedatos[$i], 'VER') And StringInStr($arraydedatos[$i], 'HIDVER') == 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "VER", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($arraydedatos[$i], 'PRD') Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "PRD", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($arraydedatos[$i], 'SN') Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "SN", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($arraydedatos[$i], 'IMEI') Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "IMEI", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($arraydedatos[$i], 'CON') Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "CON", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($arraydedatos[$i], 'LOCK') Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "LOCK", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												EndIf
											Next
											_CommClosePort()
											Return 1
											ExitLoop
										Else
											$arraydedatos = False
										EndIf
									Until TimerDiff($star) > 10000
									If $arraydedatos = False Then
										_CommClosePort()
										Return 1
										ExitLoop
									EndIf
								ElseIf StringInStr($instr, "ERROR") <> 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Return 2
									ExitLoop
								EndIf
							WEnd
							ExitLoop
						EndIf
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Return 2
						ExitLoop
					EndIf
				EndIf
		EndSwitch
	WEnd

EndFunc

Func CSCA($number)

	SetProcLanDefinitiveFunc("csca" & $indicator)
	#Region ### START Koda GUI section ### Form=
	Global $FormCOM = GUICreate("Com Ports Selection", 543, 129, -1, -1)
	Global $GroupComm = GUICtrlCreateGroup("Com Ports", 8, 8, 297, 81)
	Global $Combo1 = GUICtrlCreateCombo("", 32, 40, 233, 25, BitOR($CBS_DROPDOWN,$CBS_AUTOHSCROLL))
	GUICtrlSetData($Combo1, _CommListPorts(1))
	GUICtrlCreateGroup("", -99, -99, 1, 1)
	Global $ButtonSelectCom = GUICtrlCreateButton("Select Port", 224, 96, 75, 25)
	Global $Label1 = GUICtrlCreateLabel("CHECK COM PORTS AVAILABLE", 312, 16, 228, 17)
	Global $Label2 = GUICtrlCreateLabel("CLICK REFRESH IF NECESSARY AND", 312, 48, 214, 17)
	Global $Label3 = GUICtrlCreateLabel("SELECT MODEM PORT.", 312, 80, 126, 17)
	Global $ButtonrefreshComm = GUICtrlCreateButton("Refresh", 24, 96, 75, 25)
	Global $OpenDeviceMGM = GUICtrlCreateButton("Device Manager", 446, 94, 91, 25)
	GUISetState(@SW_SHOW)
	#EndRegion ### END Koda GUI section ###
	While 1
		$nMsg = GUIGetMsg()
		Switch $nMsg
			Case $GUI_EVENT_CLOSE
				GUIDelete($FormCOM)
				Return 0
				ExitLoop

			Case $OpenDeviceMGM
				OpenDevMenu()

			Case $ButtonrefreshComm
				GUICtrlSetData($Combo1,"")
				GUICtrlSetData($Combo1, _CommListPorts(1))

			Case $ButtonSelectCom
				Global $commselected = GUICtrlRead($Combo1)
				Global $finalcom = StringTrimLeft($commselected, 3)
				If $commselected == "" Then
					MsgBox(16, "Error", "No CommPort Selected!")
				Else
					GUIDelete($FormCOM)
					Global $err = ""
					_CommSetPort($finalcom, $err, 115200, 8, 0, 1, 2, 0, 0)
					If $err == "" Then
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] )
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Global $star = TimerInit()
						Do
							_CommSendString("AT" & @CR, 1)
							$instrcheck = _commGetLine(@CR, 20, 200)
							Sleep(20)
							If $instrcheck == "" Then
								Global $Com = 1
							Else
								$Com = 0
								ExitLoop
							EndIf
							Sleep(100)
						Until TimerDiff($star) > 3000
						If $Com == 1 Then
							_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
							_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
							Return 0
							ExitLoop
						Else
							While 1
								$instr = _commGetLine(@CR, 20, 200)
								If StringInStr($instr, "OK") <> 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_CommSendString("AT+DEVCONINFO" & @CR, 1)
									$instr = ''
									Global $star = TimerInit()
									Global $arraydedatos = False
									Do
										$instr = _commGetLine("#", 0, 200)
										if StringInStr($instr, "IMEI") <> 0 Then
											Global $arraydedatos = StringSplit(StringSplit($instr, ":")[2], ";")
											For $i = 1 To UBound($arraydedatos, $UBOUND_ROWS) - 1
												If StringInStr($arraydedatos[$i], 'MN(') Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "MN", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($arraydedatos[$i], 'VER') And StringInStr($arraydedatos[$i], 'HIDVER') == 0 Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "VER", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($arraydedatos[$i], 'PRD') Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "PRD", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($arraydedatos[$i], 'SN') Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "SN", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($arraydedatos[$i], 'IMEI') Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "IMEI", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($arraydedatos[$i], 'CON') Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "CON", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												ElseIf StringInStr($arraydedatos[$i], 'LOCK') Then
													_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & StringReplace(StringReplace(StringReplace($arraydedatos[$i], "LOCK", ""), "(", ""), ")", "") & @CRLF)
													_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
												EndIf
											Next
											ExitLoop
										Else
											$arraydedatos = False
										EndIf
									Until TimerDiff($star) > 10000
									If $arraydedatos = False Then
										_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[12] & @CRLF)
										_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									EndIf
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[13])
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									_CommSendString('AT+CSCA="' & $number & '",145' & @CR, 1)
									$instr = ''
									Global $star = TimerInit()
									Do
										$instr = _commGetLine(@CR, 0, 200)
										If StringInStr($instr, "OK") <> 0 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[14] & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											ExitLoop
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[15] & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											ExitLoop
										EndIf
									Until TimerDiff($star) > 10000
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[16])
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									$instr = ''
									_CommSendString('AT+CSCA?' & @CR, 1)
									Sleep(2000)
									Global $star = TimerInit()
									Do
										$instr = _commGetLine('#', 0, 200)
										If StringInStr($instr, $number) <> 0 Then
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[17] & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Return 1
											ExitLoop
										Else
											_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[18] & @CRLF)
											_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
											Return 0
											ExitLoop
										EndIf
									Until TimerDiff($star) > 10000
								ElseIf StringInStr($instr, "ERROR") <> 0 Then
									_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[19] & @CRLF)
									_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
									Return 0
									ExitLoop
								EndIf
							WEnd
							ExitLoop
						EndIf
					Else
						_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[20] & @CRLF)
						_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
						Return 0
						ExitLoop
						EndIf
					EndIf
			EndSwitch
	WEnd

EndFunc

Func Deactivate($username)

	Local $data = 'username=' & urlEncode($username)
	Local $request = _httpRequest($ENDPOINT_DEACTIVATE, 'POST', $data)
	Local $json = Json_Decode($request[2])
	Local $success = Json_Get($json, '["success"]')

EndFunc

Func warrior($warriorcommand)

	SetProcLanDefinitiveFunc("warrior" & $indicator)
	Global $salida = ''
	If Not FileExists(@ScriptDir & "\Tmtk.exe") Then
		FileInstall("Tmtk.exe", @ScriptDir & "\Tmtk.exe", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] )
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	MsgBox(64, "MC-U Tool", "Por Favor mantenga la pantalla de su dispositivo activa durante el proceso!" & @CRLF & @CRLF & "Please keep your phone screen alive during the process!")
	Global $ipid = Run("Tmtk.exe", "", @SW_HIDE, $STDIN_CHILD + $STDOUT_CHILD)
	Do
		Global $soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		Sleep(5)
	Until $soutput <> ""
	Global $crypted = DecryptKey($soutput)
	StdinWrite($ipid, $crypted & @LF )
	Global $star = TimerInit()
	Do
		$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
		If StringInStr($soutput, "Iniciando") <> 0 Then
			ExitLoop
		EndIf
		Sleep(100)
	Until TimerDiff($star) > 5000
	If StringInStr($soutput, "Iniciando") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] )
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		Global $star = TimerInit()
		Global $triger = 0
		Do
			$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
			If StringInStr($soutput, "selinux: permissive") <> 0 Or StringInStr($soutput, "#") <> 0 Then
				$triger = 1
				ExitLoop
			ElseIf StringInStr($soutput, "firmware") <> 0 Or StringInStr($soutput, "support") <> 0 Then
				$triger = 2
				ExitLoop
			ElseIf StringInStr($soutput, "Incompatible platform") <> 0 Then
				$triger = 3
				ExitLoop
			EndIf
			Sleep(100)
		Until TimerDiff($star) > 30000
		If $triger = 1 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			Global $writewarrior = StringSplit($warriorcommand, "}")
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] )
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			For $i = 1 To UBound($writewarrior, $UBOUND_ROWS) - 1
				StdinWrite($ipid, $writewarrior[$i] & @LF )
				Sleep(1000)
				Do
					$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
					$salida &= $soutput
					Sleep(100)
				Until StringInStr($soutput, "Type")
			Next
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("Tmtk.exe")
			ProcessClose("Tside.exe")
			FileDelete(@ScriptDir & "\Tmtk.exe")
			Return 1
		ElseIf $triger = 2 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("Tmtk.exe")
			ProcessClose("Tside.exe")
			FileDelete(@ScriptDir & "\Tmtk.exe")
			Return 2
		ElseIf $triger = 3 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("Tmtk.exe")
			ProcessClose("Tside.exe")
			FileDelete(@ScriptDir & "\Tmtk.exe")
			Return 3
		Else
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			ProcessClose("Tmtk.exe")
			ProcessClose("Tside.exe")
			FileDelete(@ScriptDir & "\Tmtk.exe")
			Return 0
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		ProcessClose("Tmtk.exe")
		ProcessClose("Tside.exe")
		FileDelete(@ScriptDir & "\Tmtk.exe")
		Return 0
	EndIf

EndFunc

Func MTKSPRUnlock()

	SetProcLanDefinitiveFunc("lgmtkunlockadb" & $indicator)
	Global $ejec = IsCreditNedded2("132", $key)
	Global $var = shori($ejec[1], $key)
	Global $Unlock = StringSplit($var, "{")
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	If Not FileExists(@ScriptDir & "\Resources\LGQMT.mcu") Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$sDownloaderTitle = "Descargando Resources"
		$url            = "http://mcu-tool.com/MCU-Tool Resources/LGQMT/LGQMT.mcu"
		$file           = "LGQMT.mcu"
		$name           = "LGQMT.mcu"
		$dir            = @ScriptDir & "\Resources\"
		_webDownloader($url, $file, $name, $dir, $sDownloaderTitle)
	EndIf
	If FileExists(@ScriptDir & "\Resources\LGQMT.mcu") Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3])
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$ipid = _Crypt_DecryptFile(@ScriptDir & "\Resources\LGQMT.mcu", @TempDir & "\LGQMT.zip", $decrypt, $iAlgorithm)
		ProcessWaitClose($ipid)
		$ipid = _Zip_UnzipAll(@TempDir & "\LGQMT.zip", @TempDir, 1)
		ProcessWaitClose($ipid)
		FileDelete(@TempDir & "\LGQMT.zip")
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF )
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$ipid = Run("adb shell mkdir /data/local/tmp/tmp/", "", @SW_HIDE)
		ProcessWaitClose($ipid)
		$ipid = Run("adb push " & @TempDir & "/tmp/carrier /data/local/tmp/tmp/", "", @SW_HIDE)
		ProcessWaitClose($ipid)
		$ipid = Run("adb push " & @TempDir & "/tmp/md1img_a /data/local/tmp/tmp/", "", @SW_HIDE)
		ProcessWaitClose($ipid)
		$ipid = Run("adb push " & @TempDir & "/tmp/md1img_b /data/local/tmp/tmp/", "", @SW_HIDE)
		ProcessWaitClose($ipid)
		$ipid = Run("adb push " & @TempDir & "/tmp/nvdata /data/local/tmp/tmp/", "", @SW_HIDE)
		ProcessWaitClose($ipid)
		$ipid = Run("adb push " & @TempDir & "/tmp/nvram /data/local/tmp/tmp/", "", @SW_HIDE)
		ProcessWaitClose($ipid)
		$ipid = Run("adb push " & @TempDir & "/tmp/SIM /data/local/tmp/tmp/", "", @SW_HIDE)
		ProcessWaitClose($ipid)
		$ipid = Run("adb shell chmod 0777 /data/local/tmp/tmp/SIM", "", @SW_HIDE)
		ProcessWaitClose($ipid)
		$respuestawarrior = warrior("dd if=/data/local/tmp/tmp/carrier of=/dev/block/platform/mtk-msdc.0/11230000.msdc0/by-name/carrier}dd if=/data/local/tmp/tmp/nvdata of=/dev/block/platform/mtk-msdc.0/11230000.msdc0/by-name/nvdata}dd if=/data/local/tmp/tmp/nvram of=/dev/block/platform/mtk-msdc.0/11230000.msdc0/by-name/nvram}dd if=/data/local/tmp/tmp/md1img_a of=/dev/block/platform/mtk-msdc.0/11230000.msdc0/by-name/md1img_a}dd if=/data/local/tmp/tmp/md1img_b of=/dev/block/platform/mtk-msdc.0/11230000.msdc0/by-name/md1img_b}am start -a android.intent.action.MAIN -n com.lge.hiddenmenu/.ModemProtocol.ModemProtocolMain}exit")
		ProcessWaitClose($ipid)
		If $respuestawarrior = 1 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[11])
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			$ipid = Run("adb kill-server", "", @SW_HIDE)
			ProcessWaitClose($ipid)
			$ipid = Run("adb start-server", "", @SW_HIDE)
			ProcessWaitClose($ipid)
			$ipid = Run($Unlock[9], "", @SW_HIDE)
			ProcessWaitClose($ipid)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[6] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[7] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			$ipid = Run($Unlock[10], "", @SW_HIDE)
			ProcessWaitClose($ipid)
			$ipid = Run($Unlock[11], "", @SW_HIDE)
			ProcessWaitClose($ipid)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[8] )
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			$ipid = Run("adb reboot", "", @SW_HIDE)
			ProcessWaitClose($ipid)
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[9] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			DirRemove(@TempDir  & "\tmp", $DIR_REMOVE)
			Return 1
		ElseIf $respuestawarrior = 3 Then
			DirRemove(@TempDir  & "\tmp", $DIR_REMOVE)
			Return 3
		Else
			DirRemove(@TempDir  & "\tmp", $DIR_REMOVE)
			Return 2
		EndIf
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[10] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		DirRemove(@TempDir  & "\tmp", $DIR_REMOVE)
		Return 0
	EndIf

EndFunc

Func MTKUnlock()

	SetProcLanDefinitiveFunc("mtk" & $indicator)
	Global $ejec = IsCreditNedded2("133", $key)
	Global $var = shori($ejec[1], $key)
	Global $mtkunlock = StringSplit($var, "{")
	If Not FileExists(@ScriptDir & "\mir_mtk") Then
		FileInstall("mir_mtk", @ScriptDir & "\mir_mtk", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	$ipid = Run($mtkunlock[1], "", @SW_HIDE)
	ProcessWaitClose($ipid)
	$ipid = Run($mtkunlock[2], "", @SW_HIDE)
	ProcessWaitClose($ipid)
	$ipid = Run($mtkunlock[3], "", @SW_HIDE)
	ProcessWaitClose($ipid)
	$ipid = Run($mtkunlock[4], "", @SW_HIDE)
	ProcessWaitClose($ipid)
	$ipid = Run($mtkunlock[5], "", @SW_HIDE)
	ProcessWaitClose($ipid)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2])
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	$ipid = Run($mtkunlock[6], "", @SW_HIDE, $stderr_child + $stdout_child)
	ProcessWaitClose($ipid)
	$soutput = StringStripWS(StdoutRead($ipid), $str_stripleading + $str_striptrailing)
	If StringInStr($soutput, "Unlock OK") <> 0 Then
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$ipid = Run($mtkunlock[7], "", @SW_HIDE)
		ProcessWaitClose($ipid)
		FileDelete(@ScriptDir & "\mir_mtk")
		Return 1
	Else
		_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[5] & @CRLF)
		_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
		$ipid = Run($mtkunlock[7], "", @SW_HIDE)
		ProcessWaitClose($ipid)
		FileDelete(@ScriptDir & "\mir_mtk")
		Return 0
	EndIf

EndFunc

Func MTKUnlockWarrior()

	SetProcLanDefinitiveFunc("mtkw" & $indicator)
	Global $ejec = IsCreditNedded2("133", $key)
	Global $var = shori($ejec[1], $key)
	Global $mtkunlock = StringSplit($var, "{")
	If Not FileExists(@ScriptDir & "\mir_mtk") Then
		FileInstall("mir_mtk", @ScriptDir & "\mir_mtk", $FC_OVERWRITE)
	EndIf
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[1] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	$ipid = Run($mtkunlock[1], "", @SW_HIDE)
	ProcessWaitClose($ipid)
	$ipid = Run($mtkunlock[2], "", @SW_HIDE)
	ProcessWaitClose($ipid)
	$ipid = Run($mtkunlock[4], "", @SW_HIDE)
	ProcessWaitClose($ipid)
	$ipid = Run($mtkunlock[5], "", @SW_HIDE)
	ProcessWaitClose($ipid)
	_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[2] & @CRLF)
	_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
	$respuestawarrior = warrior("/data/local/tmp/mir_mtk -uo}exit")
	ProcessWaitClose($ipid)
	If $respuestawarrior = 1 Then
		If StringInStr($salida, "Unlock OK") <> 0 Then
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[3] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			_GUICtrlEdit_SetText($Edit1, GUICtrlRead($Edit1) & $iArrayP[4] & @CRLF)
			_GUICtrlEdit_LineScroll($Edit1, 0, _GUICtrlEdit_GetLineCount($Edit1))
			$ipid = Run($mtkunlock[7], "", @SW_HIDE)
			ProcessWaitClose($ipid)
			FileDelete(@ScriptDir & "\mir_mtk")
			Return 1
		Else
			$ipid = Run($mtkunlock[7], "", @SW_HIDE)
			ProcessWaitClose($ipid)
			FileDelete(@ScriptDir & "\mir_mtk")
			Return 0
		EndIf
	ElseIf $respuestawarrior = 3 Then
		Return 3
	Else
		Return 2
	EndIf

EndFunc